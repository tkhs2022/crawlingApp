{"version":3,"sources":["reducers/loginReducer.js","reducers/componentReducer.js","history.js","store/store.js","actions/action.js","loginUi.jsx","actions/login.js","actions/contentsList.js","commonFunc.js","actions/kubunList.js","actions/crawlingList.js","auth.jsx","card/cardComponent.jsx","show/showContentsBlock.jsx","show/showContentsTitle.jsx","show/showContentsArea.jsx","materialTable/crawlSettingMaterialTable.jsx","show/showModalWindow.jsx","actions/materialTableColumns.js","show/showCrawlSetting.jsx","materialTable/detailCrawlSettingMaterialTable.jsx","materialTable/kubunSettingMaterialTable.jsx","show/showKubunSetting.jsx","toolbar/toolbar.jsx","error/errorBoundary.jsx","app.jsx","index.jsx"],"names":["initialState","session","status","user","thisPort","thisLocation","loginReducer","state","action","type","port","location","fileNameList","selectedFileName","thisContents","mtime","thisKubunList","thisCrawlingList","thisIntervalId","componentReducer","fileName","contentsList","kubunList","crawlingList","intervalId","history","createBrowserHistory","require","store","createStore","combineReducers","router","connectRouter","window","REDUX_DEVTOOLS_EXTENSION","applyMiddleware","routerMiddleware","ActionType","LOGIN_REQUEST","LOGIN_RECEIVE_SUCCESS","nowUser","LOGIN_RECEIVE_FAILED","ActionType2","SET_KUBUN_LIST","nowKubunList","SET_CRAWLING_LIST","nowCrawlingList","SET_SOCKET_INTERVALID","nowIntervalId","Login","password","_user","Promise","resolve","reject","dispatch","fetch","method","mode","heders","body","JSON","stringify","then","response","ok","json","responseJson","result","catch","error","console","LoginUI","props","useState","message","setMessage","setUser","setPassword","Paper","style","maxWidth","margin","marginTop","color","padding","TextField","label","width","marginLeft","marginBottom","fontSize","rows","onChange","e","target","value","Grid","container","justifyContent","direction","item","marginRight","Button","variant","onClick","preventDefault","list","getState","push","onLogin","setThisOriginName","log","href","alert","nowLocation","nowPort","flag","match","replace","getContentsList","selectedContentsList","data","recentUpdateFileDate","fileKubun","request","param","cssFileControl","disableFileName","ableFileName","i","document","styleSheets","length","styleSheetPath","substring","lastIndexOf","disabled","KubunListJsonFileName","setEditKubunList","kbnBefore","before","kbn","kbnnameBefore","kbnname","commentBefore","comment","kbnAfter","after","kbnnameAfter","commentAfter","str","undefined","String","fromCharCode","charCodeAt","isNaN","Number","res","stringToNumber","kbns","findIndex","v","CrawlingListJsonFileName","addNewCrawlingList","newCrawlingList","jigyosyaid","name","crawlingurl","xpathTitle","xpathLink","xpathImage","setUpdateCrawlingList","changedCrawlingUrl","changedCrawlingXpathTitle","changedValueCrawlingXpathLink","changedValueCrawlingXpathImage","crawling","Auth","this","checkAuth","children","React","Component","ContainerAuth","connect","ArticleCardStyle","makeStyles","root","media","height","MediaCardForContentsBlock","Content","classes","className","Card","CardActionArea","source","textDecoration","rel","CardMedia","image","title","CardContent","Typography","component","ContentsBlockControl","Rows","thisContentsArticle","map","index","Kbn","id","DetailOriginal","MoveBlockOnClick","TargetKbn","Caller","SiteHedderActive","SiteHedderActiveM","GetterSiteHedderActive","CaseA","ElementOfContentsBlock","getElementById","TargetContentsBlockClassName","getAttribute","DetailShow","setAttribute","DetailShowActiveSiteHedder","CaseB","DetailHide","ContainerContentsBlockControl","article","ContentsTitleButtonWithBorder","selectedIndex","setState","click","PreClickM","GetterPreClick","ElementPreClick","ContentTitleUnderBorderShow","classList","ContentTitleUnderBorderHide","ContentTitleUnderBorderOriginal","ElementThisClick","SetterPreClick","selected","ContentsTitleBlock","NaviBar","Kbns","noWrap","Transition","in","mount","timeout","ContentsTitleOriginal","TransitionContentsTitleShow","entering","transform","entered","exiting","exited","PreClickMortion","PreClick","SiteHedderActiveMortion","MainBlockControl","ContentsRows","List","ShowContentsArea","clearInterval","set_sokcet_intervalID","ContainerShowContentsArea","int","actions","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Save","CrawlSettingMaterialTable","editableCrawlSetting","columns","options","showTitle","search","tableLayout","overflowX","paging","maxBodyHeight","headerStyle","position","top","searchFieldStyle","icons","icon","tooltip","cellStyle","minWidth","fontWeight","rowData","setItem","modalWrapperFlag","ModalWrapper","Modal","open","onClose","left","onRequestClose","content","KrawlSettingInModal","selectedItem","changedValueCrawlingUrl","setValueCrawlingUrl","changedValueCrawlingXpathTitle","setValueCrawlingXpathTitle","setValueCrawlingXpathLink","setValueCrawlingXpathImage","callUpdateCrawlingList","Fade","defaultValue","kiziid","fullWidth","justify","size","startIcon","ShortKrawlSettingInModal","setModalIndex","RegistKrawlSettingInModal","changedValueKubun","setValueKubun","changedValueKubunName","setValueKubunName","changedValueJigyosyaid","setValueJigyosyaid","changedValueName","setValueName","paramObj","callNewCrawlingList","FormControl","InputLabel","Select","labelId","targetValue","callSetKbnNameLabel","key","MenuItem","KubunSettingInModal","changedValueComment","setValueComment","callNewKubunList","columnsCrawlSetting","field","columnsKubunSetting","columnsDetailCrawlSetting","columnsData","ShowCrawlSetting","UpdateFileDate","recentFileUpdate","modalIndex","execCrawling","element","url","setCrawlingStatus","backgroundColor","startCrawlingStatusInterval","Id","setInterval","callUpdateCrawlingStatus","stopCrawlingStatusInterval","originName","socket","io","on","msg","close","selectedCrawling","spacing","Item","xs","editable","ContainerShowCrawlSetting","DetailCrawlSettingMaterialTable","setData","editableDetailCrawlSetting","onRowDelete","oldData","dataSet","dataDelete","tableData","delete","splice","targetKubun","targetJigyosyaid","setDeleteCrawlingList","setSelectedCrawling","localization","header","editRow","deleteText","KubunSettingMaterialTable","editableKubunSetting","onRowUpdate","newData","dataUpdate","setStateKbns","setDeleteKubunList","ShowKubunSetting","filter","dummyList","setNewKubunList","recentKubunUpdateDate","right","ContainerShowKubunSetting","drawerWidth","useStyles","theme","listItemText","paddingLeft","listItemTextContentsfile","linkElementStyleonLogin","linkElementStyleonLogout","pointerEvents","ContainerResponsiveDrawer","LOGOUT","selectedContentsIndex","setSelectedContentsIndex","opencontents","setOpenContents","styles","handleClick","anchorEl","setAnchorEl","Boolean","selectedIconIndex","setSelectedIconIndex","handleListItemClick","text","callApp","drawer","Toolbar","Date","toLocaleString","Divider","to","ListItem","button","ListItemText","primary","Collapse","unmountOnExit","Box","sx","display","CssBaseline","AppBar","sm","ml","IconButton","event","currentTarget","edge","MenuListProps","role","option","onClickSelectedIcon","flexShrink","Drawer","boxSizing","fontFamily","ErrorBoundary","hasError","errorInfo","componentStack","App","exact","path","Root","ReactDOM","render"],"mappings":"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","file":"static/js/main.7fc78aeb.chunk.js","sourcesContent":["////////////////////////////////////////////////////\r\n// レデューサー\r\n////////////////////////////////////////////////////\r\nexport const dumb = (state = {}) => state;\r\n\r\n////////////////////////////////////////////////////\r\n// ログイン\r\nexport const initialState = {\r\n    session:false,\r\n    status:0,    // 0:処理前 1:ログイン成功 -1:ログイン失敗\r\n    user:null,\r\n    thisPort:3001,\r\n    thisLocation:null\r\n};\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_REQUEST\":\r\n            return { ...state, session:false, status: 0}\r\n        case \"LOGIN_RECEIVE_SUCCESS\":\r\n            return { ...state, session:true, status: 1, user:action.user}\r\n        case \"LOGIN_RECEIVE_FAILED\":\r\n            return { ...state, session:false, status:-1}\r\n        case \"LOGOUT\":\r\n            return { ...state, session:false, status:0}    \r\n        case \"SET_PORT\":\r\n            return { ...state, thisPort:action.port}\r\n        case \"SET_LOCATION_URL\":\r\n            return { ...state, thisLocation:action.location}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default loginReducer;","////////////////////////////////////////////////////\r\n// レデューサー\r\n////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////\r\n// コンポーネントのstate\r\nexport const initialState = {\r\n\tfileNameList:[\"contents\"],\r\n\tselectedFileName:\"contents\",\t// 拡張子は付けない。バックエンドで操作しているため。\r\n\tthisContents:null,\r\n\tmtime:\"未取得\",\r\n\tstatus:\"停止\",\r\n\tthisKubunList:null,\r\n\tthisCrawlingList:null,\r\n\tthisIntervalId:0\r\n};\r\n\r\nexport const componentReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SET_FILENAME_LIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfileNameList:action.fileNameList\r\n\t\t\t}\r\n\r\n\t\tcase \"SET_MTIME\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmtime:action.mtime\r\n\t\t\t}\r\n\t\r\n\t\tcase \"SET_SELECTED_FILENAME\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedFileName:action.fileName,\r\n\t\t\t\tthisContents:action.contentsList\r\n\t\t\t}\r\n\r\n\t\tcase \"SET_CRAWLING_STATUS\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus:action.status,\r\n\t\t\t}\r\n\r\n\t\tcase \"SET_KUBUN_LIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tthisKubunList:action.kubunList\r\n\t\t\t}\r\n\r\n\t\tcase \"SET_CRAWLING_LIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tthisCrawlingList:action.crawlingList\r\n\t\t\t}\r\n\r\n\t\tcase \"SET_SOCKET_INTERVALID\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tthisIntervalId:action.intervalId\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default componentReducer;","const createBrowserHistory = require(\"history\").createBrowserHistory;\r\nconst history = createBrowserHistory();\r\nexport default history;","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\r\nimport loginReducer from '../reducers/loginReducer.js';\r\nimport componentReducer from '../reducers/componentReducer.js';\r\nimport history from '../history.js';\r\n\r\nconst store = createStore (\r\n\tcombineReducers({\r\n\t\trouter: connectRouter(history),\r\n\t\tloginReducer,\r\n\t\tcomponentReducer\r\n\t}),\r\n\twindow.REDUX_DEVTOOLS_EXTENSION && window.REDUX_DEVTOOLS_EXTENSION(),\r\n\tapplyMiddleware(\r\n\t\trouterMiddleware(history)\r\n\t)\r\n);\r\n\r\nexport default store;\r\n","import store from \"../store/store.js\";\r\n/////////////////////////////////////////////////////////////////\r\n// ログイン情報をリクエスト\r\n// ***レスポンスデータのイメージ***\r\n// array{\"status:true, \"result\":{\"user\": \"yamada\"}}\r\nconst Login = (user, password) => {\r\n    var _user = user;\r\n    var _password = password;\r\n    return new Promise((resolve, reject) => {\r\n        store.dispatch(LOGIN_REQUEST());\r\n        fetch(\"/requestLoginInfo\", {\r\n            method: \"POST\",\r\n            mode: \"no-cors\",\r\n            heders: {\r\n                'Content-Type':'application/json;charset=utf-8',\r\n                'Accept':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"user\":user,\r\n                \"password\":password\r\n            })\r\n        })\r\n        .then((response) => {\r\n            if(response.ok) {\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(function(responseJson) {\r\n            if(responseJson.result == true) {\r\n                store.dispatch(LOGIN_RECEIVE_SUCCESS(_user));\r\n                resolve(true);\r\n            } else {\r\n                store.dispatch(LOGIN_RECEIVE_FAILED());\r\n                resolve(false);\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            store.dispatch(LOGIN_RECEIVE_FAILED());\r\n            reject(false);\r\n        });\r\n    });\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n// ここからログイン処理のアクション\r\n////////////////////////////////////////////////////////////////////////////\r\n// アクションタイプをマッピング\r\nexport const ActionType = {\r\n    LOGOUT:\"LOGOUT\",\r\n    LOGIN_REQUEST:\"LOGIN_REQUEST\",\r\n    LOGIN_RECEIVE_SUCCESS:\"LOGIN_RECEIVE_SUCCESS\",\r\n    LOGIN_RECEIVE_FAILED:\"LOGIN_RECEIVE_FAILED\",\r\n    SET_PORT:\"SET_PORT\",\r\n    SET_LOCATION_URL:\"SET_LOCATION_URL\"\r\n}\r\n\r\n// ログアウト処理\r\nexport const LOGOUT = () => {\r\n    return {\r\n        type:ActionType.LOGOUT\r\n    };\r\n}\r\n\r\n// ログインリクエスト中\r\nexport const LOGIN_REQUEST = () => {\r\n    return {\r\n        type: ActionType.LOGIN_REQUEST\r\n    };\r\n}\r\n\r\n// リクエスト成功\r\nexport const LOGIN_RECEIVE_SUCCESS = (nowUser) => {\r\n    return {\r\n        type: ActionType.LOGIN_RECEIVE_SUCCESS,\r\n        user:nowUser\r\n    };\r\n}\r\n\r\n// リクエスト失敗\r\nexport const LOGIN_RECEIVE_FAILED = () => {\r\n    return {\r\n        type:ActionType.LOGIN_RECEIVE_FAILED\r\n    };\r\n}\r\n\r\n// ポート番号取得\r\nexport const SET_PORT = (nowPort) => {\r\n    return {\r\n        type:ActionType.SET_PORT,\r\n        port:nowPort\r\n    };\r\n}\r\n\r\n// ロケーションURL取得\r\nexport const SET_LOCATION_URL = (nowLocation) => {\r\n    var pattern = \"localhost\";\r\n    if (nowLocation.match(pattern)) {\r\n        nowLocation = nowLocation.replace(\":3000/\", \"\");\r\n    }\r\n    return {\r\n        type:ActionType.SET_LOCATION_URL,\r\n        location:nowLocation\r\n    };\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n// ここからコンポーネントのアクション\r\n////////////////////////////////////////////////////////////////////////////\r\n// アクションタイプをマッピング\r\nexport const ActionType2 = {\r\n\tSET_FILENAME_LIST:\"SET_FILENAME_LIST\",\r\n    SET_MTIME:\"SET_MTIME\",\r\n\tSET_SELECTED_FILENAME:\"SET_SELECTED_FILENAME\",\r\n    SET_CRAWLING_STATUS:\"SET_CRAWLING_STATUS\",\r\n    SET_KUBUN_LIST:\"SET_KUBUN_LIST\",\r\n    SET_CRAWLING_LIST:\"SET_CRAWLING_LIST\",\r\n    SET_SOCKET_INTERVALID:\"SET_SOCKET_INTERVALID\"\r\n}\r\n\r\n// コンテンツファイルリストを返却\r\nexport const SET_FILENAME_LIST = (param) => {\r\n\treturn {\r\n\t\t\ttype: ActionType2.SET_FILENAME_LIST,\r\n            fileNameList:param\r\n\t};\r\n}\r\n\r\n// ファイル最終更新日時\r\nexport const SET_MTIME = (param) => {\r\n\treturn {\r\n\t\t\ttype:ActionType2.SET_MTIME,\r\n            mtime:param\r\n\t};\r\n}\r\n\r\n// コンテンツファイルリストの中からユーザーが選択したファイルを返却\r\nexport const SET_SELECTED_FILENAME = (selectedFileName, selectedContentsList) => {\r\n\treturn {\r\n\t\t\ttype:ActionType2.SET_SELECTED_FILENAME,\r\n            fileName:selectedFileName,\r\n            contentsList:selectedContentsList\r\n\t};\r\n}\r\n\r\nexport const SET_CRAWLING_STATUS = (nowStatus) => {\r\n    return {\r\n        type:ActionType2.SET_CRAWLING_STATUS,\r\n        status:nowStatus\r\n    }\r\n}\r\n\r\nexport const SET_KUBUN_LIST = (nowKubunList) => {\r\n    return {\r\n        type:ActionType2.SET_KUBUN_LIST,\r\n        kubunList:nowKubunList\r\n    }\r\n}\r\n\r\nexport const SET_CRAWLING_LIST = (nowCrawlingList) => {\r\n    return {\r\n        type:ActionType2.SET_CRAWLING_LIST,\r\n        crawlingList:nowCrawlingList\r\n    }\r\n}\r\n\r\nexport const SET_SOCKET_INTERVALID = (nowIntervalId) => {\r\n    return {\r\n        type:ActionType2.SET_SOCKET_INTERVALID,\r\n        intervalId:nowIntervalId\r\n    }\r\n}\r\n\r\nexport default Login;","///////////////////////////////////////////////////////////////// \n// ログインクラス\n///////////////////////////////////////////////////////////////// \nimport React, { useState } from \"react\";\nimport Login from \"./actions/action.js\";\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport store from \"./store/store.js\";\n\n///////////////////////////////////////////////////////////////// \n// コンポーネント\nexport function LoginUI(props) {\n  const [message, setMessage] = useState(\"未入力。\");\n  const [user, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  ///////////////////////////////////////////////////////////////// \n  // ログインボタン押下処理\n  const onLogin = (e) => {\n    e.preventDefault();\n    if(user && password) {\n      Login(user, password)\n      .then((response) => {\n        var list = store.getState();\n        if(list.loginReducer.status === -1) {\n          setMessage(\"ユーザー名もしくはパスワードが違います。\");\n        } else if(list.loginReducer.status === 1) {\n          setMessage(\"ログイン成功\");\n          props.history.push('/ShowContentsArea');\n        }  \n      });\n    } else {\n      setMessage(\"ユーザー名とパスワードを入力してください。\");\n    }\n  }\n\n    return (\n      <div>\n        <Paper style={{maxWidth:\"25%\", margin:\"0 auto\", marginTop:\"15%\"}}>\n          <div>\n            <div style={{ color: \"red\"}}>\n              <p style={{margin:\"0 auto\", padding:\"10px\"}}>{message}</p>\n            </div>\n            <div>\n              <TextField\n                label=\"ユーザー\"\n                style={{width:\"80%\", marginLeft:\"1.5em\", marginBottom: \"1em\", fontSize:\"midium\"}}\n                rows={1}\n                onChange={(e) => setUser(e.target.value)}\n              ></TextField>\n            </div>\n            <div>\n              <TextField\n                label=\"パスワード\"\n                style={{width: \"80%\", marginLeft:\"1.5em\", marginBottom: \"1em\", fontSize:\"midium\"}}\n                rows={1}\n                onChange={(e) => setPassword(e.target.value)}\n              ></TextField>\n            </div>\n          </div>\n          <Grid container style={{fontSize:\"midium\"}} justifyContent=\"flex-end\" direction=\"row\">\n            <Grid item style={{marginRight:\"2em\"}}>\n              <Button\n                style={{margin: \"1.5em\", fontSize:\"midium\"}}\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={(e) => onLogin(e)}\n              >\n              ログイン\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n}\n\nexport default LoginUI;","import * as action from \"../actions/action.js\";\r\nimport store from \"../store/store.js\";\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ポート番号とロケーションURL取得\r\nexport default function setThisOriginName() {\r\n\treturn new Promise((resolve, reject) => {\r\n        console.log(\"this is setThisOriginName\");\r\n        var thisLocation = window.location.href;\r\n        console.log(thisLocation);\r\n\t\t// fetch処理\r\n\t\tfetch(\"/setThisOriginName\", {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t})\r\n\t\t.then(function(response) {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else {\r\n\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\treject(false);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((responseJson) => {\r\n\t\t\tif(responseJson.flag) {\r\n\t\t\t\tstore.dispatch(action.SET_PORT(responseJson.thisPort));\r\n\t\t\t\tstore.dispatch(action.SET_LOCATION_URL(thisLocation));\r\n                console.log(store.getState().loginReducer.thisPort);\r\n                console.log(store.getState().loginReducer.thisLocation);\r\n                resolve(true);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n\t})\r\n}","\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツリスト\r\n///////////////////////////////////////////////////////////////// \r\nimport * as action from \"../actions/action.js\";\r\nimport store from \"../store/store.js\";\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツリストのゲッター\r\nexport default function getContentsList(fileName) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// fetch処理\r\n\t\tfetch(\"/getContentsList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileName\":fileName\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(function(responseJson) {\r\n\t\t\tstore.dispatch(action.SET_SELECTED_FILENAME(fileName, responseJson.data));\r\n\t\t\tresolve(responseJson);\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treject({flag:false});\r\n\t\t});\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ファイルの更新日時を返す\r\nexport function recentUpdateFileDate(fileKubun, request) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// fetch処理\r\n\t\tfetch(\"/recentUpdateFileDate\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileKubun\":fileKubun,\r\n\t\t\t\t\"request\":request\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(function(responseJson) {\r\n\t\t\tif(request == \"list\") {\r\n\t\t\t\tstore.dispatch(action.SET_FILENAME_LIST(responseJson));\r\n\t\t\t} else if(request == \"mtime\") {\r\n\t\t\t\tstore.dispatch(action.SET_MTIME(responseJson.mtime));\r\n\t\t\t}\r\n\t\t\tresolve(responseJson);\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treject({flag:false});\r\n\t\t});\r\n\t});\r\n}","///////////////////////////////////////////////////////////////// \r\n// CSSファイルの無効、有効化\r\nexport default function cssFileControl(disableFileName, ableFileName) {\r\n\tfor(var i = 0; i < document.styleSheets.length; i++) {\r\n\t\tif (document.styleSheets[i].href != null) {\r\n\t\t\tvar styleSheetPath = document.styleSheets[i].href;\r\n\t\t\tvar fileName = styleSheetPath.substring(styleSheetPath.lastIndexOf('/')+1, styleSheetPath.length);\r\n\t\t\tif (fileName === disableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = true;\r\n\t\t\t}\r\n\t\t\telse if (fileName === ableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// CSSファイルの無効化\r\nexport function cssFileDisable(disableFileName) {\r\n\tfor(var i = 0; i < document.styleSheets.length; i++) {\r\n\t\tif (document.styleSheets[i].href != null) {\r\n\t\t\tvar styleSheetPath = document.styleSheets[i].href;\r\n\t\t\tvar fileName = styleSheetPath.substring(styleSheetPath.lastIndexOf('/')+1, styleSheetPath.length);\r\n\t\t\tif (fileName === disableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// CSSファイルの有効化\r\nexport function cssFileAble(ableFileName) {\r\n\tfor(var i = 0; i < document.styleSheets.length; i++) {\r\n\t\tif (document.styleSheets[i].href != null) {\r\n\t\t\tvar styleSheetPath = document.styleSheets[i].href;\r\n\t\t\tvar fileName = styleSheetPath.substring(styleSheetPath.lastIndexOf('/')+1, styleSheetPath.length);\r\n\t\t\tif (fileName === ableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リストの区分の半角変換と数値変換処理\r\nexport function stringToNumber(param) {\r\n\ttry {\r\n\t\t// 区分の半角変換と数値変換処理\r\n\t\tvar result = {};\r\n\t\tvar str = \"\";\r\n\t\tif(param === undefined || param === \"\") {\r\n\t\t\talert(\"区分には数値を入力してください!\");\r\n\t\t\tthrow \"(区分リスト新規登録処理)区分入力エラー\"; \r\n\t\t} else {\r\n\t\t\tfor(let i=0; i < param.length; i++) {\r\n\t\t\t\tstr += String.fromCharCode(param.charCodeAt(i) - 0xFEE0);\r\n\t\t\t}\r\n\t\t\t// paramが数値型の場合、lengthは取れない。ここで代入する。\r\n\t\t\tif(str === \"\") {\r\n\t\t\t\tstr = param;\r\n\t\t\t}\r\n\t\t\t// 数値変換の処理結果がNan=数値以外であればエラー\r\n\t\t\tif(isNaN(str)) {\r\n\t\t\t\t// 入力値が半角の場合、charCodeAtメソッドの結果がNaNとなる。回避策のIF文\r\n\t\t\t\tif(isNaN(Number(param))) {\r\n\t\t\t\t\t// 1.半角数値の場合\r\n\t\t\t\t\talert(\"区分には数値を入力してください!\");\r\n\t\t\t\t\tthrow \"(区分リスト新規登録処理)区分入力エラー\"; \r\n\t\t\t\t\t// str = param;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 2.半角数字の文字列型の場合\r\n\t\t\t\t\tstr = Number(param);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// 3.全角→半角且つ数値型に変換する場合\r\n\t\t\t\tstr = Number(str);            \r\n\t\t\t}\r\n\t\t\tresult.flag = true;\r\n\t\t\tresult.res = str;\r\n\t\t}\r\n\t} catch(error) {\r\n\t\tresult.flag = false;\r\n\t\tresult.res = str;\r\n\t\tconsole.error(error);\r\n\t} finally {\r\n\t\treturn result;\t\r\n\t}\r\n}","\r\nimport {stringToNumber} from '../commonFunc';\r\nimport * as action from \"../actions/action.js\";\r\nimport store from \"../store/store.js\";\r\nconst KubunListJsonFileName = \"kbns.json\";\r\nconst krawlingListJsonFileName = \"crawlingList.json\";\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リスト \r\n///////////////////////////////////////////////////////////////// \r\n///////////////////////////////////////////////////////////////// \r\n// 区分リストのゲッター\r\nexport default function getKbnList() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// fetch処理\r\n\t\tfetch(\"/getKbnList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileName\":KubunListJsonFileName\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(function(responseJson) {\r\n\t\t\tstore.dispatch(action.SET_KUBUN_LIST(responseJson.data));\r\n\t\t\tresolve(responseJson);\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treject({flag:false});\r\n\t\t});\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リスト新規登録処理\r\nexport function setNewKubunList(changedValueKubun, changedValueKubunName, changedValueComment) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// 区分の半角変換と数値変換処理\r\n\t\tvar str = \"\";\r\n\t\tfor(let i=0; i < changedValueKubun.length; i++) {\r\n\t\t\tstr += String.fromCharCode(changedValueKubun.charCodeAt(i) - 0xFEE0);\r\n\t\t}\r\n\t\t// 数値変換の処理結果がNan=数値以外であればエラー\r\n\t\tif(isNaN(Number(str))) {\r\n\t\t\tif(isNaN(Number(changedValueKubun))) {\r\n\t\t\t\talert(\"区分には数値を入力してください!\");\r\n\t\t\t\tthrow \"(区分リスト新規登録処理)区分入力エラー\"; \r\n\t\t\t} else {\r\n\t\t\t\tchangedValueKubun = Number(changedValueKubun);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tchangedValueKubun = Number(str);\r\n\t\t}\r\n\t\t// findindexで検索結果0件の場合は-1を返す。区分リストの追加登録を行う。\r\n\t\tvar thisKubunList = store.getState().componentReducer.thisKubunList;\r\n\t\tvar target = thisKubunList.kbns.findIndex((v) => v.kbn === changedValueKubun);\r\n\t\tif(target === -1) {\r\n\t\t\t// fetch処理\r\n\t\t\tfetch(\"/addNewKubunList\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\theders: {\r\n\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tfileName:KubunListJsonFileName,\r\n\t\t\t\t\tkbn:changedValueKubun,\r\n\t\t\t\t\tkbnname:changedValueKubunName,\r\n\t\t\t\t\tcomment:changedValueComment,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(function(responseJson) {\r\n\t\t\t\tstore.dispatch(action.SET_KUBUN_LIST(responseJson.data));\r\n\t\t\t\tresolve(responseJson); // jsonオブジェクトを返却する \r\n\t\t\t\tif(responseJson.flag) {\r\n\t\t\t\t\talert(\"区分を追加しました!!\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\talert(\"区分リストの追加に失敗しました!\");\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\treject(false);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert(\"入力した区分リストは既に存在します!\");\r\n\t\t}\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リスト更新処理\r\nexport function setEditKubunList(props) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tvar result = {};\r\n\t\tvar kbnBefore = props.before[0].kbn;\r\n\t\tvar kbnnameBefore = props.before[0].kbnname;\r\n\t\tvar commentBefore = props.before[0].comment;\r\n\t\tvar kbnAfter = props.after[0].kbn;\r\n\t\tvar kbnnameAfter = props.after[0].kbnname;\r\n\t\tvar commentAfter = props.after[0].comment;\r\n\t\t// 区分の半角と数値を変換する外部メソッドを呼び出す\r\n\t\t// stringToNumber:返却値:{flag:\"変換成功、失敗フラグ, res:\"\"変換後の値\"}\r\n\t\tresult = stringToNumber(kbnAfter);\r\n\t\tkbnAfter = result[\"res\"];\r\n\t\t// 編集後の値についてnullチェック\r\n\t\tif(kbnnameAfter === undefined || commentAfter === undefined || kbnnameAfter === \"\" || commentAfter === \"\") {\r\n\t\t\talert(\"全ての項目を入力してください!\");\r\n\t\t\tthrow \"全ての項目を入力してください!\";\r\n\t\t}\r\n\t\t// 区分の変換結果がtrueの場合のみ、後続の処理を続行する\r\n\t\tif(!result.flag) {\r\n\t\t\talert(\"区分は数値を入力してください。\");\t\t\t\t\t\r\n\t\t\treject(result);\r\n\t\t}\r\n\t\t// findindexで検索結果0件の場合は-1を返す。クローリング情報の更新は不可。\r\n\t\tvar thisKubunList = store.getState().componentReducer.thisKubunList;\r\n\t\tvar target = thisKubunList.kbns.findIndex((v) => v.kbn === kbnBefore);\r\n\t\tif(target === -1) {\r\n\t\t\talert(\"区分リストの編集に失敗しました!該当の区分が見つかりません!\");\r\n\t\t\tresult.flag = false;\r\n\t\t\treject(result);\r\n\t\t} else {\r\n\t\t\tvar target = thisKubunList.kbns.findIndex((v) => v.kbn === kbnAfter);\r\n\t\t\tif(target === -1) {\r\n\t\t\t\talert(\"区分の値は更新できません。\");\r\n\t\t\t\tresult.flag = false;\r\n\t\t\t\treject(result);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// fetch処理\r\n\t\tfetch(\"/setEditKubunList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"kubunFileName\":KubunListJsonFileName,\r\n\t\t\t\t\"krawlingListFileName\":krawlingListJsonFileName,\r\n\t\t\t\t\"kbnBefore\":kbnBefore,\r\n\t\t\t\t\"kbnnameBefore\":kbnnameBefore,\r\n\t\t\t\t\"commentBefore\":commentBefore,\r\n\t\t\t\t\"kbnAfter\":kbnAfter,\r\n\t\t\t\t\"kbnnameAfter\":kbnnameAfter,\r\n\t\t\t\t\"commentAfter\":commentAfter,\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(function(response) {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else {\r\n\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\treject(result);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((responseJson) => {\r\n\t\t\t// ストア更新\r\n\t\t\tstore.dispatch(action.SET_KUBUN_LIST(responseJson.data[\"kbnList\"]));\r\n\t\t\tstore.dispatch(action.SET_CRAWLING_LIST(responseJson.data[\"crawlingList\"]));\r\n\t\t\tresolve(responseJson);\r\n\t\t\tif(responseJson.flag) {\r\n\t\t\t\talert(\"区分リストを編集しました!\");\r\n\t\t\t\tresolve(result);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\talert(\"区分リストの削除に失敗しました!\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject(result);\r\n\t\t});\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リストデータ削除処理\r\nexport function setDeleteKubunList(props) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// 削除対象の区分を代入\r\n\t\tvar targetKubun = props[\"delete\"][0].kbn;\r\n\t\t// fetch処理\r\n\t\tfetch(\"/setDeleteKubunList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json' \r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileName\":KubunListJsonFileName,\r\n\t\t\t\t\"targetKubun\":targetKubun,\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(function(response) {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else {\r\n\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\treject(false);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((responseJson) => {\r\n\t\t\tif(responseJson.flag) {\r\n\t\t\t\tstore.dispatch(action.SET_KUBUN_LIST(responseJson.data));\r\n\t\t\t\talert(\"区分リストを削除しました!\");\r\n\t\t\t\tresolve(true);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\talert(\"区分リストの削除に失敗しました!\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject(false);\r\n\t\t});\r\n\t})\r\n}","import * as action from \"../actions/action.js\";\r\nimport store from \"../store/store.js\";\r\nconst CrawlingListJsonFileName = \"crawlingList.json\";\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリングリスト\r\n/////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////// \r\n// クローリングリストのゲッター\r\nexport default function getCrawlingList() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// fetch処理\r\n\t\tfetch(\"/getCrawlingList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileName\":CrawlingListJsonFileName\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(function(responseJson) {\r\n\t\t\tstore.dispatch(action.SET_CRAWLING_LIST(responseJson.data));\r\n\t\t\tresolve(responseJson);\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treject({flag:false});\r\n\t\t});\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリングリスト新規登録処理\r\nexport function addNewCrawlingList(props) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\ttry {\r\n\t\t\t// オブジェクトにデータを追加\r\n\t\t\tvar newCrawlingList = {};\r\n\t\t\tnewCrawlingList[\"kbn\"] = props.kbn;\r\n\t\t\tnewCrawlingList[\"kbnname\"] = props.kbnname;\r\n\t\t\tnewCrawlingList[\"jigyosyaid\"] = props.jigyosyaid;\r\n\t\t\tnewCrawlingList[\"name\"] = props.name;\r\n\t\t\tnewCrawlingList[\"crawlingurl\"] = props.crawlingurl;\r\n\t\t\tnewCrawlingList[\"xpathTitle\"] = props.xpathTitle.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\tnewCrawlingList[\"xpathLink\"] = props.xpathLink.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\tnewCrawlingList[\"xpathImage\"] = props.xpathImage.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t// 編集後の値についてnullチェック\r\n\t\t\tif(\r\n\t\t\t\tnewCrawlingList[\"kbn\"]  == \"\" ||\r\n\t\t\t\tnewCrawlingList[\"jigyosyaid\"] === \"\" ||\r\n\t\t\t\tnewCrawlingList[\"name\"] === \"\" ||\r\n\t\t\t\tnewCrawlingList[\"crawlingurl\"] === \"\" ||\r\n\t\t\t\tnewCrawlingList[\"xpathTitle\"] === \"\" ||\r\n\t\t\t\tnewCrawlingList[\"xpathLink\"] === \"\" ||\r\n\t\t\t\tnewCrawlingList[\"xpathImage\"] === \"\"\r\n\t\t\t) {\r\n\t\t\t\talert(\"全ての項目を入力してください!\");\r\n\t\t\t\tthrow \"全ての項目を入力してください!\";\r\n\t\t\t}\r\n\t\t\t// fetch処理\r\n\t\t\tfetch(\"/addNewCrawlingList\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\theders: {\r\n\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tfileName:CrawlingListJsonFileName,              \r\n\t\t\t\t\tkbn:newCrawlingList[\"kbn\"],\r\n\t\t\t\t\tkbnname:newCrawlingList[\"kbnname\"],\r\n\t\t\t\t\tjigyosyaid:newCrawlingList[\"jigyosyaid\"],\r\n\t\t\t\t\tname:newCrawlingList[\"name\"],\r\n\t\t\t\t\tcrawlingurl:newCrawlingList[\"crawlingurl\"],\r\n\t\t\t\t\txpathTitle:newCrawlingList[\"xpathTitle\"],\r\n\t\t\t\t\txpathLink:newCrawlingList[\"xpathLink\"],\r\n\t\t\t\t\txpathImage:newCrawlingList[\"xpathImage\"]\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(function(responseJson) {\r\n\t\t\t\tstore.dispatch(action.SET_CRAWLING_LIST(responseJson.data));\r\n\t\t\t\tresolve(responseJson); // jsonオブジェクトを返却する \r\n\t\t\t\tif(responseJson.flag) {\r\n\t\t\t\t\talert(\"クローリング対象を追加しました!\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch(error) {\r\n\t\t\talert(\"クローリング対象の追加に失敗しました!\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject(false);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリングリスト更新処理\r\nexport function setUpdateCrawlingList(\r\n\titem,\r\n\tchangedCrawlingUrl,\r\n\tchangedCrawlingXpathTitle,\r\n\tchangedValueCrawlingXpathLink,\r\n\tchangedValueCrawlingXpathImage) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\ttry {\r\n\t\t\tvar thisCrawlingList = store.getState().componentReducer.thisCrawlingList;\r\n\t\t\tvar target = thisCrawlingList.crawling.findIndex((v) => v.kbn === item.kbn && v.jigyosyaid === item.jigyosyaid);\r\n\t\t\t// findindexで検索結果0件の場合は-1を返す。クローリング情報の更新は不可。\r\n\t\t\tif(target === -1) {\r\n\t\t\t\talert(\"クローリングの設定を更新できませんでした!\");\r\n\t\t\t} else {\r\n\t\t\t\tthisCrawlingList.crawling[target].crawlingurl = changedCrawlingUrl;\r\n\t\t\t\tthisCrawlingList.crawling[target].xpathTitle = changedCrawlingXpathTitle.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\tthisCrawlingList.crawling[target].xpathLink = changedValueCrawlingXpathLink.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\tthisCrawlingList.crawling[target].xpathImage = changedValueCrawlingXpathImage.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\t// fetch処理\r\n\t\t\t\tfetch(\"/setUpdateCrawlingList\", {\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\t\theders: {\r\n\t\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tfileName:CrawlingListJsonFileName,\r\n\t\t\t\t\t\tkbn:item.kbn,\r\n\t\t\t\t\t\tjigyosyaid:item.jigyosyaid,\r\n\t\t\t\t\t\tcrawlingurl:thisCrawlingList.crawling[target].crawlingurl,\r\n\t\t\t\t\t\txpathTitle:thisCrawlingList.crawling[target].xpathTitle,\r\n\t\t\t\t\t\txpathLink:thisCrawlingList.crawling[target].xpathLink,\r\n\t\t\t\t\t\txpathImage:thisCrawlingList.crawling[target].xpathImage,\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(response) {\r\n\t\t\t\t\tif(response.ok) {\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(responseJson) {\r\n\t\t\t\t\tif(responseJson.flag) {\r\n\t\t\t\t\t\tstore.dispatch(action.SET_CRAWLING_LIST(responseJson.data));\r\n\t\t\t\t\t\talert(\"クローリングの設定を更新しました!\");\r\n\t\t\t\t\t\tresolve(responseJson);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch(error) {\r\n\t\t\talert(\"ローカルファイルの更新に失敗しました!該当の区分が見つかりませんでした!\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject({flag:false});\r\n\t\t}\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クロール対象データ削除処理\r\nexport function setDeleteCrawlingList(props){\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// 削除対象の区分を代入\r\n\t\tvar targetKubun = props[\"delete\"][0].kbn;\r\n\t\tvar targetJigyosyaid = props[\"delete\"][0].jigyosyaid;\r\n\t\t// fetch処理\r\n\t\tfetch(\"/setDeleteCrawlingList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileName\":CrawlingListJsonFileName,\r\n\t\t\t\t\"targetKubun\":targetKubun,\r\n\t\t\t\t\"targetJigyosyaid\":targetJigyosyaid\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(function(response) {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else {\r\n\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((responseJson) => {\r\n\t\t\tif(responseJson.flag) {\r\n\t\t\t\tstore.dispatch(action.SET_CRAWLING_LIST(responseJson.data));\r\n\t\t\t\talert(\"クロール対象データを削除しました!\");\r\n\t\t\t\tresolve(true);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\talert(\"クロール対象データの削除に失敗しました!\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject(false);\r\n\t\t});\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリングプログラム実行関数\r\nexport function execCrawling() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// fetch処理\r\n\t\tfetch(\"/py\", {\r\n\t\t\t// fetch(\"/test\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tfileName:CrawlingListJsonFileName,\r\n\t\t\t\turl:window.location.href\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t\tconsole.log(response)\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else {\r\n\t\t\t\tlet responseJson = {\"flag\":false};\r\n\t\t\t\treject(responseJson.flag);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(function(responseJson) {\r\n\t\t\tif(responseJson.flag) {\r\n\t\t\t\tresolve(responseJson.flag); // true\r\n\t\t\t} else {\r\n\t\t\t\treject(responseJson.flag); // false\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.error(\"<crawlingList.js> execCrawling occared eerror.\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject(false);\r\n\t\t});\r\n\t});\r\n}\r\n  ","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass Auth extends React.Component {\r\n    componentWillMount() {\r\n        this.checkAuth();\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        this.checkAuth();        \r\n    }\r\n\r\n    // セッションnullの場合、ログイン画面へ遷移\r\n    checkAuth() {\r\n        var status = this.props.status;\r\n        if(status === 0 || status === -1) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>{this.props.children}</div>\r\n        );\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ReactコンポーネントとReduxストアをコネクト\r\nconst mapStateToProps = (state) => ({\r\n    status: state.loginReducer.status\r\n  });\r\n  \r\n  const ContainerAuth = connect(\r\n    mapStateToProps,\r\n    null\r\n  )(Auth);\r\n  \r\n  export default ContainerAuth;","import React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n/////////////////////////////////////////////////////////////////\r\n// スタイル。各種記事ブロックに収める画像とリンクをカードクラスで生成する。\r\n// 詳細なプロパティはindex.cssに記述。\r\n/////////////////////////////////////////////////////////////////\r\nconst ArticleCardStyle = makeStyles({\r\n    root:{\r\n    },\r\n    media: {\r\n        height:200,\r\n    },\r\n});\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 各種記事ブロックに収める画像とリンクをカードクラスで生成する。\r\n///////////////////////////////////////////////////////////////// \r\nexport const MediaCardForContentsBlock = (props) => {\r\n    const {Content} = props;\r\n    const classes = ArticleCardStyle();\r\n\r\n    return(\r\n      <div className=\"article\"> \r\n        <Card className={classes.root}>\r\n          <CardActionArea>\r\n            <a href={Content.source} style={{textDecoration: \"none\"}} target=\"_blank\" rel=\"noreferrer\">\r\n              <CardMedia className={classes.media} image={Content.image} title={Content.title}>\r\n                <CardContent>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{Content.name}</Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">{Content.title}</Typography>\r\n                </CardContent>\r\n              </CardMedia>\r\n            </a>\r\n          </CardActionArea>\r\n        </Card>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ヘッダーブロックに収める履歴リスト。画像とリンクをカードクラスで生成する。\r\n// 2021/12/08 廃止\r\n///////////////////////////////////////////////////////////////// \r\nexport const MediaCardForCacheList = (props) => {\r\n    const {Cache} = props;\r\n  \r\n    return(\r\n        <div className=\"CacheList\"> \r\n            <Card >\r\n                <CardActionArea>\r\n                    <a href={Cache.source} target=\"_blank\" rel=\"noreferrer\">\r\n                        <CardMedia component=\"img\" image={Cache.image} title={Cache.title}/>\r\n                    </a>\r\n                </CardActionArea>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MediaCardForContentsBlock;","\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツボックスに記事を表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\nimport MediaCardForContentsBlock from '../card/cardComponent.jsx';\r\n// コンテンツボックス部分のスタイル変数\r\nimport {DetailOriginal, DetailShow, DetailHide, DetailShowActiveSiteHedder} from './showContentsArea.jsx';\r\nimport {SiteHedderActiveM} from './showContentsArea.jsx';\r\n// MoveBlockOnClick関数呼び出し時のパラメータに、自身の関数名を入れる。\r\nimport {CaseA, CaseB} from './showContentsArea.jsx';\r\nimport { connect } from 'react-redux';\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツブロックをコントロール。コンテンツごとに記事を振り分け。(初回のみ)\r\nexport class ContentsBlockControl extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const Rows = \r\n      this.props.thisContentsArticle !== undefined &&\r\n      this.props.thisContentsArticle.map((Content, index) => {\r\n        return(\r\n          this.props.Kbn === Content.kbn &&\r\n            <MediaCardForContentsBlock key={index} Content={Content}/>\r\n        );\r\n      });\r\n    \r\n    return(\r\n        <div id ={this.props.Kbn} className={DetailOriginal}>{Rows}</div>\r\n      );\r\n  }\r\n}\r\n   \r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツボックスのアニメーション表示・非表示。\r\nexport const MoveBlockOnClick = (TargetKbn, Caller) => {\r\n  var SiteHedderActive = SiteHedderActiveM.GetterSiteHedderActive();\r\n  \r\n  if (TargetKbn === null && TargetKbn === undefined && Caller === CaseA) {\r\n    return;\r\n  }\r\n\r\n  // ボタンクリックのあったコンテンツタイトルに対応するコンテンツブロックを取得\r\n  var ElementOfContentsBlock = document.getElementById(TargetKbn);\r\n  // コンテンツブロックの表示状態(className)を取得\r\n  var TargetContentsBlockClassName = ElementOfContentsBlock.getAttribute(\"class\");\r\n\r\n  switch (Caller) {\r\n    // CaseA:履歴表示ボタン処理から呼ばれたケース\r\n    case CaseA:\r\n      switch (TargetContentsBlockClassName) {\r\n        case DetailShow:\r\n          SiteHedderActive && ElementOfContentsBlock.setAttribute(\"class\",DetailShowActiveSiteHedder);\r\n          break;\r\n        case DetailShowActiveSiteHedder:\r\n          !SiteHedderActive && ElementOfContentsBlock.setAttribute(\"class\",DetailShow);\r\n          break;\r\n      }\r\n      break;\r\n\r\n    // CaseB:コンテンツタイトルボタン押下処理から呼ばれたケース\r\n    case CaseB:\r\n      switch (TargetContentsBlockClassName) {\r\n        case DetailOriginal:\r\n          SiteHedderActive ? ElementOfContentsBlock.setAttribute(\"class\",DetailShowActiveSiteHedder) : ElementOfContentsBlock.setAttribute(\"class\",DetailShow);         \r\n          break;\r\n        case DetailHide:\r\n          SiteHedderActive ? ElementOfContentsBlock.setAttribute(\"class\",DetailShowActiveSiteHedder) : ElementOfContentsBlock.setAttribute(\"class\",DetailShow);\r\n          break;\r\n        case DetailShow:\r\n          ElementOfContentsBlock.setAttribute(\"class\",DetailHide);\r\n          break;\r\n        case DetailShowActiveSiteHedder:\r\n          ElementOfContentsBlock.setAttribute(\"class\",DetailHide);\r\n          break;\r\n      }\r\n  }\r\n};\r\n \r\n///////////////////////////////////////////////////////////////// \r\n// ReactコンポーネントとReduxストアをコネクト\r\nconst mapStateToProps = (state) => ({\r\n  thisContentsArticle: state.componentReducer.thisContents.article,\r\n  selectedFileName: state.componentReducer.selectedFileName,\r\n  mtime: state.componentReducer.mtime\r\n});\r\n\r\nconst ContainerContentsBlockControl = connect(\r\n  mapStateToProps,\r\n  null\r\n)(ContentsBlockControl);\r\n\r\nexport default ContainerContentsBlockControl;\r\n","///////////////////////////////////////////////////////////////// \r\n// コンテンツのタイトルを表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\n// コンテンツタイトル部分に表示するアイコン\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\n// アイコンにボタン機能を付ける\r\nimport {Button} from '@material-ui/core';\r\nimport Typography from '@mui/material/Typography';\r\n// コンテンツタイトル部分のスタイル変数\r\nimport {PreClickM} from './showContentsArea.jsx';\r\nimport {ContentsTitleOriginal, TransitionContentsTitleShow} from './showContentsArea.jsx';\r\nimport {ContentTitleUnderBorderOriginal, ContentTitleUnderBorderShow, ContentTitleUnderBorderHide} from './showContentsArea.jsx';\r\n// コンテンツブロックの表示・非表示アニメーションをコントロールする関数。履歴表示ボタン押下時に機能させる。\r\nimport {MoveBlockOnClick} from './showContentsBlock.jsx';\r\n// MoveBlockOnClick関数呼び出し時のパラメータに、自身の関数名を入れる。\r\nimport {CaseB} from './showContentsArea.jsx';\r\n// JSXの中でスタイルをアニメーション化させるパッケージ。履歴表示ボタン押下によるアニメーションで使用する。\r\nimport {Transition} from 'react-transition-group';\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツタイトルのボタンとクリックイベント。クリックイベントで、\r\n// コンテンツタイトルのボックスに下線を引く。\r\nexport class ContentsTitleButtonWithBorder extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedIndex:null\r\n    }\r\n  }\r\n\r\n  onClick(e) {\r\n    // 区分毎のボタンからクリックされた区分を、ボタンのselectedプロパティにに登録する\r\n    this.setState({selectedIndex:e});\r\n    // 前回クリックの有ったタイトルボタンの区分を取得。\r\n    let click = PreClickM.GetterPreClick();\r\n    // 前回ボタンクリックのあったコンテンツタイトルについて、下線が表示してあれば非表示\r\n    if (click !== undefined && click !== null && click !== e) {\r\n      let ElementPreClick = document.getElementById(\"border-\" + click);\r\n      let CheckElementPreClick = ElementPreClick.getAttribute(\"class\");\r\n      switch (CheckElementPreClick) {\r\n        case ContentTitleUnderBorderShow:\r\n          ElementPreClick.classList.replace(ContentTitleUnderBorderShow,ContentTitleUnderBorderHide);\r\n          // 表示していたコンテンツブロックを隠す\r\n          MoveBlockOnClick(click, CaseB);\r\n          break;\r\n        case ContentTitleUnderBorderHide:\r\n          break;\r\n        default:\r\n          ElementPreClick.setAttribute(\"class\",ContentTitleUnderBorderOriginal);\r\n          break;\r\n      }\r\n    }\r\n    // 今回ボタンクリックのあったコンテンツタイトルを取得\r\n    let ElementThisClick = document.getElementById(\"border-\" + e);\r\n    let CheckElementThisClick = ElementThisClick.getAttribute(\"class\");\r\n    //  今回ボタンクリックのあったコンテンツタイトルの下線を表示・非表示にする\r\n    switch (CheckElementThisClick) {\r\n      case ContentTitleUnderBorderShow:\r\n        ElementThisClick.classList.replace(ContentTitleUnderBorderShow,ContentTitleUnderBorderHide);\r\n        break;\r\n      case ContentTitleUnderBorderHide:\r\n        ElementThisClick.classList.replace(ContentTitleUnderBorderHide,ContentTitleUnderBorderShow);\r\n        break;\r\n      case ContentTitleUnderBorderOriginal:\r\n        ElementThisClick.classList.replace(ContentTitleUnderBorderOriginal,ContentTitleUnderBorderShow);\r\n        break;\r\n      default:\r\n        ElementThisClick.setAttribute(\"class\",ContentTitleUnderBorderOriginal);\r\n        break;\r\n    }\r\n    // コンテンツボックスのアニメーション表示・非表示\r\n    MoveBlockOnClick(e, CaseB);\r\n    // 今回のボタンクリックのあった区分を保存\r\n    PreClickM.SetterPreClick(e);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div>\r\n          <Button\r\n            className=\"contents-title-button\"\r\n            selected={this.state.selectedIndex === this.props.index} \r\n            onClick={(e) => this.onClick(this.props.Kbn, e)}>\r\n            <DoubleArrowIcon title={this.props.name} style={{color:\"#FFF\"}}/>\r\n          </Button>\r\n        </div>\r\n        <div id={\"border-\" + this.props.Kbn} className= {ContentTitleUnderBorderOriginal}/>\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツタイトルブロック。タイトル毎にボタンを配置するコンポー\r\n// ネントを呼び出す。\r\nexport const ContentsTitleBlock = (props) => {\r\n  const NaviBar = props.thisKubunList.map((Kbns,index) => {\r\n    return (\r\n      <Typography key={index} variant=\"h6\" noWrap className=\"name-title\">\r\n        <label>{Kbns.kbnname}</label>\r\n        <ContentsTitleButtonWithBorder Kbn={Kbns.kbn} thisKubunList={props.thisKubunList} index={index}/>\r\n      </Typography>\r\n    );\r\n  });\r\n\r\n  return( \r\n    <Transition in={props.mount} timeout={400}>\r\n      {(state) => \r\n      <div id=\"contents-title\" className={ContentsTitleOriginal} style={TransitionContentsTitleShow[state]}>\r\n        {NaviBar}\r\n      </div>\r\n      }\r\n    </Transition>\r\n  );\r\n}\r\n\r\nexport default ContentsTitleBlock;","///////////////////////////////////////////////////////////////// \n// メインブロッククラス\nimport React from \"react\";\nimport { connect } from 'react-redux'\nimport ContainerContentsBlockControl from './showContentsBlock.jsx';\nimport {ContentsTitleBlock} from './showContentsTitle.jsx';\n// import {OnHedderBox} from './show/showOnHedderBox.jsx';\nimport cssFileControl from '../commonFunc.js';\nimport * as actions from \"../actions/action.js\"\n\n///////////////////////////////////////////////////////////////// \n// 定数定義エリア\n// ヘッダー部(背景)\nexport const ImageSiteHeaderOriginal =\"imageSiteHeaderOriginal\";\n// ヘッダー部(履歴表示ボタン)\nexport const SiteHedderButtonOriginal = \"siteHedderButtonOriginal\";\nexport const SiteHedderButtonShow = \"siteHedderButtonShow\";\n// 履歴表示ボックスのスタイル\nexport const CacheList = \"cacheList\";\n// コンテンツタイトルボックス\nexport const ContentsTitleOriginal =\"contentsTitleOriginal\";\n// コンテンツタイトルボックスの下線\nexport const ContentTitleUnderBorderOriginal =\"contentTitleUnderBorderOriginal\";\nexport const ContentTitleUnderBorderShow =\"contentTitleUnderBorderShow\";\nexport const ContentTitleUnderBorderHide =\"contentTitleUnderBorderHide\";\n// コンテンツボックス\nexport const DetailOriginal = \"detail\";\nexport const DetailShow = \"detailShow\";\nexport const DetailHide =\"detailHide\";\nexport const DetailShowActiveSiteHedder = \"detailShowActiveSiteHedder\";\n// MoveBlockOnClick関数呼び出し時のパラメータに、自身の関数名を入れる。\nexport const CaseA = \"OnHedderBox\";\nexport const CaseB = \"ContentsTitleButtonWithBorder\";\n \n///////////////////////////////////////////////////////////////// \n// react-transition-groupで使用するスタイル\n// showOnHedderBox.jsx ヘッダー部で使用。\n// 2021/12/10 廃止\nexport const TransitionImageSiteHeaderShow = {\n  entering:{\n    height:\"200px\"\n  },\n  entered:{\n    height:\"200px\"\n  },\n  exiting: {\n    height:\"150px\"\n  },\n  exited: {\n    height:\"150px\"\n  }\n};\nexport const TransitionCacheList = {\n  entering:{\n    opacity:\"0\"\n  },\n  entered:{\n    opacity:\"1\"\n  },\n  exiting: {\n    opacity:\"0\"\n  },\n  exited: {\n    opacity:\"0\"\n  }\n}\n// showContentsTitle.jsx コンテンツタイトル部で使用。\nexport const TransitionContentsTitleShow = {\n  entering:{\n    transform:\"translateY(120%)\"\n  },\n  entered:{\n    transform:\"translateY(120%)\"\n  },\n  exiting: {\n    transform:\"translateY(0%)\"\n  },\n  exited: {\n    transform:\"translateY(0%)\"\n  }\n};\n\n///////////////////////////////////////////////////////////////// \n// 区分リストの区分が入る。前回クリックしたタイトルボタンを保持する為に使用。\n// デフォルトは区分1のタイトルボタンを保持させる。\nexport class PreClickMortion {\n  constructor() {\n    this.PreClick = null;\n  }\n  SetterPreClick(param) {\n    this.PreClick = param;\n  }\n  GetterPreClick() {\n    return this.PreClick;\n  }\n}\n\n///////////////////////////////////////////////////////////////// \n// コンテンツボックスが表示されている場合、履歴表示ボタンクリック時に\n// コンテンツボックスを断下げする為に使用。\nexport class SiteHedderActiveMortion {\n  constructor () {\n    this.SiteHedderActive = false;\n  }\n\n  SetterSiteHedderActive(param) { \n    this.SiteHedderActive = param;\n  }\n  GetterSiteHedderActive() {\n    return this.SiteHedderActive;\n  }\n}\n\n///////////////////////////////////////////////////////////////// \n// インスタンス生成エリア\n  export const SiteHedderActiveM = new SiteHedderActiveMortion(SiteHedderActiveMortion);\n  export const PreClickM = new PreClickMortion(PreClickMortion);\n\n///////////////////////////////////////////////////////////////// \n// メインブロックをコントロール。\nexport class MainBlockControl extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const ContentsRows = this.props.thisKubunList.map((List, index) => {\n      return(\n        <ContainerContentsBlockControl key={index} Kbn ={List.kbn}/>\n      );    \n    });\n\n    return(\n      <div className=\"mainBlockControl\">\n        <div>{ContentsRows}</div>\n      </div>\n    );\n  }\n}\n\n///////////////////////////////////////////////////////////////// \n// ルートコンポーネント。画面を開いたときに最初に描画される。\nexport class ShowContentsArea extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      mount:false,\n    }\n    // メイン画面のCSSファイル解除\n    cssFileControl(\"showCrawlSetting.css\", \"App.css\");\n    // クローリングステータスの状態更新をストップさせる\n    if (this.props.thisIntervalId != 0) {\n      clearInterval(this.props.thisIntervalId);\n      this.props.set_sokcet_intervalID(0);\n    }\n  }\n\n  // HedderMortionAcive(){\n  //   this.state.mount ? this.setState({mount:false}) : this.setState({mount:true});\n  // }\n\n  render() {\n    return (\n      <div>\n        {/* <OnHedderBox HedderMortionAcive = {(e)=>this.HedderMortionAcive(this.state.mount, e)} mount = {this.state.mount}/> */}\n        <ContentsTitleBlock thisKubunList = {this.props.thisKubunList} mount = {this.state.mount}/>\n        <MainBlockControl thisKubunList = {this.props.thisKubunList} mount = {this.state.mount}/>\n      </div>\n    );\n  }\n}\n///////////////////////////////////////////////////////////////// \n// ReactコンポーネントとReduxストアをコネクト\nconst mapStateToProps = (state) => ({\n\tthisKubunList: state.componentReducer.thisKubunList.kbns,\n  status: state.loginReducer.status,\n  thisIntervalId: state.componentReducer.thisIntervalId\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  set_sokcet_intervalID: int => dispatch(actions.SET_SOCKET_INTERVALID(int)),\n});\n\nconst ContainerShowContentsArea = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ShowContentsArea);\n\nexport default ContainerShowContentsArea;\n","/////////////////////////////////////////////////////////////////\r\n// MaterialTable表示\r\n/////////////////////////////////////////////////////////////////\r\nimport React, { forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\n// MaterialTableに使用するアイコンをインポート\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Save from '@material-ui/icons/Save';\r\n\r\n// MaterialTableに使用するアイコンを定数化\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    Save: forwardRef((props, ref) => <Save {...props} ref={ref} />)\r\n  };\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// MaterialTableを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport default function CrawlSettingMaterialTable(props) {\r\n  /////////////////////////////////////////////////////////////////\r\n  // クローリングセット。MaterialTableのeditable属性\r\n  const editableCrawlSetting = \r\n    <MaterialTable\r\n      title=\"実行結果セット\"\r\n      columns={props.columns}\r\n      data={props.data}\r\n      options={{\r\n        showTitle: true,\r\n        search: true,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0,  fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      icons={tableIcons}\r\n      actions={[\r\n        {\r\n          icon:Edit,\r\n          tooltip:\"Edt your's settings.\",\r\n          cellStyle:{fontSize: \"0.8em\", width: \"10%\", minWidth: \"10%\"},\r\n          headerStyle:{fontWeight: \"bold\",},\r\n          onClick:(e, rowData) => {\r\n            props.setItem(rowData);\r\n            props.modalWrapperFlag();\r\n          }\r\n        }\r\n      ]}\r\n    />\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  // MaterialTableの戻り値\r\n  return(\r\n    <div className=\"materialCrawlSetting\" style={{ maxWidth:\"80%\", padding:\"0.5em\", fontSize:\"10pt\"}}>\r\n      {editableCrawlSetting}\r\n    </div>\r\n  );\r\n}\r\n","///////////////////////////////////////////////////////////////// \r\n// モーダル画面を表示させるためのラッパークラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React, { useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n// クローリング詳細設定のモーダル画面で使用するボタンアイコン\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// モーダル表示させるためのラッパークラス\r\nexport default function ModalWrapper(props) {\r\n  return(\r\n    <Modal\r\n      open={props.open}\r\n      onClose={(e) => props.modalWrapperFlag(e, false)}\r\n      style={{top: \"5%\", width: \"50%\", left: \"20%\", height:\"70%\"}}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      onRequestClose={(e) => props.modalWrapperFlag(e, false)}\r\n    >\r\n      {props.content}\r\n    </Modal>\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 実行結果画面。クローリング設定詳細画面(モーダル表示する)\r\nexport function KrawlSettingInModal(props) {\r\n    const [changedValueCrawlingUrl, setValueCrawlingUrl] = useState(props.selectedItem.crawlingurl);\r\n    const [changedValueCrawlingXpathTitle, setValueCrawlingXpathTitle] = useState(props.selectedItem.xpathTitle);\r\n    const [changedValueCrawlingXpathLink, setValueCrawlingXpathLink] = useState(props.selectedItem.xpathLink);\r\n    const [changedValueCrawlingXpathImage, setValueCrawlingXpathImage] = useState(props.selectedItem.xpathImage);\r\n\r\n    // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n    // クローリング情報を更新。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n    const onClick = (e) => {\r\n      if (e === true) {\r\n        props.callUpdateCrawlingList(\r\n          props.selectedItem,\r\n          changedValueCrawlingUrl,\r\n          changedValueCrawlingXpathTitle,\r\n          changedValueCrawlingXpathLink,\r\n          changedValueCrawlingXpathImage\r\n        )\r\n      } else {\r\n        // CLOSEボタン押下処理\r\n        props.modalWrapperFlag(e);\r\n      }\r\n    };\r\n  \r\n    return(\r\n      <Fade in={props.open}>\r\n        <Paper className={\"modalActive\"}>\r\n          <Typography style={{padding: \"0.5em\"}}>\r\n            <div style={{margin: 8}}>\r\n              <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>クロール設定詳細</label>\r\n            </div>\r\n            <div style={{margin: 8}}>\r\n              <label style={{fontSize:\"small\"}}>※クローリング実行時のデータを表示しています。</label>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"区分\"\r\n                defaultValue={props.selectedItem.kbn}                \r\n                style={{width: \"10%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n              <TextField\r\n                label=\"区分名称\"\r\n                defaultValue={props.selectedItem.kbnname}                \r\n                style={{width: \"20%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n              <TextField\r\n                label=\"サイトID\"\r\n                defaultValue={props.selectedItem.jigyosyaid}                \r\n                style={{width: \"10%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n              <TextField\r\n                label=\"サイト名称\"\r\n                defaultValue={props.selectedItem.name}                \r\n                style={{width: \"20%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n              <TextField\r\n                label=\"記事ID\"\r\n                defaultValue={props.selectedItem.kiziid}                \r\n                style={{width: \"21.5%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"記事タイトル\"\r\n                defaultValue={props.selectedItem.title}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth  \r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"リンク\"\r\n                defaultValue={props.selectedItem.source}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                disabled=\"false\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"イメージファイル\"\r\n                defaultValue={props.selectedItem.image}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                disabled=\"false\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"サイトのURL\"\r\n                defaultValue={props.selectedItem.crawlingurl}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingUrl(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"タイトルのXpath\"\r\n                defaultValue={props.selectedItem.xpathTitle}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingXpathTitle(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"リンクのXpath\"\r\n                defaultValue={props.selectedItem.xpathLink}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingXpathLink(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"イメージファイルのXpath\"\r\n                defaultValue={props.selectedItem.xpathImage}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingXpathImage(e.target.value)}\r\n              />\r\n            </div>\r\n          </Typography>\r\n          <Grid container style={{fontSize:\"small\"}} justify=\"flex-end\" direction=\"row\">\r\n            <Grid item>\r\n              <Button\r\n                style={{margin: \"1.5em\"}}\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={(e)=>onClick(true, e)}\r\n                startIcon={<AddCircleIcon/>}\r\n              >\r\n              更新&nbsp;&nbsp;\r\n              </Button>\r\n              <Button\r\n                style={{margin: \"1.5em\"}}\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={(e)=>onClick(false, e)}\r\n                startIcon={<CancelIcon/>}\r\n              >\r\n              閉じる\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Fade>\r\n    );\r\n  }\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分設定画面。クローリング設定詳細画面(モーダル表示する)\r\nexport function ShortKrawlSettingInModal(props) {\r\n  const [changedValueCrawlingUrl, setValueCrawlingUrl] = useState(props.selectedItem.crawlingurl);\r\n  const [changedValueCrawlingXpathTitle, setValueCrawlingXpathTitle] = useState(props.selectedItem.xpathTitle);\r\n  const [changedValueCrawlingXpathLink, setValueCrawlingXpathLink] = useState(props.selectedItem.xpathLink);\r\n  const [changedValueCrawlingXpathImage, setValueCrawlingXpathImage] = useState(props.selectedItem.xpathImage);\r\n\r\n  // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n  // クローリング情報を更新。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n  const onClick = (e) => {\r\n    if (e === true) {\r\n      props.callUpdateCrawlingList(\r\n        props.selectedItem,\r\n        changedValueCrawlingUrl,\r\n        changedValueCrawlingXpathTitle,\r\n        changedValueCrawlingXpathLink,\r\n        changedValueCrawlingXpathImage\r\n      )\r\n    } else {\r\n      // CLOSEボタン押下処理\r\n      props.setModalIndex(0);\r\n      props.modalWrapperFlag(e);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Fade in={props.open}>\r\n      <Paper className={\"modalActive\"}>\r\n        <Typography style={{padding: \"0.5em\"}}>\r\n          <div style={{margin: 8}}>\r\n            <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>クロール設定詳細</label>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"区分\"\r\n              defaultValue={props.selectedItem.kbn}                \r\n              style={{width: \"10%\", margin: 8}}\r\n              rows={1}\r\n              disabled=\"false\"\r\n            ></TextField>\r\n            <TextField\r\n              label=\"区分名称\"\r\n              defaultValue={props.selectedItem.kbnname}                \r\n              style={{width: \"20%\",margin: 8}}\r\n              rows={1}\r\n              disabled=\"false\"\r\n            ></TextField>\r\n            <TextField\r\n                label=\"サイトID\"\r\n                defaultValue={props.selectedItem.jigyosyaid}                \r\n                style={{width: \"10%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"                \r\n              ></TextField>\r\n              <TextField\r\n                label=\"サイト名称\"\r\n                defaultValue={props.selectedItem.name}                \r\n                style={{width: \"20%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"サイトのURL\"\r\n              defaultValue={props.selectedItem.crawlingurl}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingUrl(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"タイトルのXpath\"\r\n              defaultValue={props.selectedItem.xpathTitle}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathTitle(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"リンクのXpath\"\r\n              defaultValue={props.selectedItem.xpathLink}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathLink(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"イメージファイルのXpath\"\r\n              defaultValue={props.selectedItem.xpathImage}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathImage(e.target.value)}\r\n            />\r\n          </div>\r\n        </Typography>\r\n        <Grid container style={{fontSize:\"small\"}} justify=\"flex-end\" direction=\"row\">\r\n          <Grid item>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(true, e)}\r\n              startIcon={<AddCircleIcon/>}\r\n            >\r\n            更新&nbsp;&nbsp;\r\n            </Button>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(false, e)}\r\n              startIcon={<CancelIcon/>}\r\n            >\r\n            閉じる\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリング設定を新規登録する画面(モーダル表示する)\r\nexport function RegistKrawlSettingInModal(props) {\r\n  const [changedValueKubun, setValueKubun] = useState(\"\");\r\n  const [changedValueKubunName, setValueKubunName] = useState(\"区分名称\");\r\n  const [changedValueJigyosyaid, setValueJigyosyaid] = useState(\"\");\r\n  const [changedValueName, setValueName] = useState(\"\");\r\n  const [changedValueCrawlingUrl, setValueCrawlingUrl] = useState(\"\");\r\n  const [changedValueCrawlingXpathTitle, setValueCrawlingXpathTitle] = useState(\"\");\r\n  const [changedValueCrawlingXpathLink, setValueCrawlingXpathLink] = useState(\"\");\r\n  const [changedValueCrawlingXpathImage, setValueCrawlingXpathImage] = useState(\"\");\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分セレクトボックスで選択した区分の名称を、区分名称欄に自動入力する処理\r\n  const callSetKbnNameLabel = (targetValue) => {\r\n    var index = props.kbns.findIndex((v) => v.kbn === targetValue);\r\n\r\n    if(index !== -1) {\r\n      var label = props.kbns[index].kbnname;\r\n      setValueKubunName(label);\r\n      setValueKubun(targetValue);\r\n    }\r\n  };\r\n\r\n  // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n  // クローリング情報を更新。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n  const onClick = (e) => {\r\n    if (e === true) {\r\n      var paramObj = {};\r\n      paramObj[\"kbn\"] = changedValueKubun;\r\n      paramObj[\"kbnname\"] = changedValueKubunName;\r\n      paramObj[\"jigyosyaid\"] = changedValueJigyosyaid;\r\n      paramObj[\"name\"] = changedValueName;\r\n      paramObj[\"crawlingurl\"] = changedValueCrawlingUrl;\r\n      paramObj[\"xpathTitle\"] = changedValueCrawlingXpathTitle;\r\n      paramObj[\"xpathLink\"] = changedValueCrawlingXpathLink;\r\n      paramObj[\"xpathImage\"] = changedValueCrawlingXpathImage;\r\n\r\n      // 親コンポーネントのメソッド呼び出し\r\n      props.callNewCrawlingList(paramObj);\r\n\r\n    } else {\r\n      // CLOSEボタン押下処理\r\n      props.setModalIndex(0);\r\n      props.modalWrapperFlag(e);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Fade in={props.open}>\r\n      <Paper className={\"modalActive\"}>\r\n        <Typography style={{padding: \"0.5em\"}}>\r\n          <div style={{margin: 8}}>\r\n            <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>クロール設定登録</label>\r\n          </div>\r\n          <div>\r\n            <FormControl id=\"select-paperDiv\">\r\n              <InputLabel id=\"select-paperDiv-label\">区分</InputLabel>\r\n              <Select\r\n                labelId=\"select-paperDiv-label\"\r\n                className=\"select-paperDiv\"\r\n                value={changedValueKubun}\r\n                style={{width: \"100%\", margin: 8}}\r\n                onChange={(e)=> callSetKbnNameLabel(e.target.value)}\r\n              >\r\n                {props.kbns.map((item, key) => {\r\n                  return(\r\n                    <MenuItem value={item.kbn} key={key}>{item.kbn}</MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              // label=\"区分名称\"\r\n              label={changedValueKubunName}\r\n              style={{width: \"20%\",margin: 8}}\r\n              rows={1}\r\n              disabled=\"false\"\r\n            ></TextField>\r\n            <TextField\r\n                label=\"事業者ID\"\r\n                defaultValue={changedValueJigyosyaid}\r\n                style={{width: \"10%\", margin: 8}}\r\n                rows={1}\r\n                onChange={(e)=> setValueJigyosyaid(e.target.value)}\r\n            ></TextField>\r\n            <TextField\r\n              label=\"事業者名\"\r\n              defaultValue={changedValueName}\r\n              style={{width: \"20%\", margin: 8}}\r\n              rows={1}\r\n              onChange={(e)=> setValueName(e.target.value)}\r\n            ></TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"サイトのURL\"\r\n              defaultValue={changedValueCrawlingUrl}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingUrl(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"タイトルのXpath\"\r\n              defaultValue={changedValueCrawlingXpathTitle}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathTitle(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"リンクのXpath\"\r\n              defaultValue={changedValueCrawlingXpathLink}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathLink(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"イメージファイルのXpath\"\r\n              defaultValue={changedValueCrawlingXpathImage}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathImage(e.target.value)}\r\n            />\r\n          </div>\r\n        </Typography>\r\n        <Grid container style={{fontSize:\"small\"}} justify=\"flex-end\" direction=\"row\">\r\n          <Grid item>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(true)}\r\n              startIcon={<AddCircleIcon/>}\r\n            >\r\n            登録&nbsp;&nbsp;\r\n            </Button>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(false)}\r\n              startIcon={<CancelIcon/>}\r\n            >\r\n            閉じる\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分設定を新規登録する画面(モーダル表示する)\r\nexport function KubunSettingInModal(props) {\r\n  const [kbns, setkbns] = useState(props.kbns);\r\n  const [changedValueKubun, setValueKubun] = useState(\"\");\r\n  const [changedValueKubunName, setValueKubunName] = useState(\"\");\r\n  const [changedValueComment, setValueComment] = useState(\"\");\r\n\r\n  // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n  // 区分情報を新たに登録。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n  const onClick = (e) => {\r\n    if (e === true) {\r\n      if(changedValueKubun !== \"\" && changedValueKubunName !== \"\" && changedValueComment !== \"\") {\r\n        // 親コンポーネントの区分リスト新規登録処理を呼び出す\r\n        props.callNewKubunList(\r\n          changedValueKubun,\r\n          changedValueKubunName,\r\n          changedValueComment,\r\n        )\r\n      } else {\r\n        alert(\"全ての項目を入力してください!\");\r\n      }\r\n    } else {\r\n      // CLOSEボタン押下処理\r\n      props.modalWrapperFlag(e);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Fade in={props.open}>\r\n      <Paper className={\"modalActive\"}>\r\n        <Typography style={{padding: \"0.5em\"}}>\r\n          <div style={{margin: 8}}>\r\n            <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>区分設定登録</label>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"区分\"\r\n              defaultValue={changedValueKubun}\r\n              style={{width: \"10%\", margin: 8}}\r\n              rows={1}\r\n              onChange={(e)=> setValueKubun(e.target.value)}\r\n            ></TextField>\r\n            <TextField\r\n              label=\"区分名称\"\r\n              defaultValue={changedValueKubunName}\r\n              style={{width: \"20%\", margin: 8}}\r\n              rows={1}\r\n              onChange={(e)=> setValueKubunName(e.target.value)}\r\n            ></TextField>\r\n            <TextField\r\n                label=\"コメント\"\r\n                defaultValue={changedValueComment}\r\n                style={{width: \"50%\", margin: 8}}\r\n                rows={1}\r\n                onChange={(e)=> setValueComment(e.target.value)}\r\n            ></TextField>\r\n          </div>\r\n        </Typography>\r\n        <Grid container style={{fontSize:\"small\"}} justify=\"flex-end\" direction=\"row\">\r\n          <Grid item>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(true, e)}\r\n              startIcon={<AddCircleIcon/>}\r\n            >\r\n            登録&nbsp;&nbsp;\r\n            </Button>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(false, e)}\r\n              startIcon={<CancelIcon/>}\r\n            >\r\n            閉じる\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n}","///////////////////////////////////////////////////////////////// \r\n// マテリアルテーブルのカラムを生成する\r\n/////////////////////////////////////////////////////////////////\r\n// クローリング設定画面で使用\r\nconst columnsCrawlSetting =\r\n    [\r\n        {title:'区分', field:'kbn', cellStyle:{fontSize:\"0.8em\", width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\",  width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\"}},\r\n        {title:'区分名称', field:'kbnname', cellStyle:{fontSize:\"0.8em\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\"}},\r\n        {title:'サイトID', field:'jigyosyaid', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\"}},\r\n        {title:'サイト名称', field:'name', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\"}},\r\n        {title:'記事ID', field:'kiziid', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\"}},\r\n        {title:'画像', field:'imageFileRes', cellStyle:{fontSize:\"0.8em\", width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\"}},\r\n        {title:'記事タイトル', field:'title', cellStyle:{fontSize:\"0.8em\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\"}},\r\n    ]\r\n\r\n// 区分設定画面。区分セット。(左側のマテリアルテーブル)\r\nconst columnsKubunSetting =\r\n    [\r\n        {title:'区分', field:'kbn', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\",  width:\"15%\", minWidth:\"15%\"}},\r\n        {title:'区分名称', field:'kbnname', cellStyle:{fontSize:\"0.8em\", width:\"20%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\"}},\r\n        {title:'コメント', field:'comment', cellStyle:{fontSize:\"0.8em\", width:\"50%\", minWidth:\"30%\"}, headerStyle:{fontWeight:\"bold\", width:\"30%\", minWidth:\"30%\"}},\r\n    ]\r\n\r\n// 区分設定画面。対象データセット。(右側のマテリアルテーブル)\r\nconst columnsDetailCrawlSetting =\r\n    [\r\n        {title:'区分', field:'kbn', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"5%\"}, headerStyle:{fontWeight:\"bold\",  width:\"5%\", minWidth:\"5%\"}},\r\n        {title:'区分名称', field:'kbnname', cellStyle:{fontSize:\"0.8em\", width:\"25%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\"}},\r\n        {title:'サイトID', field:'jigyosyaid', cellStyle:{fontSize:\"0.8em\", width:\"25%\", minWidth:\"10%\"}, headerStyle:{fontWeight:\"bold\", width:\"10%\", minWidth:\"10%\"}},\r\n        {title:'サイト名称', field:'name', cellStyle:{fontSize:\"0.8em\", width:\"25%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\"}},\r\n    ]\r\n\r\nexport const columnsData = (param) => {\r\n    switch(param) {\r\n        case 1:\r\n            return columnsCrawlSetting;\r\n        case 2:\r\n            return columnsKubunSetting;\r\n        case 3:\r\n            return columnsDetailCrawlSetting;\r\n        default:\r\n            return columnsCrawlSetting;\r\n    }\r\n};\r\n\r\n\r\n","///////////////////////////////////////////////////////////////// \r\n// クローリングの設定画面を表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from 'react-redux';\r\nimport { io } from \"socket.io-client\";\r\n// コンテンツボックスに表示する記事データとクローリング情報のデータ\r\nimport { recentUpdateFileDate } from '../actions/contentsList.js';\r\nimport { setUpdateCrawlingList, execCrawling, addNewCrawlingList } from '../actions/crawlingList.js';\r\nimport CrawlSettingMaterialTable from '../materialTable/crawlSettingMaterialTable.jsx';\r\nimport { KrawlSettingInModal, RegistKrawlSettingInModal } from './showModalWindow.jsx';\r\nimport ModalWrapper from './showModalWindow.jsx';\r\nimport cssFileControl from '../commonFunc.js';\r\nimport { columnsData } from '../actions/materialTableColumns.js';\r\nimport * as actions from \"../actions/action.js\"\r\n// アイコン\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ScreenSearchDesktopIcon from '@mui/icons-material/ScreenSearchDesktop';\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリング設定ページを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport class ShowCrawlSetting extends React.Component {\r\n  constructor (props){\r\n    super(props);\r\n    this.state = {\r\n      open:false,\r\n      modalIndex:0,\r\n      selectedItem:null,\r\n      selectedCrawling:null,\r\n      recentFileUpdate:\"未取得\"\r\n    }\r\n    // クローリングステータスの状態更新\r\n    this.startCrawlingStatusInterval();\r\n    // メイン画面のCSSファイル解除\r\n    cssFileControl(\"App.css\", \"showCrawlSetting.css\");\r\n    // 最終クロール日時\r\n    this.UpdateFileDate();\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 最終クロール日時\r\n  UpdateFileDate = () => {\r\n    recentUpdateFileDate(1, \"mtime\") // パラメータ:2は区分リスト\r\n    .then((response) => {\r\n      if(response) {\r\n        this.setState({recentFileUpdate:this.props.mtime});\r\n      } else {\r\n        this.setState({recentFileUpdate:\"取得できませんでした\"});\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // componentDidMount()\r\n  componentDidMount() {\r\n    // ステータスの背景色指定\r\n    var element = document.getElementById(\"p-status-data\");\r\n    if(this.props.status === \"停止\") {\r\n      element.style.backgroundColor = \"#005FFF\";\r\n    } else if(this.props.status === \"実行中\") {\r\n      element.style.backgroundColor = \"#00FF3B\";\r\n    } else if(this.props.status === \"実行完了\") {\r\n      element.style.backgroundColor = \"#FF4F02\";\r\n    } else if(this.props.status === \"エラー\") {\r\n      element.style.backgroundColor = \"#FF0000\";\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 設定一覧で選択されたコンテンツデータを返す。\r\n  setItem = (item) => {\r\n    var target = this.props.thisContentsArticle.findIndex((v) => v.kbn === item.kbn && v.kiziid === item.kiziid);\r\n    this.setState({selectedItem:this.props.thisContentsArticle[target]});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // CrawlingList.jsのクローリング情報の更新処理を呼び出す。this.state.selectedItemを更新している。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callUpdateCrawlingList = (\r\n    item,\r\n    changedCrawlingUrl,\r\n    changedCrawlingXpathTitle,\r\n    changedValueCrawlingXpathLink,\r\n    changedValueCrawlingXpathImage) => { \r\n      setUpdateCrawlingList (\r\n        item,\r\n        changedCrawlingUrl,\r\n        changedCrawlingXpathTitle,\r\n        changedValueCrawlingXpathLink,\r\n        changedValueCrawlingXpathImage\r\n      )\r\n    }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // CrawlingList.jsのクローリング情報の新規登録処理を呼び出す。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callNewCrawlingList = (item) => { \r\n    addNewCrawlingList(item)\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示・非表示の設定をフラグ管理する\r\n  modalWrapperFlag = (e) => {\r\n    this.state.open ? this.setState({open:false}) : this.setState({open:true});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示する画面の種別を判定\r\n  // (init)0:編集画面 1:新規登録画面\r\n  setModalIndex = (props) => {\r\n    // パラメータの値をthis.stateにセット\r\n    this.setState({modalIndex:props});\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 全て開始ボタン押下時の処理\r\n  execCrawling = () => {\r\n    var element = document.getElementById(\"p-status-data\");\r\n    var status= this.props.status;\r\n    if(status === \"停止\" || status === \"エラー\" || status === \"実行完了\") {\r\n      // クローリング実行処理呼び出し\r\n      execCrawling()\r\n      .then((response) => {\r\n        // クローリングプログラム実行結果：正常終了\r\n        if(response) {\r\n          this.props.setCrawlingStatus(\"実行中\");\r\n          element.style.backgroundColor = \"#00FF3B\";\r\n        } else {\r\n        // クローリングプログラム実行結果：異常終了\r\n          this.props.setCrawlingStatus(\"エラー\");\r\n          element.style.backgroundColor = \"#FF0000\";          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // クローリングプログラム実行結果：異常終了\r\n        console.error(error);\r\n        this.props.setCrawlingStatus(\"エラー\");\r\n        element.style.backgroundColor = \"#FF0000\";\r\n      });\r\n    } else {\r\n      // クローリングプログラムの呼び出しを行わない\r\n      alert(\"クローリング実行中は無効です。\");\r\n    }\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // クローリングステータスの状態更新を20秒間隔で行う\r\n  startCrawlingStatusInterval = () => {\r\n    // クロール実行中のみ処理を行う\r\n    var Id = setInterval(() => {\r\n      this.callUpdateCrawlingStatus()\r\n    }, 20000);\r\n    this.props.set_sokcet_intervalID(Id);\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // クローリングステータスの状態更新をストップさせる\r\n  stopCrawlingStatusInterval = () => {\r\n    if (this.props.thisIntervalId != 0) {\r\n      clearInterval(this.props.thisIntervalId);\r\n      this.props.set_sokcet_intervalID(0);  \r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // クローリングステータスの状態更新\r\n  callUpdateCrawlingStatus = () => {\r\n    // HTMLエレメント取得\r\n    var element = document.getElementById(\"p-status-data\");\r\n    // ソケット接続要求\r\n    var originName = this.props.thisLocation + \":\" + this.props.thisPort;\r\n    console.log(originName);\r\n    const socket = io(originName);\r\n    // クローリングプログラムの実行ステータスを受信\r\n    socket.on(\"info\", (msg) => {\r\n      // ストアのデータを更新\r\n      switch (msg) {\r\n        case 0:\r\n          this.props.setCrawlingStatus(\"実行中\");\r\n          element.style.backgroundColor = \"#00FF3B\";\r\n          break;\r\n        case 1:\r\n          this.props.setCrawlingStatus(\"実行完了\");\r\n          element.style.backgroundColor = \"#FF4F02\";\r\n          this.stopCrawlingStatusInterval();\r\n          break;\r\n        case -1:\r\n          this.props.setCrawlingStatus(\"エラー\");\r\n          element.style.backgroundColor = \"#FF0000\";\r\n          this.stopCrawlingStatusInterval();\r\n          break;\r\n        case 99:\r\n          this.props.setCrawlingStatus(\"停止\");\r\n          element.style.backgroundColor = \"#005FFF\";\r\n          break;\r\n        default:\r\n          this.props.setCrawlingStatus(\"停止\");\r\n          element.style.backgroundColor = \"#005FFF\";\r\n          break;\r\n      }\r\n      // 切断\r\n      socket.close();\r\n    });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // レンダー\r\n  render() {\r\n    ///////////////////////////////////////////////////////////////// \r\n    // モーダル表示する画面の種別に対応したjsxを返却\r\n    // (init)0:編集画面 1:新規登録画面\r\n    const setModalJsx = () => {\r\n      if(this.state.modalIndex === 0) {\r\n        return (\r\n          <KrawlSettingInModal \r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            selectedItem={this.state.selectedItem}\r\n            selectedCrawling={this.state.selectedCrawling}\r\n            callUpdateCrawlingList={this.callUpdateCrawlingList}\r\n          />\r\n        );\r\n      } else if(this.state.modalIndex === 1) {\r\n        return (\r\n          <RegistKrawlSettingInModal\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            kbns={this.props.thisKubunList}\r\n            setModalIndex={this.setModalIndex}\r\n            callNewCrawlingList={this.callNewCrawlingList}\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    return(\r\n      <div>\r\n        <Grid container spacing={1}>\r\n          <Grid Item xs={4} style={{padding: \"0.5em\"}}>\r\n            <Button\r\n              id=\"button-krawlsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              onClick={()=>{\r\n                this.setModalIndex(1);\r\n                this.modalWrapperFlag();\r\n              }}\r\n              startIcon={<AddCircleIcon/>}\r\n            >サイト登録</Button>\r\n            <Button\r\n              id=\"button-krawlsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              onClick={()=>this.execCrawling()}\r\n              startIcon={<ScreenSearchDesktopIcon/>}\r\n            >すべて開始</Button>\r\n            <Button\r\n              id=\"button-krawlsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              onClick={()=>this.callUpdateCrawlingStatus()}\r\n              startIcon={<ScreenSearchDesktopIcon/>}\r\n            >再読み込み</Button>\r\n          </Grid>\r\n          <Grid Item id=\"crawl-status\" xs={2} style={{padding: \"0.5em\", margin:\"0.5em\"}}>\r\n            <div id=\"label-reffer-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>参照データ</p></div>\r\n            <div id=\"label-reffer-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>&nbsp;{this.props.selectedFileName}</p></div>\r\n          </Grid>\r\n          <Grid Item id=\"crawl-status\" xs={2} style={{padding: \"0.5em\", margin:\"0.5em\"}}>\r\n            <div id=\"label-krawl-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>最終クロール日時</p></div>\r\n            <div id=\"label-krawl-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>&nbsp;{this.props.mtime}</p></div>\r\n            <div id=\"label-status-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>クロール状態</p></div>\r\n            <div id=\"label-status-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p id=\"p-status-data\">{this.props.status}</p></div>\r\n          </Grid>\r\n        </Grid>\r\n        {/* パラメータの数字1はクローリング設定画面を指す(他の画面と区別する為) */}\r\n        <CrawlSettingMaterialTable\r\n          columns={columnsData(1)} \r\n          data={this.props.thisContentsArticle}\r\n          actions={1}\r\n          editable={1}\r\n          modalWrapperFlag={this.modalWrapperFlag}\r\n          setItem={this.setItem}\r\n        />\r\n        <ModalWrapper\r\n          modalWrapperFlag={this.modalWrapperFlag}\r\n          open={this.state.open}\r\n          content={setModalJsx()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ReactコンポーネントとReduxストアをコネクト\r\nconst mapStateToProps = (state) => ({\r\n  thisContentsArticle: state.componentReducer.thisContents.article,\r\n  thisKubunList: state.componentReducer.thisKubunList.kbns,\r\n  thisCrawlingList: state.componentReducer.thisCrawlingList.crawling,\r\n  selectedFileName: state.componentReducer.selectedFileName,\r\n  status: state.componentReducer.status,\r\n  mtime: state.componentReducer.mtime,\r\n  thisIntervalId: state.componentReducer.thisIntervalId,\r\n  thisPort: state.loginReducer.thisPort,\r\n  thisLocation: state.loginReducer.thisLocation,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCrawlingStatus: str => dispatch(actions.SET_CRAWLING_STATUS(str)),\r\n  set_sokcet_intervalID: int => dispatch(actions.SET_SOCKET_INTERVALID(int)),\r\n});\r\n\r\nconst ContainerShowCrawlSetting = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ShowCrawlSetting);\r\n\r\nexport default ContainerShowCrawlSetting;","/////////////////////////////////////////////////////////////////\r\n// MaterialTable表示\r\n/////////////////////////////////////////////////////////////////\r\nimport React, { forwardRef, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { setDeleteCrawlingList } from '../actions/crawlingList.js';\r\n// MaterialTableに使用するアイコンをインポート\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Save from '@material-ui/icons/Save';\r\n\r\n// MaterialTableに使用するアイコンを定数化\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    Save: forwardRef((props, ref) => <Save {...props} ref={ref} />)\r\n  };\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// MaterialTableを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport default function DetailCrawlSettingMaterialTable(props) {\r\n  // クロール対象データのデータをセット\r\n  const [data, setData] = useState(props.data);\r\n  /////////////////////////////////////////////////////////////////\r\n  // 区分設定画面。現在登録されているクロールデータ。\r\n  const editableDetailCrawlSetting =\r\n    <MaterialTable\r\n        title=\"対象データセット\"\r\n        columns={props.columns}\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\teditable={{\r\n        ///////////////////////////////////////////////////////////////// \r\n        // クロール対象データの削除処理\r\n        onRowDelete:\r\n        (oldData) =>\r\n          new Promise((resolve,reject) => {\r\n            var dataSet = {\"delete\":[]};\r\n            const dataDelete = [...data];\r\n            const index = oldData.tableData.id;\r\n            // バックエンドに渡す為の削除対象データ\r\n            dataSet.delete.push(oldData);\r\n            dataDelete.splice(index, 1);\r\n            setData([...dataDelete]);\r\n            resolve(dataSet)\r\n          })\r\n          .then((response) => {\r\n\t\t\t\t\t\tsetDeleteCrawlingList(response)\r\n            .then((response)=>{\r\n              if(response) {\r\n                props.setSelectedCrawling(oldData);  // クロール対象データセット更新\r\n              }\r\n            })  \r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          }),\r\n        }}\r\n      options={{\r\n        showTitle: true,\r\n        search: true,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0, fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      localization={{\r\n        header:{actions: ''},\r\n        body:{\r\n          editRow:{\r\n            deleteText:\"データは削除されます。よろしいですか？\",\r\n          },\r\n        },\r\n      }}\r\n      icons={tableIcons}\r\n      options={{\r\n        showTitle: true,\r\n        search: false,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0,  fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      actions={[\r\n        {\r\n\t\t\t\t\t///////////////////////////////////////////////////////////////// \r\n\t\t\t\t\t// クロール対象データの編集処理\r\n\t\t\t\t\ticon:Edit,\r\n\t\t\t\t\ttooltip:\"Edt your's settings.\",\r\n\t\t\t\t\tcellStyle:{fontSize: \"0.8em\", width: \"10%\", minWidth: \"10%\"},\r\n\t\t\t\t\theaderStyle:{fontWeight: \"bold\",  width: \"10%\", minWidth: \"10%\"},\r\n\t\t\t\t\tonClick:(e, rowData) => {\r\n\t\t\t\t\t\tprops.setModalIndex(2);\r\n\t\t\t\t\t\tprops.modalWrapperFlag();\r\n\t\t\t\t\t\tprops.setItem(rowData);\r\n\t\t\t\t\t}\r\n        }\r\n      ]}\r\n    />\r\n  /////////////////////////////////////////////////////////////////\r\n  // MaterialTableの戻り値\r\n  return(\r\n\t\t<div className=\"materialDetailCrawlSetting\" style={{ maxWidth:\"36%\", minWidth:\"36%\", padding:\"0.5em\", fontSize:\"10pt\"}}>\r\n\t\t\t{editableDetailCrawlSetting}\r\n\t\t</div>\r\n\t);\r\n}\r\n","/////////////////////////////////////////////////////////////////\r\n// MaterialTable表示\r\n/////////////////////////////////////////////////////////////////\r\nimport React, { forwardRef, useState } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { setEditKubunList, setDeleteKubunList } from '../actions/kubunList.js';\r\n// MaterialTableに使用するアイコンをインポート\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Save from '@material-ui/icons/Save';\r\nimport DetailPanel from '@material-ui/icons/Details';\r\n\r\n// MaterialTableに使用するアイコンを定数化\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    Save: forwardRef((props, ref) => <Save {...props} ref={ref} />)\r\n  };\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// MaterialTableを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport default function KubunSettingMaterialTable(props) {\r\n  // 区分リストのデータをセット\r\n  const [data, setData] = useState(props.data);\r\n  /////////////////////////////////////////////////////////////////\r\n  // 区分セット。MaterialTableのeditable属性\r\n  const editableKubunSetting =\r\n    <MaterialTable\r\n      title=\"区分セット\"\r\n      columns={props.columns}\r\n       data={props.data}\r\n       editable={{\r\n        ///////////////////////////////////////////////////////////////// \r\n        // 区分リストの編集処理\r\n        onRowUpdate:(newData, oldData) =>\r\n        new Promise((resolve, reject) => {\r\n          var dataSet = {\"before\":[], \"after\":[]};\r\n          const dataUpdate = [...data];\r\n          const index = oldData.tableData.id;\r\n          // アクションに渡すデータ(更新前・更新後)を保存。\r\n          dataSet.before.push(oldData);\r\n          dataSet.after.push(newData);\r\n          // マテリアルテーブルに配置するデータを更新。\r\n          dataUpdate[index] = newData;\r\n          setData([...dataUpdate]);\r\n          resolve(dataSet);\r\n        })\r\n        .then((response) => {\r\n          setEditKubunList(response)\r\n          .then(()=>{\r\n            props.setStateKbns(); // 区分リスト最新化\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        }),\r\n        ///////////////////////////////////////////////////////////////// \r\n        // 区分リストの削除処理\r\n        onRowDelete:(oldData) =>\r\n        new Promise((resolve,reject) => {\r\n          var dataSet = {\"delete\":[]};\r\n          const dataDelete = [...data];\r\n          const index = oldData.tableData.id;\r\n          // バックエンドに渡す為の削除対象データ\r\n          dataSet.delete.push(oldData);\r\n          dataDelete.splice(index, 1);\r\n          setData([...dataDelete]);\r\n          resolve(dataSet)\r\n        })\r\n        .then((response) => {\r\n          setDeleteKubunList(response)\r\n          .then(()=>{\r\n            props.setStateKbns(); // 区分リスト最新化\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        }),\r\n      }}\r\n      options={{\r\n        showTitle: true,\r\n        search: true,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0, fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      localization={{\r\n        header:{actions: ''},\r\n        body:{editRow:{deleteText:\"データは削除されます。よろしいですか？\"},},        \r\n      }}\r\n      icons={tableIcons}\r\n      actions={[\r\n        // 詳細ボタン。現在登録されているクロールデータを表示する\r\n        {\r\n          icon:DetailPanel,\r\n          tooltip:\"Show details.\",\r\n          cellStyle:{fontSize: \"0.8em\", width: \"10%\", minWidth: \"10%\"},\r\n          headerStyle:{fontWeight: \"bold\",  width: \"10%\", minWidth: \"10%\"},\r\n          onClick:(e, rowData) => {\r\n            props.setSelectedCrawling(rowData);\r\n          }\r\n        }        \r\n      ]}\r\n    />\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  // MaterialTableの戻り値\r\n  return(\r\n      <div className=\"materialKubunSetting\" style={{ maxWidth:\"45%\", minWidth:\"45%\", marginLeft: \"16.6rem\", padding:\"0.5em\", fontSize:\"10pt\"}}>\r\n        {editableKubunSetting}\r\n      </div>\r\n  );\r\n}\r\n","///////////////////////////////////////////////////////////////// \r\n// クローリングの設定画面を表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\n// コンテンツボックスに表示する記事データとクローリング情報のデータ\r\nimport { setNewKubunList } from '../actions/kubunList.js';\r\nimport { recentUpdateFileDate } from '../actions/contentsList.js';\r\nimport { setUpdateCrawlingList, addNewCrawlingList } from '../actions/crawlingList.js';\r\nimport DetailCrawlSettingMaterialTable from '../materialTable/detailCrawlSettingMaterialTable.jsx';\r\nimport KubunSettingMaterialTable from '../materialTable/kubunSettingMaterialTable.jsx';\r\nimport { KubunSettingInModal, ShortKrawlSettingInModal, RegistKrawlSettingInModal } from './showModalWindow.jsx';\r\nimport ModalWrapper from './showModalWindow.jsx';\r\nimport cssFileControl from '../commonFunc.js';\r\nimport { columnsData } from '../actions/materialTableColumns';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../actions/action.js\"\r\n// アイコン\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n///////////////////////////////////////////////////////////////// \r\n// 区分設定ページを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nclass ShowKubunSetting extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      kbns:this.props.thisKubunList,\r\n      selectedCrawling:[],\r\n      selectedItem:null,\r\n      open:false,\r\n      modalIndex:0,\r\n      recentFileUpdate:\"未取得\",\r\n    }\r\n    // メイン画面のCSSファイル解除\r\n    cssFileControl(\"App.css\", \"showCrawlSetting.css\");\r\n    // 区分セットの最終更新日時を取得\r\n    this.recentKubunUpdateDate();\r\n    // クローリングステータスの状態更新をストップさせる\r\n    console.log(\"in showKubunSetting.jsx\");\r\n    console.log(this.props.thisIntervalId);\r\n    if (this.props.thisIntervalId != 0) {\r\n      clearInterval(this.props.thisIntervalId);\r\n      this.props.set_sokcet_intervalID(0);\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 設定一覧で選択されたコンテンツデータを返す。\r\n  setItem = (item) => {\r\n    this.setState({selectedItem:item});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分セットテーブルで選択された区分のクロール対象データを返す。\r\n  setSelectedCrawling = (item) => {\r\n    var filter = this.props.thisCrawlingList.filter((v) => v.kbn === item.kbn);\r\n    var dummyList = [];\r\n    if(filter.length !== 0) {\r\n      filter.map((i, index) => {\r\n        let list = {};\r\n        list.kbn = i.kbn\r\n        list.kbnname = i.kbnname\r\n        list.jigyosyaid = i.jigyosyaid\r\n        list.name = i.name\r\n        list.crawlingurl = i.crawlingurl\r\n        list.xpathTitle = i.xpathTitle\r\n        list.xpathLink = i.xpathLink\r\n        list.xpathImage = i.xpathImage\r\n        dummyList.push(list);\r\n      });\r\n    }\r\n    this.setState({selectedCrawling:dummyList})\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // CrawlingList.jsのクローリング情報の更新処理を呼び出す。this.state.selectedItemを更新している。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callUpdateCrawlingList = (\r\n    item,\r\n    changedCrawlingUrl,\r\n    changedCrawlingXpathTitle,\r\n    changedValueCrawlingXpathLink,\r\n    changedValueCrawlingXpathImage) => { \r\n      setUpdateCrawlingList (\r\n        item,\r\n        changedCrawlingUrl,\r\n        changedCrawlingXpathTitle,\r\n        changedValueCrawlingXpathLink,\r\n        changedValueCrawlingXpathImage\r\n      )\r\n      .then((response) => {\r\n        if (response.flag) {\r\n          this.setSelectedCrawling(item);  // クロール対象データセット更新\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // クローリング情報の新規登録処理を呼び出す。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callNewCrawlingList = (item) => { \r\n    addNewCrawlingList(item)\r\n    .then(()=>{\r\n      this.setSelectedCrawling(item);  // クロール対象データセット更新\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分情報を新規登録する処理。setNewKubunListメソッドの中でstoreのデータも更新している。\r\n  callNewKubunList = (changedValueKubun, changedValueKubunName, changedValueComment) => { \r\n    setNewKubunList(changedValueKubun, changedValueKubunName, changedValueComment)\r\n    .then(()=>{\r\n      this.setStateKbns();  // 区分データセット更新\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    })\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分セットテーブルで選択された区分のクロール対象データを返す。\r\n  setSelectedCrawling = (item) => {\r\n    var filter =  this.props.thisCrawlingList.filter((v) => v.kbn == item.kbn);\r\n    var dummyList = [];\r\n    if(filter.length != 0) {\r\n      filter.map((i, index) => {\r\n        let list = {};\r\n        list.kbn = i.kbn\r\n        list.kbnname = i.kbnname\r\n        list.jigyosyaid = i.jigyosyaid\r\n        list.name = i.name\r\n        list.crawlingurl = i.crawlingurl\r\n        list.xpathTitle = i.xpathTitle\r\n        list.xpathLink = i.xpathLink\r\n        list.xpathImage = i.xpathImage\r\n        dummyList.push(list);\r\n      });\r\n    }\r\n    this.setState({selectedCrawling:dummyList});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分データセット更新\r\n  setStateKbns = () => {\r\n    this.setState({kbns:this.props.thisKubunList});\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 編集ボタン押下時の処理はkubunSettingMaterialTable.jsx,detailCrawlSettingMaterialTable.jsx\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 削除ボタン押下時の処理はkubunSettingMaterialTable.jsx,detailCrawlSettingMaterialTable.jsx\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示・非表示の設定をフラグ管理する\r\n  modalWrapperFlag = () => {\r\n    this.state.open ? this.setState({open:false}) : this.setState({open:true});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示する画面の種別を判定\r\n  // (init)0:編集画面 1:新規登録画面\r\n  setModalIndex = (props) => {\r\n    // パラメータの値をthis.stateにセット\r\n    this.setState({modalIndex:props});\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 最終更新日時を返す\r\n  recentKubunUpdateDate = () => {\r\n    recentUpdateFileDate(2, \"mtime\") // パラメータ:2は区分リスト\r\n    .then((response) => {\r\n      if(response) {\r\n        this.setState({recentFileUpdate:response[\"mtime\"]});\r\n      } else {\r\n        this.setState({recentFileUpdate:\"取得できませんでした\"});\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // レンダー\r\n  render() {\r\n    ///////////////////////////////////////////////////////////////// \r\n    // モーダル表示する画面の種別に対応したjsxを返却\r\n    // (init)0:区分セットの区分登録ボタン 1:クロール対象データのデータ登録ボタン 3:クロール対象データの編集ボタン\r\n    const setModalJsx = () => {\r\n      if(this.state.modalIndex === 0) {\r\n        return (\r\n          <KubunSettingInModal \r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            kbns={this.state.kbns}\r\n            callNewKubunList={this.callNewKubunList}\r\n          />          \r\n        );\r\n      } else if(this.state.modalIndex === 1) {\r\n        return (\r\n          <RegistKrawlSettingInModal\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            kbns={this.state.kbns}\r\n            setModalIndex={this.setModalIndex}\r\n            callNewCrawlingList={this.callNewCrawlingList}\r\n          />\r\n        );\r\n      } else if(this.state.modalIndex === 2) {\r\n        return (\r\n          <ShortKrawlSettingInModal \r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            selectedItem={this.state.selectedItem}\r\n            setModalIndex={this.setModalIndex}\r\n            callUpdateCrawlingList={this.callUpdateCrawlingList}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        <Grid container spacing={2} justifyContent=\"flex-start\" style={{padding: \"0.5em\", right: \"30%\"}}>\r\n          <Grid Item xs={3} style={{padding: \"0.5em\"}}>\r\n            <Button\r\n              id=\"button-kubunsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              size=\"small\"\r\n              onClick={()=>this.modalWrapperFlag()}\r\n              startIcon={<AddCircleIcon/>}\r\n            >区分登録</Button>\r\n            <Button\r\n              id=\"button-kubunsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              size=\"small\"\r\n              onClick={()=>{\r\n                this.setModalIndex(1);\r\n                this.modalWrapperFlag()\r\n              }}\r\n              startIcon={<AddCircleIcon/>}\r\n            >サイト登録</Button>\r\n          </Grid>\r\n          <Grid Item className=\"kubun-status\" xs={2} justifyContent=\"flex-end\" style={{padding: \"0.5em\", margin:\"0.5em\"}} className=\"top-Box\">\r\n            <div className=\"label-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>最終更新日時</p></div>\r\n            <div className=\"label-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>&nbsp;{this.state.recentFileUpdate}</p></div>\r\n          </Grid>\r\n        </Grid>\r\n        <div className=\"materialTableWrapper\">\r\n          {/* パラメータの数字2は区分設定画面の区分セットを指す(他の画面と区別する為) */}\r\n          <KubunSettingMaterialTable\r\n            columns ={columnsData(2)}\r\n            data={this.state.kbns}\r\n            actions={2}\r\n            editable={2}\r\n            open={this.state.open}\r\n            setSelectedCrawling={this.setSelectedCrawling}\r\n            setStateKbns={this.setStateKbns}\r\n          />\r\n          {/* パラメータの数字3は区分設定画面のクロール対象データセットを指す(他の画面と区別する為) */}\r\n          <DetailCrawlSettingMaterialTable\r\n            columns={columnsData(3)}\r\n            data={this.state.selectedCrawling}\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            setModalIndex={this.setModalIndex}\r\n            open={this.state.open}\r\n            setItem={this.setItem}\r\n            setSelectedCrawling={this.setSelectedCrawling}\r\n          />\r\n          <ModalWrapper\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            content={setModalJsx()}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ReactコンポーネントとReduxストアをコネクト\r\nconst mapStateToProps = (state) => ({\r\n\tthisKubunList: state.componentReducer.thisKubunList.kbns,\r\n  thisCrawlingList: state.componentReducer.thisCrawlingList.crawling,\r\n  status: state.loginReducer.status,\r\n  thisIntervalId: state.componentReducer.thisIntervalId\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  set_sokcet_intervalID: int => dispatch(actions.SET_SOCKET_INTERVALID(int))\r\n});\r\n\r\nconst ContainerShowKubunSetting = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(ShowKubunSetting);\r\n\r\nexport default ContainerShowKubunSetting;","// メニューバー、ツールバーで使用するライブラリ\r\nimport React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport getContentsList from '../actions/contentsList.js';\r\nimport * as actions from \"../actions/action.js\"\r\n\r\nconst drawerWidth = 240;\r\n\r\n// ツールバーのタイトルのフォントサイズ調整\r\nconst useStyles = makeStyles(theme => ({\r\n\tlistItemText:{\r\n\t\tpaddingLeft:\"1em!important\",\r\n\t\tfontSize:\"10pt!important\",\r\n\t},\r\n\tlistItemTextContentsfile:{\r\n\t\tpaddingLeft:\"2em!important\",\r\n\t\tfontSize:\"10pt!important\",\r\n\t},\r\n\tlinkElementStyleonLogin:{\r\n\t\ttextDecoration: \"none\",\r\n\t},\r\n\tlinkElementStyleonLogout:{\r\n\t\ttextDecoration: \"none\",\r\n\t\tpointerEvents:\"none\",\r\n\t}\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// コンテンツメニューの開閉を制御する\r\n\tconst [selectedContentsIndex, setSelectedContentsIndex] = React.useState(0);\r\n\tconst [opencontents, setOpenContents] = React.useState(false);\r\n\tconst styles = useStyles();\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetOpenContents(!opencontents);\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// アイコンボタン押下時のメニュー開閉を制御する\r\n\tconst optionMenuIcon = [\r\n\t\t\"ログアウト\",\r\n\t];\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst open = Boolean(anchorEl);\r\n\tconst [selectedIconIndex, setSelectedIconIndex] = React.useState(0);\r\n\t// アイコンボタン押下処理\r\n\tconst onClickIconButton = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t}\r\n\t// アイコンボタン押下時に現れるメニューより選択したアイテムの押下処理\r\n\tconst onClickSelectedIcon = (event, index) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetSelectedIconIndex(index);\r\n\t\tsetAnchorEl(null);\r\n\t\tif(selectedIconIndex === 0) {\r\n\t\t\t// ログアウト処理\r\n\t\t\tprops.LOGOUT();\r\n\t\t\twindow.location.href = \"/\";\r\n\t\t}\r\n\t};\r\n\t// メニューを閉じるイベント処理\r\n\tconst handleClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 選択されたコンテンツファイル名にselectedを有効化する\r\n\tconst handleListItemClick = (text) => {\r\n\t\tsetSelectedContentsIndex(text);\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 選択されたコンテンツファイル名を返却\r\n\tconst callApp = (selectedFileName) => {\r\n\t\tgetContentsList(selectedFileName);\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 左側のメニューバー\r\n\tconst drawer = (\r\n\t<div>\r\n\t\t<Toolbar id=\"toolBar-loginInfo\" style={{fontSize:\"0.8rem\"}}>\r\n\t\t\t<p style={{marginTop: \"0.5em\", marginBottom: \"0.5em\"}}>ユーザー :  {props.user}</p>\r\n\t\t\t<p style={{marginTop: \"0.5em\", marginBottom: \"0.5em\"}}>更新時刻 :  {new Date().toLocaleString('ja-JP')}</p>\r\n\t\t</Toolbar>\r\n\t\t<Divider/>\r\n\t\t<List>\r\n\t\t\t{/* 区分セットページ */}\r\n\t\t\t<Link to=\"/ShowKubunSetting\" style={{textDecoration: \"none\"}}>\r\n\t\t\t\t<ListItem button selected={selectedContentsIndex === 20}onClick={(e) => handleListItemClick(20, e)}>\r\n\t\t\t\t\t<ListItemText primary=\"区分セット\" className=\"list-item-text\" classes={{primary:styles.listItemText}}/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t</Link>\r\n\t\t\t{/* 実行結果セットページ */}\r\n\t\t\t<ListItem button>\r\n\t\t\t\t<ListItemText primary=\"実行結果セット\" className=\"list-item-text\" classes={{primary:styles.listItemText}}/>\r\n\t\t\t\t{opencontents \r\n\t\t\t\t? <ExpandLess onClick={handleClick} style={{color:\"#FFF\",marginRight: \"1em\"}}/>\r\n\t\t\t\t: <ExpandMore onClick={handleClick} style={{color:\"#FFF\", marginRight: \"1em\"}}/>\r\n\t\t\t\t}\r\n\t\t\t</ListItem>\r\n\t\t\t<Collapse in={opencontents} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t{props.fileNameList !== undefined &&\r\n\t\t\t\t\tprops.fileNameList.map((fileName, index) => (\r\n\t\t\t\t\t\t<Link to=\"/ShowCrawlSetting\" key={fileName} style={{textDecoration: \"none\"}}>\r\n\t\t\t\t\t\t\t<ListItem button selected={selectedContentsIndex === fileName} onClick={(e) => {handleListItemClick(fileName, e); callApp(fileName, e)}}>\r\n\t\t\t\t\t\t\t\t<ListItemText primary={fileName} className=\"list-item-text-contentsfile\" classes={{primary:styles.listItemTextContentsfile}}/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t))}\r\n\t\t\t</Collapse>\r\n\t\t\t{/* コンテンツ表示ページ */}\r\n\t\t\t<ListItem button>\r\n\t\t\t\t<ListItemText primary=\"コンテンツ\" onClick={handleClick} className=\"list-item-text\" classes={{primary:styles.listItemText}}/>\r\n\t\t\t\t{opencontents \r\n\t\t\t\t? <ExpandLess onClick={handleClick} style={{color:\"#FFF\",marginRight: \"1em\"}}/>\r\n\t\t\t\t: <ExpandMore onClick={handleClick} style={{color:\"#FFF\", marginRight: \"1em\"}}/>\r\n\t\t\t\t}\r\n\t\t\t</ListItem>\r\n\t\t\t<Collapse in={opencontents} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t{props.fileNameList !== undefined &&\r\n\t\t\t\t\tprops.fileNameList.map((fileName, index) => (\r\n\t\t\t\t\t\t<Link to=\"/ShowContentsArea\" key={fileName} style={{textDecoration: \"none\"}}>\r\n\t\t\t\t\t\t\t<ListItem button selected={selectedContentsIndex === fileName} onClick={(e) => {handleListItemClick(fileName, e); callApp(fileName, e)}}>\r\n\t\t\t\t\t\t\t\t<ListItemText primary={fileName} className=\"list-item-text-contentsfile\" classes={{primary:styles.listItemTextContentsfile}}/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t))}\r\n\t\t\t</Collapse>\r\n\t\t</List>\r\n\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Box sx={{ display: 'flex' }}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t{/* 上部のツールバー */}\r\n\t\t\t<AppBar\tposition=\"fixed\" sx={{width: { sm: `calc(100% - ${drawerWidth}px)` },ml: { sm: `${drawerWidth}px` },}}>\r\n\t\t\t<Toolbar style={{justifyContent:\"space-between\"}}>\r\n\t\t\t\t{/* タイトル */}\t\r\n\t\t\t\t<Typography className=\"toolbarTypography\"variant=\"h6\" noWrap component=\"div\" style={{fontSize:\"16pt!important\"}}>Site Checker...</Typography>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\taria-label=\"opencontentsDrawer\"\r\n\t\t\t\t\tonClick={onClickIconButton}\r\n\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t// sx={{marginRight: '36px', ...(opencontents && { display: 'none' })}}\r\n\t\t\t\t\tsx={{marginRight: '36px', }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t{/* メニューアイコン(ログアウト処理) */}\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Menu\r\n\t\t\t\t\tid=\"lock-menu\"\r\n\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tMenuListProps={{\r\n\t\t\t\t\t\t'aria-labelledby': 'lock-button',\r\n\t\t\t\t\t\trole: 'listbox',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{optionMenuIcon.map((option, index) => (\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t// disabled={index === 0}\r\n\t\t\t\t\t\t\t// selected={index === selectedIconIndex}\r\n\t\t\t\t\t\t\t// onClick={(e) => onClickSelectedIcon(e, index)}\r\n\t\t\t\t\t\t\tonClick={(e) => onClickSelectedIcon(e)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Menu>\r\n\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t{/* 左側のメニューバー表示 */}\r\n\t\t\t<Box component=\"nav\" sx={{width: { sm: drawerWidth }, flexShrink: { sm: 0 } }} aria-label=\"mailbox folders\">\r\n\t\t\t\t{/* 左側のメニューバー表示(中身) */}\t\t\t\r\n\t\t\t\t<Drawer\tvariant=\"permanent\"\tsx={{display: {xs: 'none', sm: 'block' },\t'& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },}} opencontents>\r\n\t\t\t\t\t{drawer}\r\n\t\t\t\t</Drawer>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ReactコンポーネントとReduxストアをコネクト\r\nconst mapStateToProps = (state) => ({\r\n\tfileNameList: state.componentReducer.fileNameList,\r\n\tuser: state.loginReducer.user\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tLOGOUT: () => dispatch(actions.LOGOUT())\r\n});\r\n\r\nconst ContainerResponsiveDrawer = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(ResponsiveDrawer);\r\n\r\nexport default ContainerResponsiveDrawer;","///////////////////////////////////////////////////////////////// \r\n// エラー発生時に描写するコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nimport * as React from 'react';\r\n\r\nconst fontFamily = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu',\" +\r\n \t\"'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false,\r\n\t\t\terror: null,\r\n\t\t\terrorInfo: null,\r\n\t\t};\r\n\t}\r\n\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\treturn { hasError: true };\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tthis.setState({error, errorInfo});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\t// エラー時の表示\r\n\t\t\treturn(\r\n\t\t\t\t<div style={{marginLeft:\"17rem\", marginRight:\"17rem\"}}>\r\n\t\t\t\t\t<h1 style={{fontFamily:fontFamily}}>JavaScriptの致命的エラー</h1>\r\n\t\t\t\t\t<pre style={{fontFamily:fontFamily}}>{this.state.error?.message}</pre>\r\n\t\t\t\t\t<pre style={{fontFamily:fontFamily}}>{this.state.errorInfo?.componentStack}</pre>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn(\r\n\t\t\tthis.props.children\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport LoginUI from './loginUi.jsx';\r\nimport setThisOriginName from './actions/login.js';\r\nimport getContentsList from './actions/contentsList.js';\r\nimport { recentUpdateFileDate } from './actions/contentsList.js';\r\nimport getKbnList from './actions/kubunList.js';\r\nimport getCrawlingList from './actions/crawlingList.js';\r\nimport ContainerAuth from './auth.jsx';\r\nimport ContainerShowContentsArea from './show/showContentsArea.jsx';\r\nimport ContainerShowCrawlSetting  from './show/showCrawlSetting.jsx';\r\nimport ContainerShowKubunSetting  from './show/showKubunSetting.jsx';\r\nimport ContainerResponsiveDrawer from './toolbar/toolbar.jsx';\r\nimport ErrorBoundary from './error/errorBoundary.jsx';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport store from \"./store/store.js\";\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// メインコンポーネント\r\nexport default class App extends React.Component {\r\n  constructor (props){\r\n    super(props);\r\n    Promise.resolve()\r\n    .then(setThisOriginName())\r\n    .then(getContentsList(store.getState().componentReducer.selectedFileName))\r\n    .then(getKbnList())\r\n    .then(getCrawlingList())\r\n    .then(() => {\r\n      // コンテンツファイル名のリストを取得\r\n      recentUpdateFileDate(1, \"list\");\r\n      // コンテンツリスト(最新のもの)最終更新日時を取得。=最終クローリング日時\r\n      recentUpdateFileDate(1, \"mtime\");\r\n    });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // レンダー\r\n  render() {\r\n    return(\r\n      <ErrorBoundary>\r\n        <div className=\"loading\"><span className=\"circle\"></span></div>\r\n        <Switch>\r\n          <Route exact path='/' component={LoginUI}/>\r\n          <ContainerAuth>\r\n            <ContainerResponsiveDrawer/>\r\n            <Route path='/ShowCrawlSetting' component={ContainerShowCrawlSetting}/>\r\n            <Route path='/ShowKubunSetting' component={ContainerShowKubunSetting}/>\r\n            <Route path='/ShowContentsArea' component={ContainerShowContentsArea}/>\r\n          </ContainerAuth>\r\n        </Switch>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.jsx';\n// Redux使用部分\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './store/store.js';\n\n///////////////////////////////////////////////////////////////// \n// ルートコンポーネント\nexport default class Root extends React.Component {\n  render() {\n    return(\n      <BrowserRouter>\n        <Provider store={store}>\n          <App/>\n        </Provider>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDOM.render(<Root/>, document.getElementById('root'));"],"sourceRoot":""}