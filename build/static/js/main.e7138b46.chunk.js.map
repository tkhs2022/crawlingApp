{"version":3,"sources":["reducers/loginReducer.js","reducers/componentReducer.js","history.js","store/store.js","actions/action.js","loginUi.jsx","actions/contentsList.js","commonFunc.js","actions/kubunList.js","actions/crawlingList.js","auth.jsx","card/cardComponent.jsx","show/showContentsBlock.jsx","show/showContentsTitle.jsx","show/showContentsArea.jsx","materialTable/crawlSettingMaterialTable.jsx","show/showModalWindow.jsx","actions/materialTableColumns.js","show/showCrawlSetting.jsx","materialTable/detailCrawlSettingMaterialTable.jsx","materialTable/kubunSettingMaterialTable.jsx","show/showKubunSetting.jsx","toolbar/toolbar.jsx","error/errorBoundary.jsx","app.jsx","index.jsx"],"names":["initialState","session","status","user","loginReducer","state","action","type","fileNameList","selectedFileName","thisContents","mtime","thisKubunList","thisCrawlingList","componentReducer","fileName","contentsList","kubunList","crawlingList","history","createBrowserHistory","require","store","createStore","combineReducers","router","connectRouter","window","REDUX_DEVTOOLS_EXTENSION","applyMiddleware","routerMiddleware","ActionType","LOGIN_REQUEST","LOGIN_RECEIVE_SUCCESS","nowUser","LOGIN_RECEIVE_FAILED","ActionType2","SET_KUBUN_LIST","nowKubunList","SET_CRAWLING_LIST","nowCrawlingList","Login","password","_user","Promise","resolve","reject","dispatch","fetch","method","mode","heders","body","JSON","stringify","then","response","ok","json","responseJson","result","catch","error","console","LoginUI","props","useState","message","setMessage","setUser","setPassword","Paper","style","maxWidth","margin","marginTop","color","padding","TextField","label","width","fontSize","rows","onChange","e","target","value","Grid","container","justifyContent","direction","item","Button","variant","onClick","preventDefault","list","getState","push","onLogin","getContentsList","selectedContentsList","data","flag","recentUpdateFileDate","fileKubun","request","param","cssFileControl","disableFileName","ableFileName","i","document","styleSheets","length","href","styleSheetPath","substring","lastIndexOf","disabled","cssFileDisable","cssFileAble","KubunListJsonFileName","setEditKubunList","kbnBefore","before","kbn","kbnnameBefore","kbnname","commentBefore","comment","kbnAfter","after","kbnnameAfter","commentAfter","str","undefined","alert","String","fromCharCode","charCodeAt","isNaN","Number","res","stringToNumber","kbns","findIndex","v","CrawlingListJsonFileName","addNewCrawlingList","newCrawlingList","jigyosyaid","name","crawlingurl","xpathTitle","replace","xpathLink","xpathImage","setUpdateCrawlingList","changedCrawlingUrl","changedCrawlingXpathTitle","changedValueCrawlingXpathLink","changedValueCrawlingXpathImage","crawling","Auth","this","checkAuth","location","children","React","Component","ContainerAuth","connect","ArticleCardStyle","makeStyles","root","media","height","MediaCardForContentsBlock","Content","classes","className","Card","CardActionArea","source","textDecoration","rel","CardMedia","image","title","CardContent","Typography","component","ContentsBlockControl","Rows","thisContentsArticle","map","index","Kbn","id","DetailOriginal","MoveBlockOnClick","TargetKbn","Caller","SiteHedderActive","SiteHedderActiveM","GetterSiteHedderActive","CaseA","ElementOfContentsBlock","getElementById","TargetContentsBlockClassName","getAttribute","DetailShow","setAttribute","DetailShowActiveSiteHedder","CaseB","DetailHide","ContainerContentsBlockControl","article","ContentsTitleButtonWithBorder","selectedIndex","setState","click","PreClickM","GetterPreClick","ElementPreClick","ContentTitleUnderBorderShow","classList","ContentTitleUnderBorderHide","ContentTitleUnderBorderOriginal","ElementThisClick","SetterPreClick","selected","ContentsTitleBlock","NaviBar","Kbns","noWrap","Transition","in","mount","timeout","ContentsTitleOriginal","TransitionContentsTitleShow","entering","transform","entered","exiting","exited","PreClickMortion","PreClick","SiteHedderActiveMortion","MainBlockControl","ContentsRows","List","ShowContentsArea","ContainerShowContentsArea","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Save","CrawlSettingMaterialTable","editableCrawlSetting","columns","options","showTitle","search","tableLayout","overflowX","paging","maxBodyHeight","headerStyle","position","top","searchFieldStyle","icons","actions","icon","tooltip","cellStyle","minWidth","fontWeight","rowData","setItem","modalWrapperFlag","ModalWrapper","Modal","open","onClose","left","onRequestClose","content","KrawlSettingInModal","selectedItem","changedValueCrawlingUrl","setValueCrawlingUrl","changedValueCrawlingXpathTitle","setValueCrawlingXpathTitle","setValueCrawlingXpathLink","setValueCrawlingXpathImage","callUpdateCrawlingList","Fade","defaultValue","kiziid","fullWidth","justify","size","startIcon","ShortKrawlSettingInModal","setModalIndex","RegistKrawlSettingInModal","changedValueKubun","setValueKubun","changedValueKubunName","setValueKubunName","changedValueJigyosyaid","setValueJigyosyaid","changedValueName","setValueName","paramObj","callNewCrawlingList","FormControl","InputLabel","Select","labelId","targetValue","callSetKbnNameLabel","key","MenuItem","KubunSettingInModal","changedValueComment","setValueComment","callNewKubunList","columnsCrawlSetting","field","columnsKubunSetting","columnsDetailCrawlSetting","columnsData","ShowCrawlSetting","modalIndex","execCrawling","element","setCrawlingStatus","backgroundColor","log","url","recentFileUpdate","selectedCrawling","spacing","Item","xs","editable","ContainerShowCrawlSetting","DetailCrawlSettingMaterialTable","setData","editableDetailCrawlSetting","onRowDelete","oldData","dataSet","dataDelete","tableData","delete","splice","targetKubun","targetJigyosyaid","setDeleteCrawlingList","setSelectedCrawling","localization","header","editRow","deleteText","KubunSettingMaterialTable","editableKubunSetting","onRowUpdate","newData","dataUpdate","setStateKbns","setDeleteKubunList","marginLeft","ShowKubunSetting","filter","dummyList","setNewKubunList","recentKubunUpdateDate","right","ContainerShowKubunSetting","drawerWidth","useStyles","theme","listItemText","paddingLeft","listItemTextContentsfile","linkElementStyleonLogin","linkElementStyleonLogout","pointerEvents","ContainerResponsiveDrawer","LOGOUT","selectedContentsIndex","setSelectedContentsIndex","opencontents","setOpenContents","styles","handleClick","anchorEl","setAnchorEl","Boolean","selectedIconIndex","setSelectedIconIndex","handleListItemClick","text","callApp","drawer","Toolbar","marginBottom","Date","toLocaleString","Divider","to","ListItem","button","ListItemText","primary","marginRight","Collapse","unmountOnExit","Box","sx","display","CssBaseline","AppBar","sm","ml","IconButton","event","currentTarget","edge","MenuListProps","role","option","onClickSelectedIcon","flexShrink","Drawer","boxSizing","fontFamily","ErrorBoundary","hasError","errorInfo","componentStack","App","exact","path","Root","ReactDOM","render"],"mappings":"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","file":"static/js/main.e7138b46.chunk.js","sourcesContent":["////////////////////////////////////////////////////\r\n// レデューサー\r\n////////////////////////////////////////////////////\r\nexport const dumb = (state = {}) => state;\r\n\r\n////////////////////////////////////////////////////\r\n// ログイン\r\nexport const initialState = {\r\n    session:false,\r\n    status:0,    // 0:処理前 1:ログイン成功 -1:ログイン失敗\r\n    user:null\r\n};\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_REQUEST\":\r\n            return { ...state, session:false, status: 0}\r\n        case \"LOGIN_RECEIVE_SUCCESS\":\r\n            return { ...state, session:true, status: 1, user:action.user}\r\n        case \"LOGIN_RECEIVE_FAILED\":\r\n            return { ...state, session:false, status:-1}\r\n        case \"LOGOUT\":\r\n            return { ...state, session:false, status:0}    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default loginReducer;","////////////////////////////////////////////////////\r\n// レデューサー\r\n////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////\r\n// コンポーネントのstate\r\nexport const initialState = {\r\n\tfileNameList:[\"contents\"],\r\n\tselectedFileName:\"contents\",\t// 拡張子は付けない。バックエンドで操作しているため。\r\n\tthisContents:null,\r\n\tmtime:\"未取得\",\r\n\tstatus:\"停止\",\r\n\tthisKubunList:null,\r\n\tthisCrawlingList:null\r\n};\r\n\r\nexport const componentReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SET_FILENAME_LIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfileNameList:action.fileNameList\r\n\t\t\t}\r\n\r\n\t\tcase \"SET_MTIME\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmtime:action.mtime\r\n\t\t\t}\r\n\t\r\n\t\tcase \"SET_SELECTED_FILENAME\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedFileName:action.fileName,\r\n\t\t\t\tthisContents:action.contentsList\r\n\t\t\t}\r\n\r\n\t\tcase \"SET_CRAWLING_STATUS\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus:action.status,\r\n\t\t\t}\r\n\r\n\t\tcase \"SET_KUBUN_LIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tthisKubunList:action.kubunList\r\n\t\t\t}\r\n\r\n\t\tcase \"SET_CRAWLING_LIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tthisCrawlingList:action.crawlingList\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default componentReducer;","const createBrowserHistory = require(\"history\").createBrowserHistory;\r\nconst history = createBrowserHistory();\r\nexport default history;","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\r\nimport loginReducer from '../reducers/loginReducer.js';\r\nimport componentReducer from '../reducers/componentReducer.js';\r\nimport history from '../history.js';\r\n\r\nconst store = createStore (\r\n\tcombineReducers({\r\n\t\trouter: connectRouter(history),\r\n\t\tloginReducer,\r\n\t\tcomponentReducer\r\n\t}),\r\n\twindow.REDUX_DEVTOOLS_EXTENSION && window.REDUX_DEVTOOLS_EXTENSION(),\r\n\tapplyMiddleware(\r\n\t\trouterMiddleware(history)\r\n\t)\r\n);\r\n\r\nexport default store;\r\n","import store from \"../store/store.js\";\r\n/////////////////////////////////////////////////////////////////\r\n// ログイン情報をリクエスト\r\n// ***レスポンスデータのイメージ***\r\n// array{\"status:true, \"result\":{\"user\": \"yamada\"}}\r\nconst Login = (user, password) => {\r\n    var _user = user;\r\n    var _password = password;\r\n    return new Promise((resolve, reject) => {\r\n        store.dispatch(LOGIN_REQUEST());\r\n        fetch(\"/requestLoginInfo\", {\r\n            method: \"POST\",\r\n            mode: \"no-cors\",\r\n            heders: {\r\n                'Content-Type':'application/json;charset=utf-8',\r\n                'Accept':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"user\":user,\r\n                \"password\":password\r\n            })\r\n        })\r\n        .then((response) => {\r\n            if(response.ok) {\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(function(responseJson) {\r\n            if(responseJson.result == true) {\r\n                store.dispatch(LOGIN_RECEIVE_SUCCESS(_user));\r\n                resolve(true);\r\n            } else {\r\n                store.dispatch(LOGIN_RECEIVE_FAILED());\r\n                resolve(false);\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            store.dispatch(LOGIN_RECEIVE_FAILED());\r\n            reject(false);\r\n        });\r\n    });\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n// ここからログイン処理のアクション\r\n////////////////////////////////////////////////////////////////////////////\r\n// アクションタイプをマッピング\r\nexport const ActionType = {\r\n    LOGOUT:\"LOGOUT\",\r\n    LOGIN_REQUEST:\"LOGIN_REQUEST\",\r\n    LOGIN_RECEIVE_SUCCESS:\"LOGIN_RECEIVE_SUCCESS\",\r\n    LOGIN_RECEIVE_FAILED:\"LOGIN_RECEIVE_FAILED\"\r\n}\r\n\r\n// ログアウト処理\r\nexport const LOGOUT = () => {\r\n    return {\r\n        type:ActionType.LOGOUT\r\n    };\r\n}\r\n\r\n// ログインリクエスト中\r\nexport const LOGIN_REQUEST = () => {\r\n    return {\r\n        type: ActionType.LOGIN_REQUEST\r\n    };\r\n}\r\n\r\n// リクエスト成功\r\nexport const LOGIN_RECEIVE_SUCCESS = (nowUser) => {\r\n    return {\r\n        type: ActionType.LOGIN_RECEIVE_SUCCESS,\r\n        user:nowUser\r\n    };\r\n}\r\n\r\n// リクエスト失敗\r\nexport const LOGIN_RECEIVE_FAILED = () => {\r\n    return {\r\n        type:ActionType.LOGIN_RECEIVE_FAILED\r\n    };\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n// ここからコンポーネントのアクション\r\n////////////////////////////////////////////////////////////////////////////\r\n// アクションタイプをマッピング\r\nexport const ActionType2 = {\r\n\tSET_FILENAME_LIST:\"SET_FILENAME_LIST\",\r\n    SET_MTIME:\"SET_MTIME\",\r\n\tSET_SELECTED_FILENAME:\"SET_SELECTED_FILENAME\",\r\n    SET_CRAWLING_STATUS:\"SET_CRAWLING_STATUS\",\r\n    SET_KUBUN_LIST:\"SET_KUBUN_LIST\",\r\n    SET_CRAWLING_LIST:\"SET_CRAWLING_LIST\"\r\n}\r\n\r\n// コンテンツファイルリストを返却\r\nexport const SET_FILENAME_LIST = (param) => {\r\n\treturn {\r\n\t\t\ttype: ActionType2.SET_FILENAME_LIST,\r\n            fileNameList:param\r\n\t};\r\n}\r\n\r\n// ファイル最終更新日時\r\nexport const SET_MTIME = (param) => {\r\n\treturn {\r\n\t\t\ttype:ActionType2.SET_MTIME,\r\n            mtime:param\r\n\t};\r\n}\r\n\r\n// コンテンツファイルリストの中からユーザーが選択したファイルを返却\r\nexport const SET_SELECTED_FILENAME = (selectedFileName, selectedContentsList) => {\r\n\treturn {\r\n\t\t\ttype:ActionType2.SET_SELECTED_FILENAME,\r\n            fileName:selectedFileName,\r\n            contentsList:selectedContentsList\r\n\t};\r\n}\r\n\r\nexport const SET_CRAWLING_STATUS = (nowStatus) => {\r\n    return {\r\n        type:ActionType2.SET_CRAWLING_STATUS,\r\n        status:nowStatus\r\n    }\r\n}\r\n\r\nexport const SET_KUBUN_LIST = (nowKubunList) => {\r\n    return {\r\n        type:ActionType2.SET_KUBUN_LIST,\r\n        kubunList:nowKubunList\r\n    }\r\n}\r\n\r\nexport const SET_CRAWLING_LIST = (nowCrawlingList) => {\r\n    return {\r\n        type:ActionType2.SET_CRAWLING_LIST,\r\n        crawlingList:nowCrawlingList\r\n    }\r\n}\r\n\r\nexport default Login;","///////////////////////////////////////////////////////////////// \n// ログインクラス\n///////////////////////////////////////////////////////////////// \nimport React, { useState } from \"react\";\nimport Login from \"./actions/action.js\";\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport store from \"./store/store.js\";\n\n///////////////////////////////////////////////////////////////// \n// コンポーネント\nexport function LoginUI(props) {\n  const [message, setMessage] = useState(\"未入力。\");\n  const [user, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  ///////////////////////////////////////////////////////////////// \n  // ログインボタン押下処理\n  const onLogin = (e) => {\n    e.preventDefault();\n    if(user && password) {\n      Login(user, password)\n      .then((response) => {\n        var list = store.getState();\n        if(list.loginReducer.status === -1) {\n          setMessage(\"ユーザー名もしくはパスワードが違います。\");\n        } else if(list.loginReducer.status === 1) {\n          setMessage(\"ログイン成功\");\n          props.history.push('/ShowContentsArea');\n        }  \n      });\n    } else {\n      setMessage(\"ユーザー名とパスワードを入力してください。\");\n    }\n  }\n\n    return (\n      <div>\n        <Paper style={{maxWidth:\"30%\", margin:\"0 auto\", marginTop:\"15%\"}}>\n          <div>\n            <div style={{ color: \"red\"}}>\n              <p style={{margin:\"0 auto\", padding:\"10px\"}}>{message}</p>\n            </div>\n            <div>\n              <TextField\n                label=\"ユーザー\"\n                style={{width: \"80%\", margin: 8, fontSize:\"midium\"}}\n                rows={1}\n                onChange={(e) => setUser(e.target.value)}\n              ></TextField>\n            </div>\n            <div>\n              <TextField\n                label=\"パスワード\"\n                style={{width: \"80%\", margin: 8, fontSize:\"midium\"}}\n                rows={1}\n                onChange={(e) => setPassword(e.target.value)}\n              ></TextField>\n            </div>\n          </div>\n          <Grid container style={{fontSize:\"midium\"}} justifyContent=\"flex-end\" direction=\"row\">\n            <Grid item>\n              <Button\n                style={{margin: \"1.5em\", fontSize:\"midium\"}}\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={(e) => onLogin(e)}\n              >\n              ログイン\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n}\n\nexport default LoginUI;","\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツリスト\r\n///////////////////////////////////////////////////////////////// \r\nimport * as action from \"../actions/action.js\";\r\nimport store from \"../store/store.js\";\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツリストのゲッター\r\nexport default function getContentsList(fileName) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// fetch処理\r\n\t\tfetch(\"/getContentsList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileName\":fileName\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(function(responseJson) {\r\n\t\t\tstore.dispatch(action.SET_SELECTED_FILENAME(fileName, responseJson.data));\r\n\t\t\tresolve(responseJson);\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treject({flag:false});\r\n\t\t});\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ファイルの更新日時を返す\r\nexport function recentUpdateFileDate(fileKubun, request) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// fetch処理\r\n\t\tfetch(\"/recentUpdateFileDate\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileKubun\":fileKubun,\r\n\t\t\t\t\"request\":request\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(function(responseJson) {\r\n\t\t\tif(request == \"list\") {\r\n\t\t\t\tstore.dispatch(action.SET_FILENAME_LIST(responseJson));\r\n\t\t\t} else if(request == \"mtime\") {\r\n\t\t\t\tstore.dispatch(action.SET_MTIME(responseJson.mtime));\r\n\t\t\t}\r\n\t\t\tresolve(responseJson);\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treject({flag:false});\r\n\t\t});\r\n\t});\r\n}","///////////////////////////////////////////////////////////////// \r\n// CSSファイルの無効、有効化\r\nexport default function cssFileControl(disableFileName, ableFileName) {\r\n\tfor(var i = 0; i < document.styleSheets.length; i++) {\r\n\t\tif (document.styleSheets[i].href != null) {\r\n\t\t\tvar styleSheetPath = document.styleSheets[i].href;\r\n\t\t\tvar fileName = styleSheetPath.substring(styleSheetPath.lastIndexOf('/')+1, styleSheetPath.length);\r\n\t\t\tif (fileName === disableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = true;\r\n\t\t\t}\r\n\t\t\telse if (fileName === ableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// CSSファイルの無効化\r\nexport function cssFileDisable(disableFileName) {\r\n\tfor(var i = 0; i < document.styleSheets.length; i++) {\r\n\t\tif (document.styleSheets[i].href != null) {\r\n\t\t\tvar styleSheetPath = document.styleSheets[i].href;\r\n\t\t\tvar fileName = styleSheetPath.substring(styleSheetPath.lastIndexOf('/')+1, styleSheetPath.length);\r\n\t\t\tif (fileName === disableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// CSSファイルの有効化\r\nexport function cssFileAble(ableFileName) {\r\n\tfor(var i = 0; i < document.styleSheets.length; i++) {\r\n\t\tif (document.styleSheets[i].href != null) {\r\n\t\t\tvar styleSheetPath = document.styleSheets[i].href;\r\n\t\t\tvar fileName = styleSheetPath.substring(styleSheetPath.lastIndexOf('/')+1, styleSheetPath.length);\r\n\t\t\tif (fileName === ableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リストの区分の半角変換と数値変換処理\r\nexport function stringToNumber(param) {\r\n\ttry {\r\n\t\t// 区分の半角変換と数値変換処理\r\n\t\tvar result = {};\r\n\t\tvar str = \"\";\r\n\t\tif(param === undefined || param === \"\") {\r\n\t\t\talert(\"区分には数値を入力してください!\");\r\n\t\t\tthrow \"(区分リスト新規登録処理)区分入力エラー\"; \r\n\t\t} else {\r\n\t\t\tfor(let i=0; i < param.length; i++) {\r\n\t\t\t\tstr += String.fromCharCode(param.charCodeAt(i) - 0xFEE0);\r\n\t\t\t}\r\n\t\t\t// paramが数値型の場合、lengthは取れない。ここで代入する。\r\n\t\t\tif(str === \"\") {\r\n\t\t\t\tstr = param;\r\n\t\t\t}\r\n\t\t\t// 数値変換の処理結果がNan=数値以外であればエラー\r\n\t\t\tif(isNaN(str)) {\r\n\t\t\t\t// 入力値が半角の場合、charCodeAtメソッドの結果がNaNとなる。回避策のIF文\r\n\t\t\t\tif(isNaN(Number(param))) {\r\n\t\t\t\t\t// 1.半角数値の場合\r\n\t\t\t\t\talert(\"区分には数値を入力してください!\");\r\n\t\t\t\t\tthrow \"(区分リスト新規登録処理)区分入力エラー\"; \r\n\t\t\t\t\t// str = param;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 2.半角数字の文字列型の場合\r\n\t\t\t\t\tstr = Number(param);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// 3.全角→半角且つ数値型に変換する場合\r\n\t\t\t\tstr = Number(str);            \r\n\t\t\t}\r\n\t\t\tresult.flag = true;\r\n\t\t\tresult.res = str;\r\n\t\t}\r\n\t} catch(error) {\r\n\t\tresult.flag = false;\r\n\t\tresult.res = str;\r\n\t\tconsole.error(error);\r\n\t} finally {\r\n\t\treturn result;\t\r\n\t}\r\n}","\r\nimport {stringToNumber} from '../commonFunc';\r\nimport * as action from \"../actions/action.js\";\r\nimport store from \"../store/store.js\";\r\nconst KubunListJsonFileName = \"kbns.json\";\r\nconst krawlingListJsonFileName = \"crawlingList.json\";\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リスト \r\n///////////////////////////////////////////////////////////////// \r\n///////////////////////////////////////////////////////////////// \r\n// 区分リストのゲッター\r\nexport default function getKbnList() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// fetch処理\r\n\t\tfetch(\"/getKbnList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileName\":KubunListJsonFileName\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(function(responseJson) {\r\n\t\t\tstore.dispatch(action.SET_KUBUN_LIST(responseJson.data));\r\n\t\t\tresolve(responseJson);\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treject({flag:false});\r\n\t\t});\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リスト新規登録処理\r\nexport function setNewKubunList(changedValueKubun, changedValueKubunName, changedValueComment) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// 区分の半角変換と数値変換処理\r\n\t\tvar str = \"\";\r\n\t\tfor(let i=0; i < changedValueKubun.length; i++) {\r\n\t\t\tstr += String.fromCharCode(changedValueKubun.charCodeAt(i) - 0xFEE0);\r\n\t\t}\r\n\t\t// 数値変換の処理結果がNan=数値以外であればエラー\r\n\t\tif(isNaN(Number(str))) {\r\n\t\t\tif(isNaN(Number(changedValueKubun))) {\r\n\t\t\t\talert(\"区分には数値を入力してください!\");\r\n\t\t\t\tthrow \"(区分リスト新規登録処理)区分入力エラー\"; \r\n\t\t\t} else {\r\n\t\t\t\tchangedValueKubun = Number(changedValueKubun);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tchangedValueKubun = Number(str);\r\n\t\t}\r\n\t\t// findindexで検索結果0件の場合は-1を返す。区分リストの追加登録を行う。\r\n\t\tvar thisKubunList = store.getState().componentReducer.thisKubunList;\r\n\t\tvar target = thisKubunList.kbns.findIndex((v) => v.kbn === changedValueKubun);\r\n\t\tif(target === -1) {\r\n\t\t\t// fetch処理\r\n\t\t\tfetch(\"/addNewKubunList\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\theders: {\r\n\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tfileName:KubunListJsonFileName,\r\n\t\t\t\t\tkbn:changedValueKubun,\r\n\t\t\t\t\tkbnname:changedValueKubunName,\r\n\t\t\t\t\tcomment:changedValueComment,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(function(responseJson) {\r\n\t\t\t\tstore.dispatch(action.SET_KUBUN_LIST(responseJson.data));\r\n\t\t\t\tresolve(responseJson); // jsonオブジェクトを返却する \r\n\t\t\t\tif(responseJson.flag) {\r\n\t\t\t\t\talert(\"区分を追加しました!!\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\talert(\"区分リストの追加に失敗しました!\");\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\treject(false);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert(\"入力した区分リストは既に存在します!\");\r\n\t\t}\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リスト更新処理\r\nexport function setEditKubunList(props) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tvar result = {};\r\n\t\tvar kbnBefore = props.before[0].kbn;\r\n\t\tvar kbnnameBefore = props.before[0].kbnname;\r\n\t\tvar commentBefore = props.before[0].comment;\r\n\t\tvar kbnAfter = props.after[0].kbn;\r\n\t\tvar kbnnameAfter = props.after[0].kbnname;\r\n\t\tvar commentAfter = props.after[0].comment;\r\n\t\t// 区分の半角と数値を変換する外部メソッドを呼び出す\r\n\t\t// stringToNumber:返却値:{flag:\"変換成功、失敗フラグ, res:\"\"変換後の値\"}\r\n\t\tresult = stringToNumber(kbnAfter);\r\n\t\tkbnAfter = result[\"res\"];\r\n\t\t// 編集後の値についてnullチェック\r\n\t\tif(kbnnameAfter === undefined || commentAfter === undefined || kbnnameAfter === \"\" || commentAfter === \"\") {\r\n\t\t\talert(\"全ての項目を入力してください!\");\r\n\t\t\tthrow \"全ての項目を入力してください!\";\r\n\t\t}\r\n\t\t// 区分の変換結果がtrueの場合のみ、後続の処理を続行する\r\n\t\tif(!result.flag) {\r\n\t\t\talert(\"区分は数値を入力してください。\");\t\t\t\t\t\r\n\t\t\treject(result);\r\n\t\t}\r\n\t\t// findindexで検索結果0件の場合は-1を返す。クローリング情報の更新は不可。\r\n\t\tvar thisKubunList = store.getState().componentReducer.thisKubunList;\r\n\t\tvar target = thisKubunList.kbns.findIndex((v) => v.kbn === kbnBefore);\r\n\t\tif(target === -1) {\r\n\t\t\talert(\"区分リストの編集に失敗しました!該当の区分が見つかりません!\");\r\n\t\t\tresult.flag = false;\r\n\t\t\treject(result);\r\n\t\t} else {\r\n\t\t\tvar target = thisKubunList.kbns.findIndex((v) => v.kbn === kbnAfter);\r\n\t\t\tif(target === -1) {\r\n\t\t\t\talert(\"区分の値は更新できません。\");\r\n\t\t\t\tresult.flag = false;\r\n\t\t\t\treject(result);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// fetch処理\r\n\t\tfetch(\"/setEditKubunList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"kubunFileName\":KubunListJsonFileName,\r\n\t\t\t\t\"krawlingListFileName\":krawlingListJsonFileName,\r\n\t\t\t\t\"kbnBefore\":kbnBefore,\r\n\t\t\t\t\"kbnnameBefore\":kbnnameBefore,\r\n\t\t\t\t\"commentBefore\":commentBefore,\r\n\t\t\t\t\"kbnAfter\":kbnAfter,\r\n\t\t\t\t\"kbnnameAfter\":kbnnameAfter,\r\n\t\t\t\t\"commentAfter\":commentAfter,\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(function(response) {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else {\r\n\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\treject(result);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((responseJson) => {\r\n\t\t\t// ストア更新\r\n\t\t\tstore.dispatch(action.SET_KUBUN_LIST(responseJson.data[\"kbnList\"]));\r\n\t\t\tstore.dispatch(action.SET_CRAWLING_LIST(responseJson.data[\"crawlingList\"]));\r\n\t\t\tresolve(responseJson);\r\n\t\t\tif(responseJson.flag) {\r\n\t\t\t\talert(\"区分リストを編集しました!\");\r\n\t\t\t\tresolve(result);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\talert(\"区分リストの削除に失敗しました!\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject(result);\r\n\t\t});\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リストデータ削除処理\r\nexport function setDeleteKubunList(props) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// 削除対象の区分を代入\r\n\t\tvar targetKubun = props[\"delete\"][0].kbn;\r\n\t\t// fetch処理\r\n\t\tfetch(\"/setDeleteKubunList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json' \r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileName\":KubunListJsonFileName,\r\n\t\t\t\t\"targetKubun\":targetKubun,\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(function(response) {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else {\r\n\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\treject(false);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((responseJson) => {\r\n\t\t\tif(responseJson.flag) {\r\n\t\t\t\tstore.dispatch(action.SET_KUBUN_LIST(responseJson.data));\r\n\t\t\t\talert(\"区分リストを削除しました!\");\r\n\t\t\t\tresolve(true);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\talert(\"区分リストの削除に失敗しました!\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject(false);\r\n\t\t});\r\n\t})\r\n}","import * as action from \"../actions/action.js\";\r\nimport store from \"../store/store.js\";\r\nconst CrawlingListJsonFileName = \"crawlingList.json\";\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリングリスト\r\n/////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////// \r\n// クローリングリストのゲッター\r\nexport default function getCrawlingList() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// fetch処理\r\n\t\tfetch(\"/getCrawlingList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileName\":CrawlingListJsonFileName\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(function(responseJson) {\r\n\t\t\tstore.dispatch(action.SET_CRAWLING_LIST(responseJson.data));\r\n\t\t\tresolve(responseJson);\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treject({flag:false});\r\n\t\t});\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリングリスト新規登録処理\r\nexport function addNewCrawlingList(props) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\ttry {\r\n\t\t\t// オブジェクトにデータを追加\r\n\t\t\tvar newCrawlingList = {};\r\n\t\t\tnewCrawlingList[\"kbn\"] = props.kbn;\r\n\t\t\tnewCrawlingList[\"kbnname\"] = props.kbnname;\r\n\t\t\tnewCrawlingList[\"jigyosyaid\"] = props.jigyosyaid;\r\n\t\t\tnewCrawlingList[\"name\"] = props.name;\r\n\t\t\tnewCrawlingList[\"crawlingurl\"] = props.crawlingurl;\r\n\t\t\tnewCrawlingList[\"xpathTitle\"] = props.xpathTitle.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\tnewCrawlingList[\"xpathLink\"] = props.xpathLink.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\tnewCrawlingList[\"xpathImage\"] = props.xpathImage.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t// 編集後の値についてnullチェック\r\n\t\t\tif(\r\n\t\t\t\tnewCrawlingList[\"kbn\"]  == \"\" ||\r\n\t\t\t\tnewCrawlingList[\"jigyosyaid\"] === \"\" ||\r\n\t\t\t\tnewCrawlingList[\"name\"] === \"\" ||\r\n\t\t\t\tnewCrawlingList[\"crawlingurl\"] === \"\" ||\r\n\t\t\t\tnewCrawlingList[\"xpathTitle\"] === \"\" ||\r\n\t\t\t\tnewCrawlingList[\"xpathLink\"] === \"\" ||\r\n\t\t\t\tnewCrawlingList[\"xpathImage\"] === \"\"\r\n\t\t\t) {\r\n\t\t\t\talert(\"全ての項目を入力してください!\");\r\n\t\t\t\tthrow \"全ての項目を入力してください!\";\r\n\t\t\t}\r\n\t\t\t// fetch処理\r\n\t\t\tfetch(\"/addNewCrawlingList\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\theders: {\r\n\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tfileName:CrawlingListJsonFileName,              \r\n\t\t\t\t\tkbn:newCrawlingList[\"kbn\"],\r\n\t\t\t\t\tkbnname:newCrawlingList[\"kbnname\"],\r\n\t\t\t\t\tjigyosyaid:newCrawlingList[\"jigyosyaid\"],\r\n\t\t\t\t\tname:newCrawlingList[\"name\"],\r\n\t\t\t\t\tcrawlingurl:newCrawlingList[\"crawlingurl\"],\r\n\t\t\t\t\txpathTitle:newCrawlingList[\"xpathTitle\"],\r\n\t\t\t\t\txpathLink:newCrawlingList[\"xpathLink\"],\r\n\t\t\t\t\txpathImage:newCrawlingList[\"xpathImage\"]\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(function(responseJson) {\r\n\t\t\t\tstore.dispatch(action.SET_CRAWLING_LIST(responseJson.data));\r\n\t\t\t\tresolve(responseJson); // jsonオブジェクトを返却する \r\n\t\t\t\tif(responseJson.flag) {\r\n\t\t\t\t\talert(\"クローリング対象を追加しました!\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch(error) {\r\n\t\t\talert(\"クローリング対象の追加に失敗しました!\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject(false);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリングリスト更新処理\r\nexport function setUpdateCrawlingList(\r\n\titem,\r\n\tchangedCrawlingUrl,\r\n\tchangedCrawlingXpathTitle,\r\n\tchangedValueCrawlingXpathLink,\r\n\tchangedValueCrawlingXpathImage) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\ttry {\r\n\t\t\tvar thisCrawlingList = store.getState().componentReducer.thisCrawlingList;\r\n\t\t\tvar target = thisCrawlingList.crawling.findIndex((v) => v.kbn === item.kbn && v.jigyosyaid === item.jigyosyaid);\r\n\t\t\t// findindexで検索結果0件の場合は-1を返す。クローリング情報の更新は不可。\r\n\t\t\tif(target === -1) {\r\n\t\t\t\talert(\"クローリングの設定を更新できませんでした!\");\r\n\t\t\t} else {\r\n\t\t\t\tthisCrawlingList.crawling[target].crawlingurl = changedCrawlingUrl;\r\n\t\t\t\tthisCrawlingList.crawling[target].xpathTitle = changedCrawlingXpathTitle.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\tthisCrawlingList.crawling[target].xpathLink = changedValueCrawlingXpathLink.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\tthisCrawlingList.crawling[target].xpathImage = changedValueCrawlingXpathImage.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\t// fetch処理\r\n\t\t\t\tfetch(\"/setUpdateCrawlingList\", {\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\t\theders: {\r\n\t\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tfileName:CrawlingListJsonFileName,\r\n\t\t\t\t\t\tkbn:item.kbn,\r\n\t\t\t\t\t\tjigyosyaid:item.jigyosyaid,\r\n\t\t\t\t\t\tcrawlingurl:thisCrawlingList.crawling[target].crawlingurl,\r\n\t\t\t\t\t\txpathTitle:thisCrawlingList.crawling[target].xpathTitle,\r\n\t\t\t\t\t\txpathLink:thisCrawlingList.crawling[target].xpathLink,\r\n\t\t\t\t\t\txpathImage:thisCrawlingList.crawling[target].xpathImage,\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(response) {\r\n\t\t\t\t\tif(response.ok) {\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(responseJson) {\r\n\t\t\t\t\tif(responseJson.flag) {\r\n\t\t\t\t\t\tstore.dispatch(action.SET_CRAWLING_LIST(responseJson.data));\r\n\t\t\t\t\t\talert(\"クローリングの設定を更新しました!\");\r\n\t\t\t\t\t\tresolve(responseJson);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch(error) {\r\n\t\t\talert(\"ローカルファイルの更新に失敗しました!該当の区分が見つかりませんでした!\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject({flag:false});\r\n\t\t}\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クロール対象データ削除処理\r\nexport function setDeleteCrawlingList(props){\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// 削除対象の区分を代入\r\n\t\tvar targetKubun = props[\"delete\"][0].kbn;\r\n\t\tvar targetJigyosyaid = props[\"delete\"][0].jigyosyaid;\r\n\t\t// fetch処理\r\n\t\tfetch(\"/setDeleteCrawlingList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileName\":CrawlingListJsonFileName,\r\n\t\t\t\t\"targetKubun\":targetKubun,\r\n\t\t\t\t\"targetJigyosyaid\":targetJigyosyaid\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(function(response) {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else {\r\n\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((responseJson) => {\r\n\t\t\tif(responseJson.flag) {\r\n\t\t\t\tstore.dispatch(action.SET_CRAWLING_LIST(responseJson.data));\r\n\t\t\t\talert(\"クロール対象データを削除しました!\");\r\n\t\t\t\tresolve(true);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\talert(\"クロール対象データの削除に失敗しました!\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject(false);\r\n\t\t});\r\n\t});\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリングプログラム実行関数\r\nexport function execCrawling() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconsole.log(window.location.href);\r\n\t\t// fetch処理\r\n\t\tfetch(\"/py\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tfileName:CrawlingListJsonFileName,\r\n\t\t\t\turl:window.location.href\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(function(responseJson) {\r\n\t\t\tif(responseJson.flag) {\r\n\t\t\t\tresolve(responseJson.flag); // true\r\n\t\t\t} else {\r\n\t\t\t\treject(responseJson.flag); // false\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.error(\"<crawlingList.js> execCrawling occared eerror.\");\r\n\t\t\tconsole.error(error);\r\n\t\t\treject(false);\r\n\t\t});\r\n\t});\r\n}\r\n  ","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass Auth extends React.Component {\r\n    componentWillMount() {\r\n        this.checkAuth();\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        this.checkAuth();        \r\n    }\r\n\r\n    // セッションnullの場合、ログイン画面へ遷移\r\n    checkAuth() {\r\n        var status = this.props.status;\r\n        if(status === 0 || status === -1) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>{this.props.children}</div>\r\n        );\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ReactコンポーネントとReduxストアをコネクト\r\nconst mapStateToProps = (state) => ({\r\n    status: state.loginReducer.status\r\n  });\r\n  \r\n  const ContainerAuth = connect(\r\n    mapStateToProps,\r\n    null\r\n  )(Auth);\r\n  \r\n  export default ContainerAuth;","import React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n/////////////////////////////////////////////////////////////////\r\n// スタイル。各種記事ブロックに収める画像とリンクをカードクラスで生成する。\r\n// 詳細なプロパティはindex.cssに記述。\r\n/////////////////////////////////////////////////////////////////\r\nconst ArticleCardStyle = makeStyles({\r\n    root:{\r\n    },\r\n    media: {\r\n        height:200,\r\n    },\r\n});\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 各種記事ブロックに収める画像とリンクをカードクラスで生成する。\r\n///////////////////////////////////////////////////////////////// \r\nexport const MediaCardForContentsBlock = (props) => {\r\n    const {Content} = props;\r\n    const classes = ArticleCardStyle();\r\n\r\n    return(\r\n      <div className=\"article\"> \r\n        <Card className={classes.root}>\r\n          <CardActionArea>\r\n            <a href={Content.source} style={{textDecoration: \"none\"}} target=\"_blank\" rel=\"noreferrer\">\r\n              <CardMedia className={classes.media} image={Content.image} title={Content.title}>\r\n                <CardContent>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{Content.name}</Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">{Content.title}</Typography>\r\n                </CardContent>\r\n              </CardMedia>\r\n            </a>\r\n          </CardActionArea>\r\n        </Card>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ヘッダーブロックに収める履歴リスト。画像とリンクをカードクラスで生成する。\r\n// 2021/12/08 廃止\r\n///////////////////////////////////////////////////////////////// \r\nexport const MediaCardForCacheList = (props) => {\r\n    const {Cache} = props;\r\n  \r\n    return(\r\n        <div className=\"CacheList\"> \r\n            <Card >\r\n                <CardActionArea>\r\n                    <a href={Cache.source} target=\"_blank\" rel=\"noreferrer\">\r\n                        <CardMedia component=\"img\" image={Cache.image} title={Cache.title}/>\r\n                    </a>\r\n                </CardActionArea>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MediaCardForContentsBlock;","\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツボックスに記事を表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\nimport MediaCardForContentsBlock from '../card/cardComponent.jsx';\r\n// コンテンツボックス部分のスタイル変数\r\nimport {DetailOriginal, DetailShow, DetailHide, DetailShowActiveSiteHedder} from './showContentsArea.jsx';\r\nimport {SiteHedderActiveM} from './showContentsArea.jsx';\r\n// MoveBlockOnClick関数呼び出し時のパラメータに、自身の関数名を入れる。\r\nimport {CaseA, CaseB} from './showContentsArea.jsx';\r\nimport { connect } from 'react-redux';\r\nimport { cssFileAble, cssFileDisable } from '../commonFunc.js';\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツブロックをコントロール。コンテンツごとに記事を振り分け。(初回のみ)\r\nexport class ContentsBlockControl extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    // storeアクセスでの待機中はローディングCSSを流す\r\n    cssFileAble(\"loading.css\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    cssFileDisable(\"loading.css\");\r\n  }\r\n\r\n  render() {\r\n    const Rows = \r\n      this.props.thisContentsArticle !== undefined &&\r\n      this.props.thisContentsArticle.map((Content, index) => {\r\n        return(\r\n          this.props.Kbn === Content.kbn &&\r\n            <MediaCardForContentsBlock key={index} Content={Content}/>\r\n        );\r\n      });\r\n    \r\n    return(\r\n        <div id ={this.props.Kbn} className={DetailOriginal}>{Rows}</div>\r\n      );\r\n  }\r\n}\r\n   \r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツボックスのアニメーション表示・非表示。\r\nexport const MoveBlockOnClick = (TargetKbn, Caller) => {\r\n  var SiteHedderActive = SiteHedderActiveM.GetterSiteHedderActive();\r\n  \r\n  if (TargetKbn === null && TargetKbn === undefined && Caller === CaseA) {\r\n    return;\r\n  }\r\n\r\n  // ボタンクリックのあったコンテンツタイトルに対応するコンテンツブロックを取得\r\n  var ElementOfContentsBlock = document.getElementById(TargetKbn);\r\n  // コンテンツブロックの表示状態(className)を取得\r\n  var TargetContentsBlockClassName = ElementOfContentsBlock.getAttribute(\"class\");\r\n\r\n  switch (Caller) {\r\n    // CaseA:履歴表示ボタン処理から呼ばれたケース\r\n    case CaseA:\r\n      switch (TargetContentsBlockClassName) {\r\n        case DetailShow:\r\n          SiteHedderActive && ElementOfContentsBlock.setAttribute(\"class\",DetailShowActiveSiteHedder);\r\n          break;\r\n        case DetailShowActiveSiteHedder:\r\n          !SiteHedderActive && ElementOfContentsBlock.setAttribute(\"class\",DetailShow);\r\n          break;\r\n      }\r\n      break;\r\n\r\n    // CaseB:コンテンツタイトルボタン押下処理から呼ばれたケース\r\n    case CaseB:\r\n      switch (TargetContentsBlockClassName) {\r\n        case DetailOriginal:\r\n          SiteHedderActive ? ElementOfContentsBlock.setAttribute(\"class\",DetailShowActiveSiteHedder) : ElementOfContentsBlock.setAttribute(\"class\",DetailShow);         \r\n          break;\r\n        case DetailHide:\r\n          SiteHedderActive ? ElementOfContentsBlock.setAttribute(\"class\",DetailShowActiveSiteHedder) : ElementOfContentsBlock.setAttribute(\"class\",DetailShow);\r\n          break;\r\n        case DetailShow:\r\n          ElementOfContentsBlock.setAttribute(\"class\",DetailHide);\r\n          break;\r\n        case DetailShowActiveSiteHedder:\r\n          ElementOfContentsBlock.setAttribute(\"class\",DetailHide);\r\n          break;\r\n      }\r\n  }\r\n};\r\n \r\n///////////////////////////////////////////////////////////////// \r\n// ReactコンポーネントとReduxストアをコネクト\r\nconst mapStateToProps = (state) => ({\r\n  thisContentsArticle: state.componentReducer.thisContents.article,\r\n  selectedFileName: state.componentReducer.selectedFileName,\r\n  status: state.componentReducer.status,\r\n  mtime: state.componentReducer.mtime\r\n});\r\n\r\nconst ContainerContentsBlockControl = connect(\r\n  mapStateToProps,\r\n  null\r\n)(ContentsBlockControl);\r\n\r\nexport default ContainerContentsBlockControl;\r\n","///////////////////////////////////////////////////////////////// \r\n// コンテンツのタイトルを表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\n// コンテンツタイトル部分に表示するアイコン\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\n// アイコンにボタン機能を付ける\r\nimport {Button} from '@material-ui/core';\r\nimport Typography from '@mui/material/Typography';\r\n// コンテンツタイトル部分のスタイル変数\r\nimport {PreClickM} from './showContentsArea.jsx';\r\nimport {ContentsTitleOriginal, TransitionContentsTitleShow} from './showContentsArea.jsx';\r\nimport {ContentTitleUnderBorderOriginal, ContentTitleUnderBorderShow, ContentTitleUnderBorderHide} from './showContentsArea.jsx';\r\n// コンテンツブロックの表示・非表示アニメーションをコントロールする関数。履歴表示ボタン押下時に機能させる。\r\nimport {MoveBlockOnClick} from './showContentsBlock.jsx';\r\n// MoveBlockOnClick関数呼び出し時のパラメータに、自身の関数名を入れる。\r\nimport {CaseB} from './showContentsArea.jsx';\r\n// JSXの中でスタイルをアニメーション化させるパッケージ。履歴表示ボタン押下によるアニメーションで使用する。\r\nimport {Transition} from 'react-transition-group';\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツタイトルのボタンとクリックイベント。クリックイベントで、\r\n// コンテンツタイトルのボックスに下線を引く。\r\nexport class ContentsTitleButtonWithBorder extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedIndex:null\r\n    }\r\n  }\r\n\r\n  onClick(e) {\r\n    // 区分毎のボタンからクリックされた区分を、ボタンのselectedプロパティにに登録する\r\n    this.setState({selectedIndex:e});\r\n    // 前回クリックの有ったタイトルボタンの区分を取得。\r\n    let click = PreClickM.GetterPreClick();\r\n    // 前回ボタンクリックのあったコンテンツタイトルについて、下線が表示してあれば非表示\r\n    if (click !== undefined && click !== null && click !== e) {\r\n      let ElementPreClick = document.getElementById(\"border-\" + click);\r\n      let CheckElementPreClick = ElementPreClick.getAttribute(\"class\");\r\n      switch (CheckElementPreClick) {\r\n        case ContentTitleUnderBorderShow:\r\n          ElementPreClick.classList.replace(ContentTitleUnderBorderShow,ContentTitleUnderBorderHide);\r\n          // 表示していたコンテンツブロックを隠す\r\n          MoveBlockOnClick(click, CaseB);\r\n          break;\r\n        case ContentTitleUnderBorderHide:\r\n          break;\r\n        default:\r\n          ElementPreClick.setAttribute(\"class\",ContentTitleUnderBorderOriginal);\r\n          break;\r\n      }\r\n    }\r\n    // 今回ボタンクリックのあったコンテンツタイトルを取得\r\n    let ElementThisClick = document.getElementById(\"border-\" + e);\r\n    let CheckElementThisClick = ElementThisClick.getAttribute(\"class\");\r\n    //  今回ボタンクリックのあったコンテンツタイトルの下線を表示・非表示にする\r\n    switch (CheckElementThisClick) {\r\n      case ContentTitleUnderBorderShow:\r\n        ElementThisClick.classList.replace(ContentTitleUnderBorderShow,ContentTitleUnderBorderHide);\r\n        break;\r\n      case ContentTitleUnderBorderHide:\r\n        ElementThisClick.classList.replace(ContentTitleUnderBorderHide,ContentTitleUnderBorderShow);\r\n        break;\r\n      case ContentTitleUnderBorderOriginal:\r\n        ElementThisClick.classList.replace(ContentTitleUnderBorderOriginal,ContentTitleUnderBorderShow);\r\n        break;\r\n      default:\r\n        ElementThisClick.setAttribute(\"class\",ContentTitleUnderBorderOriginal);\r\n        break;\r\n    }\r\n    // コンテンツボックスのアニメーション表示・非表示\r\n    MoveBlockOnClick(e, CaseB);\r\n    // 今回のボタンクリックのあった区分を保存\r\n    PreClickM.SetterPreClick(e);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div>\r\n          <Button\r\n            className=\"contents-title-button\"\r\n            selected={this.state.selectedIndex === this.props.index} \r\n            onClick={(e) => this.onClick(this.props.Kbn, e)}>\r\n            <DoubleArrowIcon title={this.props.name} style={{color:\"#FFF\"}}/>\r\n          </Button>\r\n        </div>\r\n        <div id={\"border-\" + this.props.Kbn} className= {ContentTitleUnderBorderOriginal}/>\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツタイトルブロック。タイトル毎にボタンを配置するコンポー\r\n// ネントを呼び出す。\r\nexport const ContentsTitleBlock = (props) => {\r\n  const NaviBar = props.thisKubunList.map((Kbns,index) => {\r\n    return (\r\n      <Typography key={index} variant=\"h6\" noWrap className=\"name-title\">\r\n        <label>{Kbns.kbnname}</label>\r\n        <ContentsTitleButtonWithBorder Kbn={Kbns.kbn} thisKubunList={props.thisKubunList} index={index}/>\r\n      </Typography>\r\n    );\r\n  });\r\n\r\n  return( \r\n    <Transition in={props.mount} timeout={400}>\r\n      {(state) => \r\n      <div id=\"contents-title\" className={ContentsTitleOriginal} style={TransitionContentsTitleShow[state]}>\r\n        {NaviBar}\r\n      </div>\r\n      }\r\n    </Transition>\r\n  );\r\n}\r\n\r\nexport default ContentsTitleBlock;","///////////////////////////////////////////////////////////////// \n// メインブロッククラス\nimport React from \"react\";\nimport { connect } from 'react-redux'\nimport ContainerContentsBlockControl from './showContentsBlock.jsx';\nimport {ContentsTitleBlock} from './showContentsTitle.jsx';\n// import {OnHedderBox} from './show/showOnHedderBox.jsx';\nimport cssFileControl from '../commonFunc.js';\n\n///////////////////////////////////////////////////////////////// \n// 定数定義エリア\n// ヘッダー部(背景)\nexport const ImageSiteHeaderOriginal =\"imageSiteHeaderOriginal\";\n// ヘッダー部(履歴表示ボタン)\nexport const SiteHedderButtonOriginal = \"siteHedderButtonOriginal\";\nexport const SiteHedderButtonShow = \"siteHedderButtonShow\";\n// 履歴表示ボックスのスタイル\nexport const CacheList = \"cacheList\";\n// コンテンツタイトルボックス\nexport const ContentsTitleOriginal =\"contentsTitleOriginal\";\n// コンテンツタイトルボックスの下線\nexport const ContentTitleUnderBorderOriginal =\"contentTitleUnderBorderOriginal\";\nexport const ContentTitleUnderBorderShow =\"contentTitleUnderBorderShow\";\nexport const ContentTitleUnderBorderHide =\"contentTitleUnderBorderHide\";\n// コンテンツボックス\nexport const DetailOriginal = \"detail\";\nexport const DetailShow = \"detailShow\";\nexport const DetailHide =\"detailHide\";\nexport const DetailShowActiveSiteHedder = \"detailShowActiveSiteHedder\";\n// MoveBlockOnClick関数呼び出し時のパラメータに、自身の関数名を入れる。\nexport const CaseA = \"OnHedderBox\";\nexport const CaseB = \"ContentsTitleButtonWithBorder\";\n \n///////////////////////////////////////////////////////////////// \n// react-transition-groupで使用するスタイル\n// showOnHedderBox.jsx ヘッダー部で使用。\n// 2021/12/10 廃止\nexport const TransitionImageSiteHeaderShow = {\n  entering:{\n    height:\"200px\"\n  },\n  entered:{\n    height:\"200px\"\n  },\n  exiting: {\n    height:\"150px\"\n  },\n  exited: {\n    height:\"150px\"\n  }\n};\nexport const TransitionCacheList = {\n  entering:{\n    opacity:\"0\"\n  },\n  entered:{\n    opacity:\"1\"\n  },\n  exiting: {\n    opacity:\"0\"\n  },\n  exited: {\n    opacity:\"0\"\n  }\n}\n// showContentsTitle.jsx コンテンツタイトル部で使用。\nexport const TransitionContentsTitleShow = {\n  entering:{\n    transform:\"translateY(120%)\"\n  },\n  entered:{\n    transform:\"translateY(120%)\"\n  },\n  exiting: {\n    transform:\"translateY(0%)\"\n  },\n  exited: {\n    transform:\"translateY(0%)\"\n  }\n};\n\n///////////////////////////////////////////////////////////////// \n// 区分リストの区分が入る。前回クリックしたタイトルボタンを保持する為に使用。\n// デフォルトは区分1のタイトルボタンを保持させる。\nexport class PreClickMortion {\n  constructor() {\n    this.PreClick = null;\n  }\n  SetterPreClick(param) {\n    this.PreClick = param;\n  }\n  GetterPreClick() {\n    return this.PreClick;\n  }\n}\n\n///////////////////////////////////////////////////////////////// \n// コンテンツボックスが表示されている場合、履歴表示ボタンクリック時に\n// コンテンツボックスを断下げする為に使用。\nexport class SiteHedderActiveMortion {\n  constructor () {\n    this.SiteHedderActive = false;\n  }\n\n  SetterSiteHedderActive(param) { \n    this.SiteHedderActive = param;\n  }\n  GetterSiteHedderActive() {\n    return this.SiteHedderActive;\n  }\n}\n\n///////////////////////////////////////////////////////////////// \n// インスタンス生成エリア\n  export const SiteHedderActiveM = new SiteHedderActiveMortion(SiteHedderActiveMortion);\n  export const PreClickM = new PreClickMortion(PreClickMortion);\n\n///////////////////////////////////////////////////////////////// \n// メインブロックをコントロール。\nexport class MainBlockControl extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const ContentsRows = this.props.thisKubunList.map((List, index) => {\n      return(\n        <ContainerContentsBlockControl key={index} Kbn ={List.kbn}/>\n      );    \n    });\n\n    return(\n      <div className=\"mainBlockControl\">\n        <div>{ContentsRows}</div>\n      </div>\n    );\n  }\n}\n\n///////////////////////////////////////////////////////////////// \n// ルートコンポーネント。画面を開いたときに最初に描画される。\nexport class ShowContentsArea extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      mount:false,\n    }\n  }\n\n  componentWillMount() {\n    // メイン画面のCSSファイル解除\n    cssFileControl(\"showCrawlSetting.css\", \"App.css\");\n  }\n\n  // HedderMortionAcive(){\n  //   this.state.mount ? this.setState({mount:false}) : this.setState({mount:true});\n  // }\n\n  render() {\n    return (\n      <div>\n        {/* <OnHedderBox HedderMortionAcive = {(e)=>this.HedderMortionAcive(this.state.mount, e)} mount = {this.state.mount}/> */}\n        <ContentsTitleBlock thisKubunList = {this.props.thisKubunList} mount = {this.state.mount}/>\n        <MainBlockControl thisKubunList = {this.props.thisKubunList} mount = {this.state.mount}/>\n      </div>\n    );\n  }\n}\n///////////////////////////////////////////////////////////////// \n// ReactコンポーネントとReduxストアをコネクト\nconst mapStateToProps = (state) => ({\n\tthisKubunList: state.componentReducer.thisKubunList.kbns\n});\n\nconst ContainerShowContentsArea = connect(\n\tmapStateToProps,\n\tnull\n)(ShowContentsArea);\n\nexport default ContainerShowContentsArea;\n","/////////////////////////////////////////////////////////////////\r\n// MaterialTable表示\r\n/////////////////////////////////////////////////////////////////\r\nimport React, { forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\n// MaterialTableに使用するアイコンをインポート\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Save from '@material-ui/icons/Save';\r\n\r\n// MaterialTableに使用するアイコンを定数化\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    Save: forwardRef((props, ref) => <Save {...props} ref={ref} />)\r\n  };\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// MaterialTableを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport default function CrawlSettingMaterialTable(props) {\r\n  /////////////////////////////////////////////////////////////////\r\n  // クローリングセット。MaterialTableのeditable属性\r\n  const editableCrawlSetting = \r\n    <MaterialTable\r\n      title=\"実行結果セット\"\r\n      columns={props.columns}\r\n      data={props.data}\r\n      options={{\r\n        showTitle: true,\r\n        search: true,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0,  fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      icons={tableIcons}\r\n      actions={[\r\n        {\r\n          icon:Edit,\r\n          tooltip:\"Edt your's settings.\",\r\n          cellStyle:{fontSize: \"0.8em\", width: \"10%\", minWidth: \"10%\"},\r\n          headerStyle:{fontWeight: \"bold\",},\r\n          onClick:(e, rowData) => {\r\n            props.setItem(rowData);\r\n            props.modalWrapperFlag();\r\n          }\r\n        }\r\n      ]}\r\n    />\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  // MaterialTableの戻り値\r\n  return(\r\n    <div className=\"materialCrawlSetting\" style={{ maxWidth:\"80%\", padding:\"0.5em\", fontSize:\"10pt\"}}>\r\n      {editableCrawlSetting}\r\n    </div>\r\n  );\r\n}\r\n","///////////////////////////////////////////////////////////////// \r\n// モーダル画面を表示させるためのラッパークラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React, { useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n// クローリング詳細設定のモーダル画面で使用するボタンアイコン\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// モーダル表示させるためのラッパークラス\r\nexport default function ModalWrapper(props) {\r\n  return(\r\n    <Modal\r\n      open={props.open}\r\n      onClose={(e) => props.modalWrapperFlag(e, false)}\r\n      style={{top: \"5%\", width: \"50%\", left: \"20%\", height:\"70%\"}}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      onRequestClose={(e) => props.modalWrapperFlag(e, false)}\r\n    >\r\n      {props.content}\r\n    </Modal>\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 実行結果画面。クローリング設定詳細画面(モーダル表示する)\r\nexport function KrawlSettingInModal(props) {\r\n    const [changedValueCrawlingUrl, setValueCrawlingUrl] = useState(props.selectedItem.crawlingurl);\r\n    const [changedValueCrawlingXpathTitle, setValueCrawlingXpathTitle] = useState(props.selectedItem.xpathTitle);\r\n    const [changedValueCrawlingXpathLink, setValueCrawlingXpathLink] = useState(props.selectedItem.xpathLink);\r\n    const [changedValueCrawlingXpathImage, setValueCrawlingXpathImage] = useState(props.selectedItem.xpathImage);\r\n\r\n    // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n    // クローリング情報を更新。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n    const onClick = (e) => {\r\n      if (e === true) {\r\n        props.callUpdateCrawlingList(\r\n          props.selectedItem,\r\n          changedValueCrawlingUrl,\r\n          changedValueCrawlingXpathTitle,\r\n          changedValueCrawlingXpathLink,\r\n          changedValueCrawlingXpathImage\r\n        )\r\n      } else {\r\n        // CLOSEボタン押下処理\r\n        props.modalWrapperFlag(e);\r\n      }\r\n    };\r\n  \r\n    return(\r\n      <Fade in={props.open}>\r\n        <Paper className={\"modalActive\"}>\r\n          <Typography style={{padding: \"0.5em\"}}>\r\n            <div style={{margin: 8}}>\r\n              <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>クロール設定詳細</label>\r\n            </div>\r\n            <div style={{margin: 8}}>\r\n              <label style={{fontSize:\"small\"}}>※クローリング実行時のデータを表示しています。</label>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"区分\"\r\n                defaultValue={props.selectedItem.kbn}                \r\n                style={{width: \"10%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n              <TextField\r\n                label=\"区分名称\"\r\n                defaultValue={props.selectedItem.kbnname}                \r\n                style={{width: \"20%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n              <TextField\r\n                label=\"サイトID\"\r\n                defaultValue={props.selectedItem.jigyosyaid}                \r\n                style={{width: \"10%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n              <TextField\r\n                label=\"サイト名称\"\r\n                defaultValue={props.selectedItem.name}                \r\n                style={{width: \"20%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n              <TextField\r\n                label=\"記事ID\"\r\n                defaultValue={props.selectedItem.kiziid}                \r\n                style={{width: \"21.5%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"記事タイトル\"\r\n                defaultValue={props.selectedItem.title}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth  \r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"リンク\"\r\n                defaultValue={props.selectedItem.source}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                disabled=\"false\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"イメージファイル\"\r\n                defaultValue={props.selectedItem.image}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                disabled=\"false\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"サイトのURL\"\r\n                defaultValue={props.selectedItem.crawlingurl}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingUrl(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"タイトルのXpath\"\r\n                defaultValue={props.selectedItem.xpathTitle}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingXpathTitle(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"リンクのXpath\"\r\n                defaultValue={props.selectedItem.xpathLink}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingXpathLink(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"イメージファイルのXpath\"\r\n                defaultValue={props.selectedItem.xpathImage}\r\n                style={{ width: \"90%\", margin: 8}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingXpathImage(e.target.value)}\r\n              />\r\n            </div>\r\n          </Typography>\r\n          <Grid container style={{fontSize:\"small\"}} justify=\"flex-end\" direction=\"row\">\r\n            <Grid item>\r\n              <Button\r\n                style={{margin: \"1.5em\"}}\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={(e)=>onClick(true, e)}\r\n                startIcon={<AddCircleIcon/>}\r\n              >\r\n              更新&nbsp;&nbsp;\r\n              </Button>\r\n              <Button\r\n                style={{margin: \"1.5em\"}}\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={(e)=>onClick(false, e)}\r\n                startIcon={<CancelIcon/>}\r\n              >\r\n              閉じる\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Fade>\r\n    );\r\n  }\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分設定画面。クローリング設定詳細画面(モーダル表示する)\r\nexport function ShortKrawlSettingInModal(props) {\r\n  const [changedValueCrawlingUrl, setValueCrawlingUrl] = useState(props.selectedItem.crawlingurl);\r\n  const [changedValueCrawlingXpathTitle, setValueCrawlingXpathTitle] = useState(props.selectedItem.xpathTitle);\r\n  const [changedValueCrawlingXpathLink, setValueCrawlingXpathLink] = useState(props.selectedItem.xpathLink);\r\n  const [changedValueCrawlingXpathImage, setValueCrawlingXpathImage] = useState(props.selectedItem.xpathImage);\r\n\r\n  // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n  // クローリング情報を更新。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n  const onClick = (e) => {\r\n    if (e === true) {\r\n      props.callUpdateCrawlingList(\r\n        props.selectedItem,\r\n        changedValueCrawlingUrl,\r\n        changedValueCrawlingXpathTitle,\r\n        changedValueCrawlingXpathLink,\r\n        changedValueCrawlingXpathImage\r\n      )\r\n    } else {\r\n      // CLOSEボタン押下処理\r\n      props.setModalIndex(0);\r\n      props.modalWrapperFlag(e);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Fade in={props.open}>\r\n      <Paper className={\"modalActive\"}>\r\n        <Typography style={{padding: \"0.5em\"}}>\r\n          <div style={{margin: 8}}>\r\n            <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>クロール設定詳細</label>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"区分\"\r\n              defaultValue={props.selectedItem.kbn}                \r\n              style={{width: \"10%\", margin: 8}}\r\n              rows={1}\r\n              disabled=\"false\"\r\n            ></TextField>\r\n            <TextField\r\n              label=\"区分名称\"\r\n              defaultValue={props.selectedItem.kbnname}                \r\n              style={{width: \"20%\",margin: 8}}\r\n              rows={1}\r\n              disabled=\"false\"\r\n            ></TextField>\r\n            <TextField\r\n                label=\"サイトID\"\r\n                defaultValue={props.selectedItem.jigyosyaid}                \r\n                style={{width: \"10%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"                \r\n              ></TextField>\r\n              <TextField\r\n                label=\"サイト名称\"\r\n                defaultValue={props.selectedItem.name}                \r\n                style={{width: \"20%\", margin: 8}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"サイトのURL\"\r\n              defaultValue={props.selectedItem.crawlingurl}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingUrl(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"タイトルのXpath\"\r\n              defaultValue={props.selectedItem.xpathTitle}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathTitle(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"リンクのXpath\"\r\n              defaultValue={props.selectedItem.xpathLink}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathLink(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"イメージファイルのXpath\"\r\n              defaultValue={props.selectedItem.xpathImage}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathImage(e.target.value)}\r\n            />\r\n          </div>\r\n        </Typography>\r\n        <Grid container style={{fontSize:\"small\"}} justify=\"flex-end\" direction=\"row\">\r\n          <Grid item>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(true, e)}\r\n              startIcon={<AddCircleIcon/>}\r\n            >\r\n            更新&nbsp;&nbsp;\r\n            </Button>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(false, e)}\r\n              startIcon={<CancelIcon/>}\r\n            >\r\n            閉じる\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリング設定を新規登録する画面(モーダル表示する)\r\nexport function RegistKrawlSettingInModal(props) {\r\n  const [changedValueKubun, setValueKubun] = useState(\"\");\r\n  const [changedValueKubunName, setValueKubunName] = useState(\"区分名称\");\r\n  const [changedValueJigyosyaid, setValueJigyosyaid] = useState(\"\");\r\n  const [changedValueName, setValueName] = useState(\"\");\r\n  const [changedValueCrawlingUrl, setValueCrawlingUrl] = useState(\"\");\r\n  const [changedValueCrawlingXpathTitle, setValueCrawlingXpathTitle] = useState(\"\");\r\n  const [changedValueCrawlingXpathLink, setValueCrawlingXpathLink] = useState(\"\");\r\n  const [changedValueCrawlingXpathImage, setValueCrawlingXpathImage] = useState(\"\");\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分セレクトボックスで選択した区分の名称を、区分名称欄に自動入力する処理\r\n  const callSetKbnNameLabel = (targetValue) => {\r\n    var index = props.kbns.findIndex((v) => v.kbn === targetValue);\r\n\r\n    if(index !== -1) {\r\n      var label = props.kbns[index].kbnname;\r\n      setValueKubunName(label);\r\n      setValueKubun(targetValue);\r\n    }\r\n  };\r\n\r\n  // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n  // クローリング情報を更新。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n  const onClick = (e) => {\r\n    if (e === true) {\r\n      var paramObj = {};\r\n      paramObj[\"kbn\"] = changedValueKubun;\r\n      paramObj[\"kbnname\"] = changedValueKubunName;\r\n      paramObj[\"jigyosyaid\"] = changedValueJigyosyaid;\r\n      paramObj[\"name\"] = changedValueName;\r\n      paramObj[\"crawlingurl\"] = changedValueCrawlingUrl;\r\n      paramObj[\"xpathTitle\"] = changedValueCrawlingXpathTitle;\r\n      paramObj[\"xpathLink\"] = changedValueCrawlingXpathLink;\r\n      paramObj[\"xpathImage\"] = changedValueCrawlingXpathImage;\r\n\r\n      // 親コンポーネントのメソッド呼び出し\r\n      props.callNewCrawlingList(paramObj);\r\n\r\n    } else {\r\n      // CLOSEボタン押下処理\r\n      props.setModalIndex(0);\r\n      props.modalWrapperFlag(e);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Fade in={props.open}>\r\n      <Paper className={\"modalActive\"}>\r\n        <Typography style={{padding: \"0.5em\"}}>\r\n          <div style={{margin: 8}}>\r\n            <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>クロール設定登録</label>\r\n          </div>\r\n          <div>\r\n            <FormControl id=\"select-paperDiv\">\r\n              <InputLabel id=\"select-paperDiv-label\">区分</InputLabel>\r\n              <Select\r\n                labelId=\"select-paperDiv-label\"\r\n                className=\"select-paperDiv\"\r\n                value={changedValueKubun}\r\n                style={{width: \"100%\", margin: 8}}\r\n                onChange={(e)=> callSetKbnNameLabel(e.target.value)}\r\n              >\r\n                {props.kbns.map((item, key) => {\r\n                  return(\r\n                    <MenuItem value={item.kbn} key={key}>{item.kbn}</MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              // label=\"区分名称\"\r\n              label={changedValueKubunName}\r\n              style={{width: \"20%\",margin: 8}}\r\n              rows={1}\r\n              disabled=\"false\"\r\n            ></TextField>\r\n            <TextField\r\n                label=\"事業者ID\"\r\n                defaultValue={changedValueJigyosyaid}\r\n                style={{width: \"10%\", margin: 8}}\r\n                rows={1}\r\n                onChange={(e)=> setValueJigyosyaid(e.target.value)}\r\n            ></TextField>\r\n            <TextField\r\n              label=\"事業者名\"\r\n              defaultValue={changedValueName}\r\n              style={{width: \"20%\", margin: 8}}\r\n              rows={1}\r\n              onChange={(e)=> setValueName(e.target.value)}\r\n            ></TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"サイトのURL\"\r\n              defaultValue={changedValueCrawlingUrl}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingUrl(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"タイトルのXpath\"\r\n              defaultValue={changedValueCrawlingXpathTitle}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathTitle(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"リンクのXpath\"\r\n              defaultValue={changedValueCrawlingXpathLink}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathLink(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"イメージファイルのXpath\"\r\n              defaultValue={changedValueCrawlingXpathImage}\r\n              style={{ width: \"90%\", margin: 8}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathImage(e.target.value)}\r\n            />\r\n          </div>\r\n        </Typography>\r\n        <Grid container style={{fontSize:\"small\"}} justify=\"flex-end\" direction=\"row\">\r\n          <Grid item>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(true)}\r\n              startIcon={<AddCircleIcon/>}\r\n            >\r\n            登録&nbsp;&nbsp;\r\n            </Button>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(false)}\r\n              startIcon={<CancelIcon/>}\r\n            >\r\n            閉じる\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分設定を新規登録する画面(モーダル表示する)\r\nexport function KubunSettingInModal(props) {\r\n  const [kbns, setkbns] = useState(props.kbns);\r\n  const [changedValueKubun, setValueKubun] = useState(\"\");\r\n  const [changedValueKubunName, setValueKubunName] = useState(\"\");\r\n  const [changedValueComment, setValueComment] = useState(\"\");\r\n\r\n  // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n  // 区分情報を新たに登録。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n  const onClick = (e) => {\r\n    if (e === true) {\r\n      if(changedValueKubun !== \"\" && changedValueKubunName !== \"\" && changedValueComment !== \"\") {\r\n        // 親コンポーネントの区分リスト新規登録処理を呼び出す\r\n        props.callNewKubunList(\r\n          changedValueKubun,\r\n          changedValueKubunName,\r\n          changedValueComment,\r\n        )\r\n      } else {\r\n        alert(\"全ての項目を入力してください!\");\r\n      }\r\n    } else {\r\n      // CLOSEボタン押下処理\r\n      props.modalWrapperFlag(e);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Fade in={props.open}>\r\n      <Paper className={\"modalActive\"}>\r\n        <Typography style={{padding: \"0.5em\"}}>\r\n          <div style={{margin: 8}}>\r\n            <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>区分設定登録</label>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"区分\"\r\n              defaultValue={changedValueKubun}\r\n              style={{width: \"10%\", margin: 8}}\r\n              rows={1}\r\n              onChange={(e)=> setValueKubun(e.target.value)}\r\n            ></TextField>\r\n            <TextField\r\n              label=\"区分名称\"\r\n              defaultValue={changedValueKubunName}\r\n              style={{width: \"20%\", margin: 8}}\r\n              rows={1}\r\n              onChange={(e)=> setValueKubunName(e.target.value)}\r\n            ></TextField>\r\n            <TextField\r\n                label=\"コメント\"\r\n                defaultValue={changedValueComment}\r\n                style={{width: \"50%\", margin: 8}}\r\n                rows={1}\r\n                onChange={(e)=> setValueComment(e.target.value)}\r\n            ></TextField>\r\n          </div>\r\n        </Typography>\r\n        <Grid container style={{fontSize:\"small\"}} justify=\"flex-end\" direction=\"row\">\r\n          <Grid item>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(true, e)}\r\n              startIcon={<AddCircleIcon/>}\r\n            >\r\n            登録&nbsp;&nbsp;\r\n            </Button>\r\n            <Button\r\n              style={{margin: \"1.5em\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(false, e)}\r\n              startIcon={<CancelIcon/>}\r\n            >\r\n            閉じる\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n}","///////////////////////////////////////////////////////////////// \r\n// マテリアルテーブルのカラムを生成する\r\n/////////////////////////////////////////////////////////////////\r\n// クローリング設定画面で使用\r\nconst columnsCrawlSetting =\r\n    [\r\n        {title:'区分', field:'kbn', cellStyle:{fontSize:\"0.8em\", width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\",  width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\"}},\r\n        {title:'区分名称', field:'kbnname', cellStyle:{fontSize:\"0.8em\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\"}},\r\n        {title:'サイトID', field:'jigyosyaid', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\"}},\r\n        {title:'サイト名称', field:'name', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\"}},\r\n        {title:'記事ID', field:'kiziid', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\"}},\r\n        {title:'画像', field:'imageFileRes', cellStyle:{fontSize:\"0.8em\", width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\"}},\r\n        {title:'記事タイトル', field:'title', cellStyle:{fontSize:\"0.8em\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\"}},\r\n    ]\r\n\r\n// 区分設定画面。区分セット。(左側のマテリアルテーブル)\r\nconst columnsKubunSetting =\r\n    [\r\n        {title:'区分', field:'kbn', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\",  width:\"15%\", minWidth:\"15%\"}},\r\n        {title:'区分名称', field:'kbnname', cellStyle:{fontSize:\"0.8em\", width:\"20%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\"}},\r\n        {title:'コメント', field:'comment', cellStyle:{fontSize:\"0.8em\", width:\"50%\", minWidth:\"30%\"}, headerStyle:{fontWeight:\"bold\", width:\"30%\", minWidth:\"30%\"}},\r\n    ]\r\n\r\n// 区分設定画面。対象データセット。(右側のマテリアルテーブル)\r\nconst columnsDetailCrawlSetting =\r\n    [\r\n        {title:'区分', field:'kbn', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"5%\"}, headerStyle:{fontWeight:\"bold\",  width:\"5%\", minWidth:\"5%\"}},\r\n        {title:'区分名称', field:'kbnname', cellStyle:{fontSize:\"0.8em\", width:\"25%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\"}},\r\n        {title:'サイトID', field:'jigyosyaid', cellStyle:{fontSize:\"0.8em\", width:\"25%\", minWidth:\"10%\"}, headerStyle:{fontWeight:\"bold\", width:\"10%\", minWidth:\"10%\"}},\r\n        {title:'サイト名称', field:'name', cellStyle:{fontSize:\"0.8em\", width:\"25%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\"}},\r\n    ]\r\n\r\nexport const columnsData = (param) => {\r\n    switch(param) {\r\n        case 1:\r\n            return columnsCrawlSetting;\r\n        case 2:\r\n            return columnsKubunSetting;\r\n        case 3:\r\n            return columnsDetailCrawlSetting;\r\n        default:\r\n            return columnsCrawlSetting;\r\n    }\r\n};\r\n\r\n\r\n","///////////////////////////////////////////////////////////////// \r\n// クローリングの設定画面を表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from 'react-redux';\r\n// コンテンツボックスに表示する記事データとクローリング情報のデータ\r\nimport { recentUpdateFileDate } from '../actions/contentsList.js';\r\nimport { setUpdateCrawlingList, execCrawling, addNewCrawlingList } from '../actions/crawlingList.js';\r\nimport CrawlSettingMaterialTable from '../materialTable/crawlSettingMaterialTable.jsx';\r\nimport { KrawlSettingInModal, RegistKrawlSettingInModal } from './showModalWindow.jsx';\r\nimport ModalWrapper from './showModalWindow.jsx';\r\nimport cssFileControl from '../commonFunc.js';\r\nimport { columnsData } from '../actions/materialTableColumns.js';\r\nimport { cssFileAble, cssFileDisable } from '../commonFunc.js';\r\nimport * as actions from \"../actions/action.js\"\r\n// アイコン\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ScreenSearchDesktopIcon from '@mui/icons-material/ScreenSearchDesktop';\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリング設定ページを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport class ShowCrawlSetting extends React.Component {\r\n  constructor (props){\r\n    super(props);\r\n    this.state = {\r\n      open:false,\r\n      modalIndex:0,\r\n      selectedItem:null,\r\n      selectedCrawling:null,\r\n      recentFileUpdate:\"未取得\",\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // componentWillMount()\r\n  componentWillMount() {\r\n    // メイン画面のCSSファイル解除\r\n    cssFileControl(\"App.css\", \"showCrawlSetting.css\");\r\n    // 最終クロール日時\r\n    recentUpdateFileDate(1, \"mtime\") // パラメータ:2は区分リスト\r\n    .then((response) => {\r\n      if(response) {\r\n        this.setState({recentFileUpdate:this.props.mtime});\r\n      } else {\r\n        this.setState({recentFileUpdate:\"取得できませんでした\"});\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // componentDidMount()\r\n  componentDidMount() {\r\n    // ステータスの背景色指定\r\n    var element = document.getElementById(\"p-status-data\");\r\n    if(this.props.status === \"停止\") {\r\n      element.style.backgroundColor = \"#005FFF\";\r\n    } else if(this.props.status === \"実行中\") {\r\n      element.style.backgroundColor = \"#00FF3B\";\r\n    } else if(this.props.status === \"実行完了\") {\r\n      element.style.backgroundColor = \"#FF4F02\";\r\n    } else if(this.props.status === \"エラー\") {\r\n      element.style.backgroundColor = \"#FF0000\";\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 設定一覧で選択されたコンテンツデータを返す。\r\n  setItem = (item) => {\r\n    var target = this.props.thisContentsArticle.findIndex((v) => v.kbn === item.kbn && v.kiziid === item.kiziid);\r\n    this.setState({selectedItem:this.props.thisContentsArticle[target]});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // CrawlingList.jsのクローリング情報の更新処理を呼び出す。this.state.selectedItemを更新している。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callUpdateCrawlingList = (\r\n    item,\r\n    changedCrawlingUrl,\r\n    changedCrawlingXpathTitle,\r\n    changedValueCrawlingXpathLink,\r\n    changedValueCrawlingXpathImage) => { \r\n      setUpdateCrawlingList (\r\n        item,\r\n        changedCrawlingUrl,\r\n        changedCrawlingXpathTitle,\r\n        changedValueCrawlingXpathLink,\r\n        changedValueCrawlingXpathImage\r\n      )\r\n    }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // CrawlingList.jsのクローリング情報の新規登録処理を呼び出す。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callNewCrawlingList = (item) => { \r\n    addNewCrawlingList(item)\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示・非表示の設定をフラグ管理する\r\n  modalWrapperFlag = (e) => {\r\n    this.state.open ? this.setState({open:false}) : this.setState({open:true});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示する画面の種別を判定\r\n  // (init)0:編集画面 1:新規登録画面\r\n  setModalIndex = (props) => {\r\n    // パラメータの値をthis.stateにセット\r\n    this.setState({modalIndex:props});\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 全て開始ボタン押下時の処理\r\n  execCrawling = () => {\r\n    var element = document.getElementById(\"p-status-data\");\r\n    var status= this.props.status;\r\n\r\n    if(status === \"停止\" || status === \"エラー\" || status === \"実行完了\") {\r\n      this.props.setCrawlingStatus(\"実行中\");\r\n      cssFileAble(\"loading.css\");\r\n      element.style.backgroundColor = \"#00FF3B\";\r\n      // クローリング実行処理呼び出し、実行結果取得\r\n      execCrawling()\r\n      .then((response) => {\r\n        // クローリングプログラム実行結果：正常終了\r\n        if(response) {\r\n          // 実行結果レスポンスが返却された場合、ステータスを「実行完了」に。ローディングCSSを無効に。\r\n          this.props.setCrawlingStatus(\"実行完了\");\r\n          cssFileDisable(\"loading.css\");\r\n          element.style.backgroundColor = \"#FF4F02\";          \r\n          // 最終クローリング日時を更新\r\n          recentUpdateFileDate(1, \"mtime\") // パラメータ:2は区分リスト\r\n          .then((response) => {\r\n            if(response) {\r\n              this.setState({recentFileUpdate:this.props.mtime});\r\n              // コンテンツファイル名のリストを取得\r\n              recentUpdateFileDate(1, \"list\").then(() => {});\r\n            } else {\r\n              this.setState({recentFileUpdate:\"取得できませんでした\"});\r\n            }\r\n            cssFileDisable(\"loading.css\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          })\r\n        // クローリングプログラム実行結果：異常終了\r\n        } else {\r\n          this.props.setCrawlingStatus(\"エラー\");\r\n          cssFileDisable(\"loading.css\");\r\n          element.style.backgroundColor = \"#FF0000\";\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        this.props.setCrawlingStatus(\"エラー\");\r\n        cssFileDisable(\"loading.css\");\r\n        element.style.backgroundColor = \"#FF0000\";\r\n      });\r\n    } else {\r\n      alert(\"クローリング実行中は無効です。\");\r\n    }\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // レンダー\r\n  render() {\r\n    ///////////////////////////////////////////////////////////////// \r\n    // モーダル表示する画面の種別に対応したjsxを返却\r\n    // (init)0:編集画面 1:新規登録画面\r\n    const setModalJsx = () => {\r\n      if(this.state.modalIndex === 0) {\r\n        return (\r\n          <KrawlSettingInModal \r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            selectedItem={this.state.selectedItem}\r\n            selectedCrawling={this.state.selectedCrawling}\r\n            callUpdateCrawlingList={this.callUpdateCrawlingList}\r\n          />\r\n        );\r\n      } else if(this.state.modalIndex === 1) {\r\n        return (\r\n          <RegistKrawlSettingInModal\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            kbns={this.props.thisKubunList}\r\n            setModalIndex={this.setModalIndex}\r\n            callNewCrawlingList={this.callNewCrawlingList}\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    return(\r\n      <div>\r\n        <Grid container spacing={1}>\r\n          <Grid Item xs={3} style={{padding: \"0.5em\"}}>\r\n            <Button\r\n              id=\"button-krawlsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              onClick={()=>{\r\n                this.setModalIndex(1);\r\n                this.modalWrapperFlag();\r\n              }}\r\n              startIcon={<AddCircleIcon/>}\r\n            >サイト登録</Button>\r\n            <Button\r\n              id=\"button-krawlsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              onClick={()=>this.execCrawling()}\r\n              startIcon={<ScreenSearchDesktopIcon/>}\r\n            >すべて開始</Button>\r\n          </Grid>\r\n          <Grid Item id=\"crawl-status\" xs={2} style={{padding: \"0.5em\", margin:\"0.5em\"}}>\r\n            <div id=\"label-reffer-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>参照データ</p></div>\r\n            <div id=\"label-reffer-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>&nbsp;{this.props.selectedFileName}</p></div>\r\n          </Grid>\r\n          <Grid Item id=\"crawl-status\" xs={2} style={{padding: \"0.5em\", margin:\"0.5em\"}}>\r\n            <div id=\"label-krawl-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>最終クロール日時</p></div>\r\n            <div id=\"label-krawl-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>&nbsp;{this.props.mtime}</p></div>\r\n            <div id=\"label-status-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>クロール状態</p></div>\r\n            <div id=\"label-status-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p id=\"p-status-data\">{this.props.status}</p></div>\r\n          </Grid>\r\n        </Grid>\r\n        {/* パラメータの数字1はクローリング設定画面を指す(他の画面と区別する為) */}\r\n        <CrawlSettingMaterialTable\r\n          columns={columnsData(1)} \r\n          data={this.props.thisContentsArticle}\r\n          actions={1}\r\n          editable={1}\r\n          modalWrapperFlag={this.modalWrapperFlag}\r\n          setItem={this.setItem}\r\n        />\r\n        <ModalWrapper\r\n          modalWrapperFlag={this.modalWrapperFlag}\r\n          open={this.state.open}\r\n          content={setModalJsx()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ReactコンポーネントとReduxストアをコネクト\r\nconst mapStateToProps = (state) => ({\r\n  thisContentsArticle: state.componentReducer.thisContents.article,\r\n  thisKubunList: state.componentReducer.thisKubunList.kbns,\r\n  thisCrawlingList: state.componentReducer.thisCrawlingList.crawling,\r\n  selectedFileName: state.componentReducer.selectedFileName,\r\n  status: state.componentReducer.status,\r\n  mtime: state.componentReducer.mtime\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCrawlingStatus: str => dispatch(actions.SET_CRAWLING_STATUS(str))\r\n});\r\n\r\nconst ContainerShowCrawlSetting = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ShowCrawlSetting);\r\n\r\nexport default ContainerShowCrawlSetting;","/////////////////////////////////////////////////////////////////\r\n// MaterialTable表示\r\n/////////////////////////////////////////////////////////////////\r\nimport React, { forwardRef, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { setDeleteCrawlingList } from '../actions/crawlingList.js';\r\n// MaterialTableに使用するアイコンをインポート\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Save from '@material-ui/icons/Save';\r\n\r\n// MaterialTableに使用するアイコンを定数化\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    Save: forwardRef((props, ref) => <Save {...props} ref={ref} />)\r\n  };\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// MaterialTableを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport default function DetailCrawlSettingMaterialTable(props) {\r\n  // クロール対象データのデータをセット\r\n  const [data, setData] = useState(props.data);\r\n  /////////////////////////////////////////////////////////////////\r\n  // 区分設定画面。現在登録されているクロールデータ。\r\n  const editableDetailCrawlSetting =\r\n    <MaterialTable\r\n        title=\"対象データセット\"\r\n        columns={props.columns}\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\teditable={{\r\n        ///////////////////////////////////////////////////////////////// \r\n        // クロール対象データの削除処理\r\n        onRowDelete:\r\n        (oldData) =>\r\n          new Promise((resolve,reject) => {\r\n            var dataSet = {\"delete\":[]};\r\n            const dataDelete = [...data];\r\n            const index = oldData.tableData.id;\r\n            // バックエンドに渡す為の削除対象データ\r\n            dataSet.delete.push(oldData);\r\n            dataDelete.splice(index, 1);\r\n            setData([...dataDelete]);\r\n            resolve(dataSet)\r\n          })\r\n          .then((response) => {\r\n\t\t\t\t\t\tsetDeleteCrawlingList(response)\r\n            .then((response)=>{\r\n              if(response) {\r\n                props.setSelectedCrawling(oldData);  // クロール対象データセット更新\r\n              }\r\n            })  \r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          }),\r\n        }}\r\n      options={{\r\n        showTitle: true,\r\n        search: true,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0, fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      localization={{\r\n        header:{actions: ''},\r\n        body:{\r\n          editRow:{\r\n            deleteText:\"データは削除されます。よろしいですか？\",\r\n          },\r\n        },\r\n      }}\r\n      icons={tableIcons}\r\n      options={{\r\n        showTitle: true,\r\n        search: false,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0,  fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      actions={[\r\n        {\r\n\t\t\t\t\t///////////////////////////////////////////////////////////////// \r\n\t\t\t\t\t// クロール対象データの編集処理\r\n\t\t\t\t\ticon:Edit,\r\n\t\t\t\t\ttooltip:\"Edt your's settings.\",\r\n\t\t\t\t\tcellStyle:{fontSize: \"0.8em\", width: \"10%\", minWidth: \"10%\"},\r\n\t\t\t\t\theaderStyle:{fontWeight: \"bold\",  width: \"10%\", minWidth: \"10%\"},\r\n\t\t\t\t\tonClick:(e, rowData) => {\r\n\t\t\t\t\t\tprops.setModalIndex(2);\r\n\t\t\t\t\t\tprops.modalWrapperFlag();\r\n\t\t\t\t\t\tprops.setItem(rowData);\r\n\t\t\t\t\t}\r\n        }\r\n      ]}\r\n    />\r\n  /////////////////////////////////////////////////////////////////\r\n  // MaterialTableの戻り値\r\n  return(\r\n\t\t<div className=\"materialDetailCrawlSetting\" style={{ maxWidth:\"36%\", minWidth:\"36%\", padding:\"0.5em\", fontSize:\"10pt\"}}>\r\n\t\t\t{editableDetailCrawlSetting}\r\n\t\t</div>\r\n\t);\r\n}\r\n","/////////////////////////////////////////////////////////////////\r\n// MaterialTable表示\r\n/////////////////////////////////////////////////////////////////\r\nimport React, { forwardRef, useState } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { setEditKubunList, setDeleteKubunList } from '../actions/kubunList.js';\r\n// MaterialTableに使用するアイコンをインポート\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Save from '@material-ui/icons/Save';\r\nimport DetailPanel from '@material-ui/icons/Details';\r\n\r\n// MaterialTableに使用するアイコンを定数化\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    Save: forwardRef((props, ref) => <Save {...props} ref={ref} />)\r\n  };\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// MaterialTableを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport default function KubunSettingMaterialTable(props) {\r\n  // 区分リストのデータをセット\r\n  const [data, setData] = useState(props.data);\r\n  /////////////////////////////////////////////////////////////////\r\n  // 区分セット。MaterialTableのeditable属性\r\n  const editableKubunSetting =\r\n    <MaterialTable\r\n      title=\"区分セット\"\r\n      columns={props.columns}\r\n       data={props.data}\r\n       editable={{\r\n        ///////////////////////////////////////////////////////////////// \r\n        // 区分リストの編集処理\r\n        onRowUpdate:(newData, oldData) =>\r\n        new Promise((resolve, reject) => {\r\n          var dataSet = {\"before\":[], \"after\":[]};\r\n          const dataUpdate = [...data];\r\n          const index = oldData.tableData.id;\r\n          // アクションに渡すデータ(更新前・更新後)を保存。\r\n          dataSet.before.push(oldData);\r\n          dataSet.after.push(newData);\r\n          // マテリアルテーブルに配置するデータを更新。\r\n          dataUpdate[index] = newData;\r\n          setData([...dataUpdate]);\r\n          resolve(dataSet);\r\n        })\r\n        .then((response) => {\r\n          setEditKubunList(response)\r\n          .then(()=>{\r\n            props.setStateKbns(); // 区分リスト最新化\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        }),\r\n        ///////////////////////////////////////////////////////////////// \r\n        // 区分リストの削除処理\r\n        onRowDelete:(oldData) =>\r\n        new Promise((resolve,reject) => {\r\n          var dataSet = {\"delete\":[]};\r\n          const dataDelete = [...data];\r\n          const index = oldData.tableData.id;\r\n          // バックエンドに渡す為の削除対象データ\r\n          dataSet.delete.push(oldData);\r\n          dataDelete.splice(index, 1);\r\n          setData([...dataDelete]);\r\n          resolve(dataSet)\r\n        })\r\n        .then((response) => {\r\n          setDeleteKubunList(response)\r\n          .then(()=>{\r\n            props.setStateKbns(); // 区分リスト最新化\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        }),\r\n      }}\r\n      options={{\r\n        showTitle: true,\r\n        search: true,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0, fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      localization={{\r\n        header:{actions: ''},\r\n        body:{editRow:{deleteText:\"データは削除されます。よろしいですか？\"},},        \r\n      }}\r\n      icons={tableIcons}\r\n      actions={[\r\n        // 詳細ボタン。現在登録されているクロールデータを表示する\r\n        {\r\n          icon:DetailPanel,\r\n          tooltip:\"Show details.\",\r\n          cellStyle:{fontSize: \"0.8em\", width: \"10%\", minWidth: \"10%\"},\r\n          headerStyle:{fontWeight: \"bold\",  width: \"10%\", minWidth: \"10%\"},\r\n          onClick:(e, rowData) => {\r\n            props.setSelectedCrawling(rowData);\r\n          }\r\n        }        \r\n      ]}\r\n    />\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  // MaterialTableの戻り値\r\n  return(\r\n      <div className=\"materialKubunSetting\" style={{ maxWidth:\"45%\", minWidth:\"45%\", marginLeft: \"16.6rem\", padding:\"0.5em\", fontSize:\"10pt\"}}>\r\n        {editableKubunSetting}\r\n      </div>\r\n  );\r\n}\r\n","///////////////////////////////////////////////////////////////// \r\n// クローリングの設定画面を表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\n// コンテンツボックスに表示する記事データとクローリング情報のデータ\r\nimport { setNewKubunList } from '../actions/kubunList.js';\r\nimport { recentUpdateFileDate } from '../actions/contentsList.js';\r\nimport { setUpdateCrawlingList, addNewCrawlingList } from '../actions/crawlingList.js';\r\nimport DetailCrawlSettingMaterialTable from '../materialTable/detailCrawlSettingMaterialTable.jsx';\r\nimport KubunSettingMaterialTable from '../materialTable/kubunSettingMaterialTable.jsx';\r\nimport { KubunSettingInModal, ShortKrawlSettingInModal, RegistKrawlSettingInModal } from './showModalWindow.jsx';\r\nimport ModalWrapper from './showModalWindow.jsx';\r\nimport cssFileControl from '../commonFunc.js';\r\nimport { cssFileDisable } from '../commonFunc.js';\r\nimport { columnsData } from '../actions/materialTableColumns';\r\nimport { connect } from 'react-redux';\r\n// アイコン\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n///////////////////////////////////////////////////////////////// \r\n// 区分設定ページを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nclass ShowKubunSetting extends React.Component {\r\n  constructor (props){\r\n    super(props);\r\n    this.state = {\r\n      kbns:this.props.thisKubunList,\r\n      selectedCrawling:null,\r\n      selectedItem:null,\r\n      open:false,\r\n      modalIndex:0,\r\n      recentFileUpdate:\"未取得\",\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // componentWillMount()\r\n  componentWillMount() {\r\n    // メイン画面のCSSファイル解除\r\n    cssFileControl(\"App.css\", \"showCrawlSetting.css\");\r\n    cssFileDisable(\"loading.css\");\r\n    this.recentKubunUpdateDate();\r\n    this.setState({selectedCrawling:[]})\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 設定一覧で選択されたコンテンツデータを返す。\r\n  setItem = (item) => {\r\n    this.setState({selectedItem:item});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分セットテーブルで選択された区分のクロール対象データを返す。\r\n  setSelectedCrawling = (item) => {\r\n    var filter = this.props.thisCrawlingList.filter((v) => v.kbn === item.kbn);\r\n    var dummyList = [];\r\n    if(filter.length !== 0) {\r\n      filter.map((i, index) => {\r\n        let list = {};\r\n        list.kbn = i.kbn\r\n        list.kbnname = i.kbnname\r\n        list.jigyosyaid = i.jigyosyaid\r\n        list.name = i.name\r\n        list.crawlingurl = i.crawlingurl\r\n        list.xpathTitle = i.xpathTitle\r\n        list.xpathLink = i.xpathLink\r\n        list.xpathImage = i.xpathImage\r\n        dummyList.push(list);\r\n      });\r\n    }\r\n    this.setState({selectedCrawling:dummyList})\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // CrawlingList.jsのクローリング情報の更新処理を呼び出す。this.state.selectedItemを更新している。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callUpdateCrawlingList = (\r\n    item,\r\n    changedCrawlingUrl,\r\n    changedCrawlingXpathTitle,\r\n    changedValueCrawlingXpathLink,\r\n    changedValueCrawlingXpathImage) => { \r\n      setUpdateCrawlingList (\r\n        item,\r\n        changedCrawlingUrl,\r\n        changedCrawlingXpathTitle,\r\n        changedValueCrawlingXpathLink,\r\n        changedValueCrawlingXpathImage\r\n      )\r\n      .then((response) => {\r\n        if (response.flag) {\r\n          this.setSelectedCrawling(item);  // クロール対象データセット更新\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // クローリング情報の新規登録処理を呼び出す。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callNewCrawlingList = (item) => { \r\n    addNewCrawlingList(item)\r\n    .then(()=>{\r\n      this.setSelectedCrawling(item);  // クロール対象データセット更新\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分情報を新規登録する処理。setNewKubunListメソッドの中でstoreのデータも更新している。\r\n  callNewKubunList = (changedValueKubun, changedValueKubunName, changedValueComment) => { \r\n    setNewKubunList(changedValueKubun, changedValueKubunName, changedValueComment)\r\n    .then(()=>{\r\n      this.setStateKbns();  // 区分データセット更新\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    })\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分セットテーブルで選択された区分のクロール対象データを返す。\r\n  setSelectedCrawling = (item) => {\r\n    var filter =  this.props.thisCrawlingList.filter((v) => v.kbn == item.kbn);\r\n    var dummyList = [];\r\n    if(filter.length != 0) {\r\n      filter.map((i, index) => {\r\n        let list = {};\r\n        list.kbn = i.kbn\r\n        list.kbnname = i.kbnname\r\n        list.jigyosyaid = i.jigyosyaid\r\n        list.name = i.name\r\n        list.crawlingurl = i.crawlingurl\r\n        list.xpathTitle = i.xpathTitle\r\n        list.xpathLink = i.xpathLink\r\n        list.xpathImage = i.xpathImage\r\n        dummyList.push(list);\r\n      });\r\n    }\r\n    this.setState({selectedCrawling:dummyList});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分データセット更新\r\n  setStateKbns = () => {\r\n    this.setState({kbns:this.props.thisKubunList});\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 編集ボタン押下時の処理はkubunSettingMaterialTable.jsx,detailCrawlSettingMaterialTable.jsx\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 削除ボタン押下時の処理はkubunSettingMaterialTable.jsx,detailCrawlSettingMaterialTable.jsx\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示・非表示の設定をフラグ管理する\r\n  modalWrapperFlag = () => {\r\n    this.state.open ? this.setState({open:false}) : this.setState({open:true});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示する画面の種別を判定\r\n  // (init)0:編集画面 1:新規登録画面\r\n  setModalIndex = (props) => {\r\n    // パラメータの値をthis.stateにセット\r\n    this.setState({modalIndex:props});\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 最終更新日時を返す\r\n  recentKubunUpdateDate = () => {\r\n    recentUpdateFileDate(2, \"mtime\") // パラメータ:2は区分リスト\r\n    .then((response) => {\r\n      if(response) {\r\n        this.setState({recentFileUpdate:response[\"mtime\"]});\r\n      } else {\r\n        this.setState({recentFileUpdate:\"取得できませんでした\"});\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // レンダー\r\n  render() {\r\n    ///////////////////////////////////////////////////////////////// \r\n    // モーダル表示する画面の種別に対応したjsxを返却\r\n    // (init)0:区分セットの区分登録ボタン 1:クロール対象データのデータ登録ボタン 3:クロール対象データの編集ボタン\r\n    const setModalJsx = () => {\r\n      if(this.state.modalIndex === 0) {\r\n        return (\r\n          <KubunSettingInModal \r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            kbns={this.state.kbns}\r\n            callNewKubunList={this.callNewKubunList}\r\n          />          \r\n        );\r\n      } else if(this.state.modalIndex === 1) {\r\n        return (\r\n          <RegistKrawlSettingInModal\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            kbns={this.state.kbns}\r\n            setModalIndex={this.setModalIndex}\r\n            callNewCrawlingList={this.callNewCrawlingList}\r\n          />\r\n        );\r\n      } else if(this.state.modalIndex === 2) {\r\n        return (\r\n          <ShortKrawlSettingInModal \r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            selectedItem={this.state.selectedItem}\r\n            setModalIndex={this.setModalIndex}\r\n            callUpdateCrawlingList={this.callUpdateCrawlingList}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        <Grid container spacing={2} justifyContent=\"flex-start\" style={{padding: \"0.5em\", right: \"30%\"}}>\r\n          <Grid Item xs={3} style={{padding: \"0.5em\"}}>\r\n            <Button\r\n              id=\"button-kubunsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              size=\"small\"\r\n              onClick={()=>this.modalWrapperFlag()}\r\n              startIcon={<AddCircleIcon/>}\r\n            >区分登録</Button>\r\n            <Button\r\n              id=\"button-kubunsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              size=\"small\"\r\n              onClick={()=>{\r\n                this.setModalIndex(1);\r\n                this.modalWrapperFlag()\r\n              }}\r\n              startIcon={<AddCircleIcon/>}\r\n            >サイト登録</Button>\r\n          </Grid>\r\n          <Grid Item className=\"kubun-status\" xs={2} justifyContent=\"flex-end\" style={{padding: \"0.5em\", margin:\"0.5em\"}} className=\"top-Box\">\r\n            <div className=\"label-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>最終更新日時</p></div>\r\n            <div className=\"label-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>&nbsp;{this.state.recentFileUpdate}</p></div>\r\n          </Grid>\r\n        </Grid>\r\n        <div className=\"materialTableWrapper\">\r\n          {/* パラメータの数字2は区分設定画面の区分セットを指す(他の画面と区別する為) */}\r\n          <KubunSettingMaterialTable\r\n            columns ={columnsData(2)}\r\n            data={this.state.kbns}\r\n            actions={2}\r\n            editable={2}\r\n            open={this.state.open}\r\n            setSelectedCrawling={this.setSelectedCrawling}\r\n            setStateKbns={this.setStateKbns}\r\n          />\r\n          {/* パラメータの数字3は区分設定画面のクロール対象データセットを指す(他の画面と区別する為) */}\r\n          <DetailCrawlSettingMaterialTable\r\n            columns={columnsData(3)}\r\n            data={this.state.selectedCrawling}\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            setModalIndex={this.setModalIndex}\r\n            open={this.state.open}\r\n            setItem={this.setItem}\r\n            setSelectedCrawling={this.setSelectedCrawling}\r\n          />\r\n          <ModalWrapper\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            content={setModalJsx()}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ReactコンポーネントとReduxストアをコネクト\r\nconst mapStateToProps = (state) => ({\r\n\tthisKubunList: state.componentReducer.thisKubunList.kbns,\r\n  thisCrawlingList: state.componentReducer.thisCrawlingList.crawling\r\n});\r\n\r\nconst ContainerShowKubunSetting = connect(\r\n\tmapStateToProps,\r\n\tnull\r\n)(ShowKubunSetting);\r\n\r\nexport default ContainerShowKubunSetting;","// メニューバー、ツールバーで使用するライブラリ\r\nimport React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport getContentsList from '../actions/contentsList.js';\r\nimport * as actions from \"../actions/action.js\"\r\n\r\nconst drawerWidth = 240;\r\n\r\n// ツールバーのタイトルのフォントサイズ調整\r\nconst useStyles = makeStyles(theme => ({\r\n\tlistItemText:{\r\n\t\tpaddingLeft:\"1em!important\",\r\n\t\tfontSize:\"10pt!important\",\r\n\t},\r\n\tlistItemTextContentsfile:{\r\n\t\tpaddingLeft:\"2em!important\",\r\n\t\tfontSize:\"10pt!important\",\r\n\t},\r\n\tlinkElementStyleonLogin:{\r\n\t\ttextDecoration: \"none\",\r\n\t},\r\n\tlinkElementStyleonLogout:{\r\n\t\ttextDecoration: \"none\",\r\n\t\tpointerEvents:\"none\",\r\n\t}\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// コンテンツメニューの開閉を制御する\r\n\tconst [selectedContentsIndex, setSelectedContentsIndex] = React.useState(0);\r\n\tconst [opencontents, setOpenContents] = React.useState(false);\r\n\tconst styles = useStyles();\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetOpenContents(!opencontents);\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// アイコンボタン押下時のメニュー開閉を制御する\r\n\tconst optionMenuIcon = [\r\n\t\t\"ログアウト\",\r\n\t];\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst open = Boolean(anchorEl);\r\n\tconst [selectedIconIndex, setSelectedIconIndex] = React.useState(0);\r\n\t// アイコンボタン押下処理\r\n\tconst onClickIconButton = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t}\r\n\t// アイコンボタン押下時に現れるメニューより選択したアイテムの押下処理\r\n\tconst onClickSelectedIcon = (event, index) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetSelectedIconIndex(index);\r\n\t\tsetAnchorEl(null);\r\n\t\tif(selectedIconIndex === 0) {\r\n\t\t\t// ログアウト処理\r\n\t\t\tprops.LOGOUT();\r\n\t\t\twindow.location.href = \"/\";\r\n\t\t}\r\n\t};\r\n\t// メニューを閉じるイベント処理\r\n\tconst handleClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 選択されたコンテンツファイル名にselectedを有効化する\r\n\tconst handleListItemClick = (text) => {\r\n\t\tsetSelectedContentsIndex(text);\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 選択されたコンテンツファイル名を返却\r\n\tconst callApp = (selectedFileName) => {\r\n\t\tgetContentsList(selectedFileName);\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 左側のメニューバー\r\n\tconst drawer = (\r\n\t<div>\r\n\t\t<Toolbar id=\"toolBar-loginInfo\" style={{fontSize:\"0.8rem\"}}>\r\n\t\t\t<p style={{marginTop: \"0.5em\", marginBottom: \"0.5em\"}}>ユーザー :  {props.user}</p>\r\n\t\t\t<p style={{marginTop: \"0.5em\", marginBottom: \"0.5em\"}}>更新時刻 :  {new Date().toLocaleString('ja-JP')}</p>\r\n\t\t</Toolbar>\r\n\t\t<Divider/>\r\n\t\t<List>\r\n\t\t\t{/* 区分セットページ */}\r\n\t\t\t<Link to=\"/ShowKubunSetting\" style={{textDecoration: \"none\"}}>\r\n\t\t\t\t<ListItem button selected={selectedContentsIndex === 20}onClick={(e) => handleListItemClick(20, e)}>\r\n\t\t\t\t\t<ListItemText primary=\"区分セット\" className=\"list-item-text\" classes={{primary:styles.listItemText}}/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t</Link>\r\n\t\t\t{/* 実行結果セットページ */}\r\n\t\t\t<ListItem button>\r\n\t\t\t\t<ListItemText primary=\"実行結果セット\" className=\"list-item-text\" classes={{primary:styles.listItemText}}/>\r\n\t\t\t\t{opencontents \r\n\t\t\t\t? <ExpandLess onClick={handleClick} style={{color:\"#FFF\",marginRight: \"1em\"}}/>\r\n\t\t\t\t: <ExpandMore onClick={handleClick} style={{color:\"#FFF\", marginRight: \"1em\"}}/>\r\n\t\t\t\t}\r\n\t\t\t</ListItem>\r\n\t\t\t<Collapse in={opencontents} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t{props.fileNameList !== undefined &&\r\n\t\t\t\t\tprops.fileNameList.map((fileName, index) => (\r\n\t\t\t\t\t\t<Link to=\"/ShowCrawlSetting\" key={fileName} style={{textDecoration: \"none\"}}>\r\n\t\t\t\t\t\t\t<ListItem button selected={selectedContentsIndex === fileName} onClick={(e) => {handleListItemClick(fileName, e); callApp(fileName, e)}}>\r\n\t\t\t\t\t\t\t\t<ListItemText primary={fileName} className=\"list-item-text-contentsfile\" classes={{primary:styles.listItemTextContentsfile}}/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t))}\r\n\t\t\t</Collapse>\r\n\t\t\t{/* コンテンツ表示ページ */}\r\n\t\t\t<ListItem button>\r\n\t\t\t\t<ListItemText primary=\"コンテンツ\" onClick={handleClick} className=\"list-item-text\" classes={{primary:styles.listItemText}}/>\r\n\t\t\t\t{opencontents \r\n\t\t\t\t? <ExpandLess onClick={handleClick} style={{color:\"#FFF\",marginRight: \"1em\"}}/>\r\n\t\t\t\t: <ExpandMore onClick={handleClick} style={{color:\"#FFF\", marginRight: \"1em\"}}/>\r\n\t\t\t\t}\r\n\t\t\t</ListItem>\r\n\t\t\t<Collapse in={opencontents} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t{props.fileNameList !== undefined &&\r\n\t\t\t\t\tprops.fileNameList.map((fileName, index) => (\r\n\t\t\t\t\t\t<Link to=\"/ShowContentsArea\" key={fileName} style={{textDecoration: \"none\"}}>\r\n\t\t\t\t\t\t\t<ListItem button selected={selectedContentsIndex === fileName} onClick={(e) => {handleListItemClick(fileName, e); callApp(fileName, e)}}>\r\n\t\t\t\t\t\t\t\t<ListItemText primary={fileName} className=\"list-item-text-contentsfile\" classes={{primary:styles.listItemTextContentsfile}}/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t))}\r\n\t\t\t</Collapse>\r\n\t\t</List>\r\n\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Box sx={{ display: 'flex' }}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t{/* 上部のツールバー */}\r\n\t\t\t<AppBar\tposition=\"fixed\" sx={{width: { sm: `calc(100% - ${drawerWidth}px)` },ml: { sm: `${drawerWidth}px` },}}>\r\n\t\t\t<Toolbar style={{justifyContent:\"space-between\"}}>\r\n\t\t\t\t{/* タイトル */}\t\r\n\t\t\t\t<Typography className=\"toolbarTypography\"variant=\"h6\" noWrap component=\"div\" style={{fontSize:\"16pt!important\"}}>Site Checker...</Typography>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\taria-label=\"opencontentsDrawer\"\r\n\t\t\t\t\tonClick={onClickIconButton}\r\n\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t// sx={{marginRight: '36px', ...(opencontents && { display: 'none' })}}\r\n\t\t\t\t\tsx={{marginRight: '36px', }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t{/* メニューアイコン(ログアウト処理) */}\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Menu\r\n\t\t\t\t\tid=\"lock-menu\"\r\n\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tMenuListProps={{\r\n\t\t\t\t\t\t'aria-labelledby': 'lock-button',\r\n\t\t\t\t\t\trole: 'listbox',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{optionMenuIcon.map((option, index) => (\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t// disabled={index === 0}\r\n\t\t\t\t\t\t\t// selected={index === selectedIconIndex}\r\n\t\t\t\t\t\t\t// onClick={(e) => onClickSelectedIcon(e, index)}\r\n\t\t\t\t\t\t\tonClick={(e) => onClickSelectedIcon(e)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Menu>\r\n\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t{/* 左側のメニューバー表示 */}\r\n\t\t\t<Box component=\"nav\" sx={{width: { sm: drawerWidth }, flexShrink: { sm: 0 } }} aria-label=\"mailbox folders\">\r\n\t\t\t\t{/* 左側のメニューバー表示(中身) */}\t\t\t\r\n\t\t\t\t<Drawer\tvariant=\"permanent\"\tsx={{display: {xs: 'none', sm: 'block' },\t'& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },}} opencontents>\r\n\t\t\t\t\t{drawer}\r\n\t\t\t\t</Drawer>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ReactコンポーネントとReduxストアをコネクト\r\nconst mapStateToProps = (state) => ({\r\n\tfileNameList: state.componentReducer.fileNameList,\r\n\tuser: state.loginReducer.user\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tLOGOUT: () => dispatch(actions.LOGOUT())\r\n});\r\n\r\nconst ContainerResponsiveDrawer = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(ResponsiveDrawer);\r\n\r\nexport default ContainerResponsiveDrawer;","///////////////////////////////////////////////////////////////// \r\n// エラー発生時に描写するコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nimport * as React from 'react';\r\n\r\nconst fontFamily = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu',\" +\r\n \t\"'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false,\r\n\t\t\terror: null,\r\n\t\t\terrorInfo: null,\r\n\t\t};\r\n\t}\r\n\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\treturn { hasError: true };\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tthis.setState({error, errorInfo});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\t// エラー時の表示\r\n\t\t\treturn(\r\n\t\t\t\t<div style={{marginLeft:\"17rem\", marginRight:\"17rem\"}}>\r\n\t\t\t\t\t<h1 style={{fontFamily:fontFamily}}>JavaScriptの致命的エラー</h1>\r\n\t\t\t\t\t<pre style={{fontFamily:fontFamily}}>{this.state.error?.message}</pre>\r\n\t\t\t\t\t<pre style={{fontFamily:fontFamily}}>{this.state.errorInfo?.componentStack}</pre>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn(\r\n\t\t\tthis.props.children\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport LoginUI from './loginUi.jsx';\r\nimport getContentsList from './actions/contentsList.js';\r\nimport { recentUpdateFileDate } from './actions/contentsList.js';\r\nimport getKbnList from './actions/kubunList.js';\r\nimport getCrawlingList from './actions/crawlingList.js';\r\nimport ContainerAuth from './auth.jsx';\r\nimport ContainerShowContentsArea from './show/showContentsArea.jsx';\r\nimport ContainerShowCrawlSetting  from './show/showCrawlSetting.jsx';\r\nimport ContainerShowKubunSetting  from './show/showKubunSetting.jsx';\r\nimport ContainerResponsiveDrawer from './toolbar/toolbar.jsx';\r\nimport ErrorBoundary from './error/errorBoundary.jsx';\r\nimport { cssFileDisable } from './commonFunc.js';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport store from \"./store/store.js\";\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// メインコンポーネント\r\nexport default class App extends React.Component {\r\n  ///////////////////////////////////////////////////////////////// \r\n  // componentWillMount()\r\n  componentWillMount() {\r\n    Promise.resolve()\r\n    .then(getContentsList(store.getState().componentReducer.selectedFileName))\r\n    .then(getKbnList())\r\n    .then(getCrawlingList())\r\n    .then(() => {\r\n      // ローディングCSSを無効化\r\n      cssFileDisable(\"loading.css\");\r\n      // コンテンツファイル名のリストを取得\r\n      recentUpdateFileDate(1, \"list\");\r\n      // コンテンツリスト(最新のもの)最終更新日時を取得。=最終クローリング日時\r\n      recentUpdateFileDate(1, \"mtime\");\r\n    });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // レンダー\r\n  render() {\r\n    return(\r\n      <ErrorBoundary>\r\n        <div className=\"loading\"><span className=\"circle\"></span></div>\r\n        <Switch>\r\n          <Route exact path='/' component={LoginUI}/>\r\n          <ContainerAuth>\r\n            <ContainerResponsiveDrawer/>\r\n            <Route path='/ShowCrawlSetting' component={ContainerShowCrawlSetting}/>\r\n            <Route path='/ShowKubunSetting' component={ContainerShowKubunSetting}/>\r\n            <Route path='/ShowContentsArea' component={ContainerShowContentsArea}/>\r\n          </ContainerAuth>\r\n        </Switch>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.jsx';\n// Redux使用部分\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './store/store.js';\n\n///////////////////////////////////////////////////////////////// \n// ルートコンポーネント\nexport default class Root extends React.Component {\n  render() {\n    return(\n      <BrowserRouter>\n        <Provider store={store}>\n          <App/>\n        </Provider>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDOM.render(<Root/>, document.getElementById('root'));"],"sourceRoot":""}