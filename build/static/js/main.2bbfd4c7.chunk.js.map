{"version":3,"sources":["data/crawling sync /^/.*$","data/crawling/crawlingList.json-202111152353.back","data/crawling/crawlingList.json-202111170014.back","data/crawling/crawlingList.json-202112050645.back","data/crawling/crawlingList.json-202112080019.back","data/crawling/crawlingList.json-202112250115.back","data/contents sync /^/.*$","reducers/loginReducer.js","reducers/componentReducer.js","history.js","store/store.js","actions/action.js","loginUi.jsx","card/cardComponent.jsx","commonFunc.js","show/showContentsBlock.jsx","show/showContentsTitle.jsx","actions/kubunList.js","actions/crawlingList.js","show/showContentsArea.jsx","materialTable/crawlSettingMaterialTable.jsx","show/showModalWindow.jsx","actions/materialTableColumns.js","show/showCrawlSetting.jsx","materialTable/detailCrawlSettingMaterialTable.jsx","materialTable/kubunSettingMaterialTable.jsx","show/showKubunSetting.jsx","toolbar/toolbar.jsx","error/errorBoundary.jsx","auth.jsx","app.jsx","actions/contentsList.js","index.jsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","initialState","session","status","loginReducer","state","action","type","console","log","fileNameList","selectedFileName","thisContents","mtime","componentReducer","fileName","contentsList","Date","history","createBrowserHistory","require","store","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","ActionType","requestLogin","receiveLoginSuccess","receiveLoginFailed","ActionType2","Login","user","password","Promise","reject","dispatch","fetch","method","mode","heders","body","JSON","stringify","then","response","ok","json","responseJson","result","catch","error","LoginUI","props","useState","message","setMessage","setUser","setPassword","Paper","style","maxWidth","margin","marginTop","color","padding","TextField","label","width","fontSize","rows","onChange","target","value","Grid","container","justifyContent","direction","item","Button","variant","onClick","preventDefault","list","getState","push","onLogin","ArticleCardStyle","makeStyles","root","media","height","MediaCardForContentsBlock","Content","classes","className","Card","CardActionArea","href","source","textDecoration","rel","CardMedia","image","title","CardContent","Typography","component","name","cssFileControl","disableFileName","ableFileName","i","document","styleSheets","length","styleSheetPath","substring","lastIndexOf","disabled","cssFileDisable","cssFileAble","ContentsBlockControl","contentesList","Rows","undefined","article","index","Kbn","kbn","this","DetailShow","DetailOriginal","React","Component","MoveBlockOnClick","TargetKbn","Caller","SiteHedderActive","SiteHedderActiveM","GetterSiteHedderActive","CaseA","ElementOfContentsBlock","getElementById","TargetContentsBlockClassName","getAttribute","setAttribute","DetailShowActiveSiteHedder","CaseB","DetailHide","ContentsTitleButtonWithBorder","selectedIndex","setState","click","PreClickM","GetterPreClick","ElementPreClick","ContentTitleUnderBorderShow","classList","replace","ContentTitleUnderBorderHide","ContentTitleUnderBorderOriginal","ElementThisClick","SetterPreClick","selected","ContentsTitleBlock","NaviBar","Kbns","kbns","noWrap","kbnname","Transition","in","mount","timeout","ContentsTitleOriginal","TransitionContentsTitleShow","KubunListJsonFileName","KbnListJson","KbnList","setNewKubunList","changedValueKubun","changedValueKubunName","changedValueComment","str","String","fromCharCode","charCodeAt","isNaN","Number","alert","findIndex","v","newKubunList","comment","flag","setEditKubunList","kbnBefore","before","kbnnameBefore","commentBefore","kbnAfter","after","kbnnameAfter","commentAfter","param","res","stringToNumber","setDeleteKubunList","targetKubun","CrawlingListJson","CrawlingListJsonFileName","CrawlingList","addNewCrawlingList","newCrawlingList","jigyosyaid","crawlingurl","xpathTitle","xpathLink","xpathImage","crawling","setUpdateCrawlingList","changedCrawlingUrl","changedCrawlingXpathTitle","changedValueCrawlingXpathLink","changedValueCrawlingXpathImage","setDeleteCrawlingList","targetJigyosyaid","entering","transform","entered","exiting","exited","PreClickMortion","PreClick","SiteHedderActiveMortion","Crawlings","MainBlockControl","ContentsRows","List","ShowContentsArea","getKbnList","connect","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Save","CrawlSettingMaterialTable","editableCrawlSetting","columns","data","options","showTitle","search","tableLayout","overflowX","paging","maxBodyHeight","headerStyle","position","top","searchFieldStyle","icons","actions","icon","tooltip","cellStyle","minWidth","fontWeight","rowData","modalWrapperFlag","setItem","setSelectedCrawling","ModalWrapper","Modal","open","onClose","left","onRequestClose","content","KrawlSettingInModal","selectedCrawling","changedValueCrawlingUrl","setValueCrawlingUrl","changedValueCrawlingXpathTitle","setValueCrawlingXpathTitle","setValueCrawlingXpathLink","setValueCrawlingXpathImage","callUpdateCrawlingList","Fade","defaultValue","selectedItem","kiziid","fullWidth","justify","startIcon","ShortKrawlSettingInModal","setModalIndex","RegistKrawlSettingInModal","setValueKubun","setValueKubunName","changedValueJigyosyaid","setValueJigyosyaid","changedValueName","setValueName","paramObj","callNewCrawlingList","FormControl","InputLabel","Select","labelId","targetValue","callSetKbnNameLabel","key","MenuItem","KubunSettingInModal","setValueComment","callNewKubunList","columnsCrawlSetting","field","columnsKubunSetting","columnsDetailCrawlSetting","columnsData","ShowCrawlSetting","thisContentsArticle","crawlings","copyCrawlingList","getCrawlingList","modalIndex","execCrawling","element","setCrawlingStatus","backgroundColor","Contents","recentUpdateFileDate","recentFileUpdate","contents","spacing","Item","xs","editable","ContainerShowCrawlSetting","nowStatus","DetailCrawlSettingMaterialTable","setData","editableDetailCrawlSetting","onRowDelete","oldData","dataSet","dataDelete","tableData","delete","splice","setStateCrawling","localization","header","editRow","deleteText","KubunSettingMaterialTable","editableKubunSetting","onRowUpdate","newData","marginLeft","ShowKubunSetting","filter","dummyList","copyKubunList","recentKubunUpdateDate","right","drawerWidth","useStyles","theme","listItemText","paddingLeft","listItemTextContentsfile","linkElementStyleonLogin","linkElementStyleonLogout","pointerEvents","ResponsiveDrawer","selectedContentsIndex","setSelectedContentsIndex","opencontents","setOpenContents","styles","handleClick","anchorEl","setAnchorEl","Boolean","selectedIconIndex","setSelectedIconIndex","onClickSelectedIcon","event","window","location","handleListItemClick","text","drawer","Toolbar","Divider","to","ListItem","button","ListItemText","primary","marginRight","Collapse","unmountOnExit","getContentsList","Box","sx","display","CssBaseline","AppBar","sm","ml","IconButton","currentTarget","edge","MenuListProps","role","option","flexShrink","Drawer","boxSizing","fontFamily","ErrorBoundary","hasError","errorInfo","componentStack","children","Auth","checkAuth","App","exact","path","ContentsListJson","ContentsList","selectedContentsList","fileKubun","request","Root","ReactDOM","render"],"mappings":"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","file":"static/js/main.2bbfd4c7.chunk.js","sourcesContent":["var map = {\n\t\"./crawlingList\": 311,\n\t\"./crawlingList-テスト対象\": 399,\n\t\"./crawlingList-テスト対象.json\": 399,\n\t\"./crawlingList.json\": 311,\n\t\"./crawlingList.json-202111152353.back\": 496,\n\t\"./crawlingList.json-202111170014.back\": 497,\n\t\"./crawlingList.json-202112050645.back\": 498,\n\t\"./crawlingList.json-202112080019.back\": 499,\n\t\"./crawlingList.json-202112250115.back\": 500\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 495;","export default __webpack_public_path__ + \"static/media/crawlingList.json-202111152353.378ca29a.back\";","export default __webpack_public_path__ + \"static/media/crawlingList.json-202111170014.e5eeb085.back\";","export default __webpack_public_path__ + \"static/media/crawlingList.json-202112050645.b7f85214.back\";","export default __webpack_public_path__ + \"static/media/crawlingList.json-202112080019.0a3f884f.back\";","export default __webpack_public_path__ + \"static/media/crawlingList.json-202112250115.03be1fac.back\";","var map = {\n\t\"./contents\": 316,\n\t\"./contents.json\": 316,\n\t\"./contents_20211209_084313\": 427,\n\t\"./contents_20211209_084313.json\": 427,\n\t\"./contents_20211228_121614\": 428,\n\t\"./contents_20211228_121614.json\": 428,\n\t\"./contents_20211228_124428\": 429,\n\t\"./contents_20211228_124428.json\": 429,\n\t\"./contents_20211228_124940\": 430,\n\t\"./contents_20211228_124940.json\": 430,\n\t\"./contents_20211228_125851\": 431,\n\t\"./contents_20211228_125851.json\": 431,\n\t\"./contents_20211228_131051\": 432,\n\t\"./contents_20211228_131051.json\": 432,\n\t\"./contents_20211228_131615\": 433,\n\t\"./contents_20211228_131615.json\": 433,\n\t\"./contents_20211228_133131\": 434,\n\t\"./contents_20211228_133131.json\": 434,\n\t\"./contents_20211228_134131\": 435,\n\t\"./contents_20211228_134131.json\": 435,\n\t\"./contents_20211228_185051\": 436,\n\t\"./contents_20211228_185051.json\": 436,\n\t\"./contents_20211228_193123\": 437,\n\t\"./contents_20211228_193123.json\": 437,\n\t\"./contents_20211228_195605\": 438,\n\t\"./contents_20211228_195605.json\": 438,\n\t\"./contents_20211228_200616\": 439,\n\t\"./contents_20211228_200616.json\": 439,\n\t\"./contents_20211228_203133\": 440,\n\t\"./contents_20211228_203133.json\": 440,\n\t\"./contents_20211228_211321\": 441,\n\t\"./contents_20211228_211321.json\": 441\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 561;","////////////////////////////////////////////////////\r\n// レデューサー\r\n////////////////////////////////////////////////////\r\nexport const dumb = (state = {}) => state;\r\n\r\n////////////////////////////////////////////////////\r\n// ログイン\r\nexport const initialState = {\r\n    session:false,\r\n    status:0,    // 0:処理前 1:ログイン成功 -1:ログイン失敗\r\n};\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_REQUEST\":\r\n            return { ...state, session:false, status: 0}\r\n        case \"LOGIN_RECEIVE_SUCCESS\":\r\n            return { ...state, session:true, status: 1}\r\n        case \"LOGIN_RECEIVE_FAILED\":\r\n            return { ...state, session:false, status:-1}\r\n        case \"LOGOUT\":\r\n            console.log(\"loginReducer called. at case LOGOUT.\");\r\n            return { ...state, session:false, status:0}    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default loginReducer;","////////////////////////////////////////////////////\r\n// レデューサー\r\n////////////////////////////////////////////////////\r\nimport { push } from 'connected-react-router';\r\n\r\n////////////////////////////////////////////////////\r\n// コンポーネントのstate\r\nexport const dumb = (state = {}) => state;\r\nexport const initialState = {\r\n\tfileNameList:[],\r\n\tselectedFileName:\"contents.json\",\r\n\tthisContents:null,\r\n\tmtime:\"未取得\",\r\n\tstatus:\"停止\"\r\n};\r\n\r\nexport const componentReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SET_FILENAME_LIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfileNameList:action.fileNameList\r\n\t\t\t}\r\n\r\n\t\tcase \"SET_MTIME\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmtime:action.mtime\r\n\t\t\t}\r\n\t\r\n\t\tcase \"SET_SELECTED_FILENAME\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedFileName:action.fileName,\r\n\t\t\t\tthisContents:action.contentsList\r\n\t\t\t}\r\n\r\n\t\tcase \"SET_CRAWLING_STATUS\":\r\n\t\t\tconsole.log(new Date() + \"componentReduser.SET_CRAWLING_STATUS called.\");\r\n\t\t\tconsole.log(action.status);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus:action.status,\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\nexport default componentReducer;","const createBrowserHistory = require(\"history\").createBrowserHistory;\r\nconst history = createBrowserHistory();\r\nexport default history;","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\r\nimport loginReducer from '../reducers/loginReducer.js';\r\nimport componentReducer from '../reducers/componentReducer.js';\r\nimport history from '../history.js';\r\n\r\nconst store = createStore (\r\n\tcombineReducers({\r\n\t\trouter: connectRouter(history),\r\n\t\tloginReducer,\r\n\t\tcomponentReducer\r\n\t}),\r\n\tapplyMiddleware(\r\n\t\trouterMiddleware(history)\r\n\t)\r\n);\r\n\r\nexport default store;\r\n","import store from \"../store/store.js\";\r\n/////////////////////////////////////////////////////////////////\r\n// ログイン情報をリクエスト\r\n// ***レスポンスデータのイメージ***\r\n// array{\"status:true, \"result\":{\"user\": \"yamada\"}}\r\nconst Login = (user, password) => {\r\n    return new Promise((resolve, reject) => {\r\n        store.dispatch(requestLogin());\r\n        fetch(\"/requestLoginInfo\", {\r\n            method: \"POST\",\r\n            mode: \"no-cors\",\r\n            heders: {\r\n                'Content-Type':'application/json;charset=utf-8',\r\n                'Accept':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"user\":user,\r\n                \"password\":password\r\n            })\r\n        })\r\n        .then((response) => {\r\n            if(response.ok) {\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(function(responseJson) {\r\n            if(responseJson.result == true) {\r\n                store.dispatch(receiveLoginSuccess());\r\n                resolve(true);\r\n            } else {\r\n                store.dispatch(receiveLoginFailed());\r\n                resolve(false);\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            store.dispatch(receiveLoginFailed());\r\n            reject(false);\r\n        });\r\n    });\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n// ここからログイン処理のアクション\r\n////////////////////////////////////////////////////////////////////////////\r\n// アクションタイプをマッピング\r\nexport const ActionType = {\r\n    LOGOUT:\"LOGOUT\",\r\n    LOGIN_REQUEST:\"LOGIN_REQUEST\",\r\n    LOGIN_RECEIVE_SUCCESS:\"LOGIN_RECEIVE_SUCCESS\",\r\n    LOGIN_RECEIVE_FAILED:\"LOGIN_RECEIVE_FAILED\"\r\n}\r\n\r\n// ログアウト処理\r\nexport const logout = () => {\r\n    return {\r\n        type:ActionType.LOGOUT\r\n    };\r\n}\r\n\r\n// ログインリクエスト中\r\nexport const requestLogin = () => {\r\n    return {\r\n        type: ActionType.LOGIN_REQUEST\r\n    };\r\n}\r\n\r\n// リクエスト成功\r\nexport const receiveLoginSuccess = () => {\r\n    return {\r\n        type: ActionType.LOGIN_RECEIVE_SUCCESS\r\n    };\r\n}\r\n\r\n// リクエスト失敗\r\nexport const receiveLoginFailed = () => {\r\n    return {\r\n        type:ActionType.LOGIN_RECEIVE_FAILED\r\n    };\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n// ここからコンポーネントのアクション\r\n////////////////////////////////////////////////////////////////////////////\r\n// アクションタイプをマッピング\r\nexport const ActionType2 = {\r\n\tSET_FILENAME_LIST:\"SET_FILENAME_LIST\",\r\n    SET_MTIME:\"SET_MTIME\",\r\n\tSET_SELECTED_FILENAME:\"SET_SELECTED_FILENAME\",\r\n    SET_CRAWLING_STATUS:\"SET_CRAWLING_STATUS\",\r\n}\r\n\r\n// コンテンツファイルリストを返却\r\nexport const SET_FILENAME_LIST = (param) => {\r\n\treturn {\r\n\t\t\ttype: ActionType2.SET_FILENAME_LIST,\r\n            fileNameList:param\r\n\t};\r\n}\r\n\r\n// ファイル最終更新日時\r\nexport const SET_MTIME = (param) => {\r\n\treturn {\r\n\t\t\ttype:ActionType2.SET_MTIME,\r\n            mtime:param\r\n\t};\r\n}\r\n\r\n// コンテンツファイルリストの中からユーザーが選択したファイルを返却\r\nexport const SET_SELECTED_FILENAME = (selectedFileName, selectedContentsList) => {\r\n\treturn {\r\n\t\t\ttype:ActionType2.SET_SELECTED_FILENAME,\r\n            fileName:selectedFileName,\r\n            contentsList:selectedContentsList\r\n\t};\r\n}\r\n\r\nexport const SET_CRAWLING_STATUS = (nowStatus) => {\r\n    console.log(\"actions.SET_CRAWLING_STATUS called.\");\r\n    console.log(nowStatus);\r\n    return {\r\n        type:ActionType2.SET_CRAWLING_STATUS,\r\n        status:nowStatus\r\n    }\r\n}\r\n\r\nexport default Login;","///////////////////////////////////////////////////////////////// \n// ログインクラス\n///////////////////////////////////////////////////////////////// \nimport React, { useState } from \"react\";\nimport Login from \"./actions/action.js\";\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport store from \"./store/store.js\";\n\n///////////////////////////////////////////////////////////////// \n// コンポーネント\nexport function LoginUI(props) {\n  const [message, setMessage] = useState(\"未入力。\");\n  const [user, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  ///////////////////////////////////////////////////////////////// \n  // ログインボタン押下処理\n  const onLogin = (e) => {\n    e.preventDefault();\n    if(user && password) {\n      Login(user, password)\n      .then((response) => {\n        var list = store.getState();\n        if(list.loginReducer.status == -1) {\n          setMessage(\"ユーザー名もしくはパスワードが違います。\");\n        } else if(list.loginReducer.status == 1) {\n          setMessage(\"ログイン成功\");\n          props.history.push('/ShowContentsArea');\n        }  \n      });\n    } else {\n      setMessage(\"ユーザー名とパスワードを入力してください。\");\n    }\n  }\n\n    return (\n      <div>\n        <Paper style={{maxWidth:\"30%\", margin:\"0 auto\", marginTop:\"15%\"}}>\n          <div>\n            <div style={{ color: \"red\"}}>\n              <p style={{margin:\"0 auto\", padding:\"10px\"}}>{message}</p>\n            </div>\n            <div>\n              <TextField\n                label=\"ユーザー\"\n                style={{width: \"80%\", margin: 8, fontSize:\"midium\"}}\n                rows={1}\n                onChange={(e) => setUser(e.target.value)}\n              ></TextField>\n            </div>\n            <div>\n              <TextField\n                label=\"パスワード\"\n                style={{width: \"80%\", margin: 8, fontSize:\"midium\"}}\n                rows={1}\n                onChange={(e) => setPassword(e.target.value)}\n              ></TextField>\n            </div>\n          </div>\n          <Grid container style={{fontSize:\"midium\"}} justifyContent=\"flex-end\" direction=\"row\">\n            <Grid item>\n              <Button\n                style={{margin: \"1.5em\", fontSize:\"midium\"}}\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={(e) => onLogin(e)}\n              >\n              ログイン\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n}\n\nexport default LoginUI;","import React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n/////////////////////////////////////////////////////////////////\r\n// スタイル。各種記事ブロックに収める画像とリンクをカードクラスで生成する。\r\n// 詳細なプロパティはindex.cssに記述。\r\n/////////////////////////////////////////////////////////////////\r\nconst ArticleCardStyle = makeStyles({\r\n    root:{\r\n    },\r\n    media: {\r\n        height:200,\r\n    },\r\n});\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 各種記事ブロックに収める画像とリンクをカードクラスで生成する。\r\n///////////////////////////////////////////////////////////////// \r\nexport const MediaCardForContentsBlock = (props) => {\r\n    const {Content} = props;\r\n    const classes = ArticleCardStyle();\r\n\r\n    return(\r\n      <div className=\"article\"> \r\n        <Card className={classes.root}>\r\n          <CardActionArea>\r\n            <a href={Content.source} style={{textDecoration: \"none\"}} target=\"_blank\" rel=\"noreferrer\">\r\n              <CardMedia className={classes.media} image={Content.image} title={Content.title}>\r\n                <CardContent>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{Content.name}</Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">{Content.title}</Typography>\r\n                </CardContent>\r\n              </CardMedia>\r\n            </a>\r\n          </CardActionArea>\r\n        </Card>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ヘッダーブロックに収める履歴リスト。画像とリンクをカードクラスで生成する。\r\n// 2021/12/08 廃止\r\n///////////////////////////////////////////////////////////////// \r\nexport const MediaCardForCacheList = (props) => {\r\n    const {Cache} = props;\r\n  \r\n    return(\r\n        <div className=\"CacheList\"> \r\n            <Card >\r\n                <CardActionArea>\r\n                    <a href={Cache.source} target=\"_blank\" rel=\"noreferrer\">\r\n                        <CardMedia component=\"img\" image={Cache.image} title={Cache.title}/>\r\n                    </a>\r\n                </CardActionArea>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MediaCardForContentsBlock;","///////////////////////////////////////////////////////////////// \r\n// CSSファイルの無効、有効化\r\nexport default function cssFileControl(disableFileName, ableFileName) {\r\n\tfor(var i = 0; i < document.styleSheets.length; i++) {\r\n\t\tif (document.styleSheets[i].href != null) {\r\n\t\t\tvar styleSheetPath = document.styleSheets[i].href;\r\n\t\t\tvar fileName = styleSheetPath.substring(styleSheetPath.lastIndexOf('/')+1, styleSheetPath.length);\r\n\t\t\tif (fileName === disableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = true;\r\n\t\t\t}\r\n\t\t\telse if (fileName === ableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// CSSファイルの無効化\r\nexport function cssFileDisable(disableFileName) {\r\n\tfor(var i = 0; i < document.styleSheets.length; i++) {\r\n\t\tif (document.styleSheets[i].href != null) {\r\n\t\t\tvar styleSheetPath = document.styleSheets[i].href;\r\n\t\t\tvar fileName = styleSheetPath.substring(styleSheetPath.lastIndexOf('/')+1, styleSheetPath.length);\r\n\t\t\tif (fileName === disableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// CSSファイルの有効化\r\nexport function cssFileAble(ableFileName) {\r\n\tfor(var i = 0; i < document.styleSheets.length; i++) {\r\n\t\tif (document.styleSheets[i].href != null) {\r\n\t\t\tvar styleSheetPath = document.styleSheets[i].href;\r\n\t\t\tvar fileName = styleSheetPath.substring(styleSheetPath.lastIndexOf('/')+1, styleSheetPath.length);\r\n\t\t\tif (fileName === ableFileName) {\r\n\t\t\t\tdocument.styleSheets[i].disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リストの区分の半角変換と数値変換処理\r\nexport function stringToNumber(param) {\r\n\ttry {\r\n\t\t// 区分の半角変換と数値変換処理\r\n\t\tvar result = {};\r\n\t\tvar str = \"\";\r\n\t\tif(param == undefined || param == \"\") {\r\n\t\t\talert(\"区分には数値を入力してください!\");\r\n\t\t\tthrow \"(区分リスト新規登録処理)区分入力エラー\"; \r\n\t\t} else {\r\n\t\t\tfor(let i=0; i < param.length; i++) {\r\n\t\t\t\tstr += String.fromCharCode(param.charCodeAt(i) - 0xFEE0);\r\n\t\t\t}\r\n\t\t\t// paramが数値型の場合、lengthは取れない。ここで代入する。\r\n\t\t\tif(str === \"\") {\r\n\t\t\t\tstr = param;\r\n\t\t\t}\r\n\t\t\t// 数値変換の処理結果がNan=数値以外であればエラー\r\n\t\t\tif(isNaN(str)) {\r\n\t\t\t\t// 入力値が半角の場合、charCodeAtメソッドの結果がNaNとなる。回避策のIF文\r\n\t\t\t\tif(isNaN(Number(param))) {\r\n\t\t\t\t\t// 1.半角数値の場合\r\n\t\t\t\t\talert(\"区分には数値を入力してください!\");\r\n\t\t\t\t\tthrow \"(区分リスト新規登録処理)区分入力エラー\"; \r\n\t\t\t\t\t// str = param;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 2.半角数字の文字列型の場合\r\n\t\t\t\t\tstr = Number(param);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// 3.全角→半角且つ数値型に変換する場合\r\n\t\t\t\tstr = Number(str);            \r\n\t\t\t}\r\n\t\t\tresult.flag = true;\r\n\t\t\tresult.res = str;\r\n\t\t}\r\n\t} catch(error) {\r\n\t\tresult.flag = false;\r\n\t\tresult.res = str;\r\n\t\tconsole.error(error);\r\n\t} finally {\r\n\t\treturn result;\t\r\n\t}\r\n}","\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツボックスに記事を表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\nimport MediaCardForContentsBlock from '../card/cardComponent.jsx';\r\n// コンテンツボックス部分のスタイル変数\r\nimport {DetailOriginal, DetailShow, DetailHide, DetailShowActiveSiteHedder} from './showContentsArea.jsx';\r\nimport {SiteHedderActiveM} from './showContentsArea.jsx';\r\n// MoveBlockOnClick関数呼び出し時のパラメータに、自身の関数名を入れる。\r\nimport {CaseA, CaseB} from './showContentsArea.jsx';\r\nimport store from \"../store/store.js\";\r\nimport { cssFileAble, cssFileDisable } from '../commonFunc.js';\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツブロックをコントロール。コンテンツごとに記事を振り分け。(初回のみ)\r\nexport class ContentsBlockControl extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    // storeアクセスでの待機中はローディングCSSを流す\r\n    cssFileAble(\"loading.css\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    cssFileDisable(\"loading.css\");\r\n  }\r\n\r\n  render() {\r\n    var contentesList = store.getState().componentReducer.thisContents;\r\n    const Rows = \r\n     contentesList != undefined &&\r\n      contentesList.article.map((Content, index) => {\r\n        return(\r\n          this.props.Kbn == Content.kbn &&\r\n            <MediaCardForContentsBlock key={index} Content={Content}/>\r\n        );\r\n      });\r\n    \r\n    return(\r\n      // デフォルトでは区分1のコンテンツブロックを表示\r\n      this.props.Kbn == 1 ?\r\n        <div id ={this.props.Kbn} className={DetailShow}>{Rows}</div> :\r\n        <div id ={this.props.Kbn} className={DetailOriginal}>{Rows}</div>\r\n      );\r\n  }\r\n}\r\n   \r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツボックスのアニメーション表示・非表示。\r\nexport const MoveBlockOnClick = (TargetKbn, Caller) => {\r\n  var SiteHedderActive = SiteHedderActiveM.GetterSiteHedderActive();\r\n  \r\n  if (TargetKbn == null && TargetKbn == undefined && Caller == CaseA) {\r\n    return;\r\n  }\r\n\r\n  // ボタンクリックのあったコンテンツタイトルに対応するコンテンツブロックを取得\r\n  var ElementOfContentsBlock = document.getElementById(TargetKbn);\r\n  // コンテンツブロックの表示状態(className)を取得\r\n  var TargetContentsBlockClassName = ElementOfContentsBlock.getAttribute(\"class\");\r\n\r\n  switch (Caller) {\r\n    // CaseA:履歴表示ボタン処理から呼ばれたケース\r\n    case CaseA:\r\n      switch (TargetContentsBlockClassName) {\r\n        case DetailShow:\r\n          SiteHedderActive && ElementOfContentsBlock.setAttribute(\"class\",DetailShowActiveSiteHedder);\r\n          break;\r\n        case DetailShowActiveSiteHedder:\r\n          !SiteHedderActive && ElementOfContentsBlock.setAttribute(\"class\",DetailShow);\r\n          break;\r\n      }\r\n      break;\r\n\r\n    // CaseB:コンテンツタイトルボタン押下処理から呼ばれたケース\r\n    case CaseB:\r\n      switch (TargetContentsBlockClassName) {\r\n        case DetailOriginal:\r\n          SiteHedderActive ? ElementOfContentsBlock.setAttribute(\"class\",DetailShowActiveSiteHedder) : ElementOfContentsBlock.setAttribute(\"class\",DetailShow);         \r\n          break;\r\n        case DetailHide:\r\n          SiteHedderActive ? ElementOfContentsBlock.setAttribute(\"class\",DetailShowActiveSiteHedder) : ElementOfContentsBlock.setAttribute(\"class\",DetailShow);\r\n          break;\r\n        case DetailShow:\r\n          ElementOfContentsBlock.setAttribute(\"class\",DetailHide);\r\n          break;\r\n        case DetailShowActiveSiteHedder:\r\n          ElementOfContentsBlock.setAttribute(\"class\",DetailHide);\r\n          break;\r\n      }\r\n  }\r\n};\r\n\r\nexport default MoveBlockOnClick;","///////////////////////////////////////////////////////////////// \r\n// コンテンツのタイトルを表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\n// コンテンツタイトル部分に表示するアイコン\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\n// アイコンにボタン機能を付ける\r\nimport {Button} from '@material-ui/core';\r\nimport Typography from '@mui/material/Typography';\r\n// コンテンツタイトル部分のスタイル変数\r\nimport {PreClickM} from './showContentsArea.jsx';\r\nimport {ContentsTitleOriginal, TransitionContentsTitleShow} from './showContentsArea.jsx';\r\nimport {ContentTitleUnderBorderOriginal, ContentTitleUnderBorderShow, ContentTitleUnderBorderHide} from './showContentsArea.jsx';\r\n// コンテンツブロックの表示・非表示アニメーションをコントロールする関数。履歴表示ボタン押下時に機能させる。\r\nimport {MoveBlockOnClick} from './showContentsBlock.jsx';\r\n// MoveBlockOnClick関数呼び出し時のパラメータに、自身の関数名を入れる。\r\nimport {CaseB} from './showContentsArea.jsx';\r\n// JSXの中でスタイルをアニメーション化させるパッケージ。履歴表示ボタン押下によるアニメーションで使用する。\r\nimport {Transition} from 'react-transition-group';\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツタイトルのボタンとクリックイベント。クリックイベントで、\r\n// コンテンツタイトルのボックスに下線を引く。\r\nexport class ContentsTitleButtonWithBorder extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedIndex:null\r\n    }\r\n  }\r\n\r\n  onClick(e) {\r\n    // 区分毎のボタンからクリックされた区分を、ボタンのselectedプロパティにに登録する\r\n    this.setState({selectedIndex:e});\r\n    // 前回クリックの有ったタイトルボタンの区分を取得。\r\n    let click = PreClickM.GetterPreClick();\r\n    // 前回ボタンクリックのあったコンテンツタイトルについて、下線が表示してあれば非表示\r\n    if (click != null && click != undefined && click != e) {\r\n      let ElementPreClick = document.getElementById(\"border-\" + click);\r\n      let CheckElementPreClick = ElementPreClick.getAttribute(\"class\");\r\n      switch (CheckElementPreClick) {\r\n        case ContentTitleUnderBorderShow:\r\n          ElementPreClick.classList.replace(ContentTitleUnderBorderShow,ContentTitleUnderBorderHide);\r\n          // 表示していたコンテンツブロックを隠す\r\n          MoveBlockOnClick(click, CaseB);\r\n          break;\r\n        case ContentTitleUnderBorderHide:\r\n          break;\r\n        default:\r\n          ElementPreClick.setAttribute(\"class\",ContentTitleUnderBorderOriginal);\r\n          break;\r\n      }\r\n    }\r\n    // 今回ボタンクリックのあったコンテンツタイトルを取得\r\n    let ElementThisClick = document.getElementById(\"border-\" + e);\r\n    let CheckElementThisClick = ElementThisClick.getAttribute(\"class\");\r\n    //  今回ボタンクリックのあったコンテンツタイトルの下線を表示・非表示にする\r\n    switch (CheckElementThisClick) {\r\n      case ContentTitleUnderBorderShow:\r\n        ElementThisClick.classList.replace(ContentTitleUnderBorderShow,ContentTitleUnderBorderHide);\r\n        break;\r\n      case ContentTitleUnderBorderHide:\r\n        ElementThisClick.classList.replace(ContentTitleUnderBorderHide,ContentTitleUnderBorderShow);\r\n        break;\r\n      case ContentTitleUnderBorderOriginal:\r\n        ElementThisClick.classList.replace(ContentTitleUnderBorderOriginal,ContentTitleUnderBorderShow);\r\n        break;\r\n      default:\r\n        ElementThisClick.setAttribute(\"class\",ContentTitleUnderBorderOriginal);\r\n        break;\r\n    }\r\n    // コンテンツボックスのアニメーション表示・非表示\r\n    MoveBlockOnClick(e, CaseB);\r\n    // 今回のボタンクリックのあった区分を保存\r\n    PreClickM.SetterPreClick(e);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div>\r\n          <Button\r\n            className=\"contents-title-button\"\r\n            selected={this.state.selectedIndex === this.props.index} \r\n            onClick={(e) => this.onClick(this.props.Kbn, e)}>\r\n            <DoubleArrowIcon title={this.props.name} style={{color:\"#FFF\"}}/>\r\n          </Button>\r\n        </div>\r\n        {// デフォルトでは区分1のコンテンツブロックを表示\r\n        this.props.Kbn == 1 ? <div id={\"border-\" + this.props.Kbn} className= {ContentTitleUnderBorderShow}/> : <div id={\"border-\" + this.props.Kbn} className= {ContentTitleUnderBorderOriginal}/>}\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツタイトルブロック。タイトル毎にボタンを配置するコンポー\r\n// ネントを呼び出す。\r\nexport const ContentsTitleBlock = (props) => {\r\n\r\n  const NaviBar = props.Kbns.kbns.map((Kbns,index) => {\r\n    return (\r\n      <Typography key={index} variant=\"h6\" noWrap className=\"name-title\">\r\n        <label>{Kbns.kbnname}</label>\r\n        <ContentsTitleButtonWithBorder Kbn={Kbns.kbn} index={index}/>\r\n      </Typography>\r\n    );\r\n  });\r\n\r\n  return( \r\n    <Transition in={props.mount} timeout={400}>\r\n      {(state) => \r\n      <div id=\"contents-title\" className={ContentsTitleOriginal} style={TransitionContentsTitleShow[state]}>\r\n        {NaviBar}\r\n      </div>\r\n      }\r\n    </Transition>\r\n  );\r\n}\r\n\r\nexport default ContentsTitleBlock;","\r\nimport {stringToNumber} from '../commonFunc';\r\nconst KubunListJsonFileName = \"kbns.json\";\r\nconst krawlingListJsonFileName = \"crawlingList.json\";\r\nconst KbnListJson = require('../data/kbns/kbns.json');\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分リスト \r\n///////////////////////////////////////////////////////////////// \r\nexport class KbnList {\r\n\tconstructor() {\r\n\t\tthis.KbnList = KbnListJson;\r\n\t}\r\n  \r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 区分リストのゲッター\r\n\tgetKbnList() {\r\n\t\treturn this.KbnList;\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 区分リスト新規登録処理\r\n\tsetNewKubunList = (changedValueKubun, changedValueKubunName, changedValueComment) => {    \r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t// 区分の半角変換と数値変換処理\r\n\t\t\tvar str = \"\";\r\n\t\t\tfor(let i=0; i < changedValueKubun.length; i++) {\r\n\t\t\t\tstr += String.fromCharCode(changedValueKubun.charCodeAt(i) - 0xFEE0);\r\n\t\t\t}\r\n\t\t\t// 数値変換の処理結果がNan=数値以外であればエラー\r\n\t\t\tif(isNaN(Number(str))) {\r\n\t\t\t\tif(isNaN(Number(changedValueKubun))) {\r\n\t\t\t\t\talert(\"区分には数値を入力してください!\");\r\n\t\t\t\t\tthrow \"(区分リスト新規登録処理)区分入力エラー\"; \r\n\t\t\t\t} else {\r\n\t\t\t\t\tchangedValueKubun = Number(changedValueKubun);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t\tchangedValueKubun = Number(str);            \r\n\t\t\t}\r\n\t\t\t// findindexで検索結果0件の場合は-1を返す。区分リストの追加登録を行う。\r\n\t\t\tvar target = this.KbnList.kbns.findIndex((v) => v.kbn === changedValueKubun);\r\n\t\t\tif(target === -1) {\r\n\t\t\t\t// オブジェクトにデータを追加\r\n\t\t\t\tvar newKubunList = {};\r\n\t\t\t\tnewKubunList.kbn = changedValueKubun;\r\n\t\t\t\tnewKubunList.kbnname = changedValueKubunName;\r\n\t\t\t\tnewKubunList.comment = changedValueComment;\r\n\t\t\t\tthis.KbnList.kbns.push(newKubunList);\r\n\t\t\t\t// fetch処理\r\n\t\t\t\tfetch(\"/addNewKubunList\", {\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\t\theders: {\r\n\t\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tfileName:KubunListJsonFileName,\r\n\t\t\t\t\t\tkbn:changedValueKubun,\r\n\t\t\t\t\t\tkbnname:changedValueKubunName,\r\n\t\t\t\t\t\tcomment:changedValueComment,\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(response) {\r\n\t\t\t\t\tif(response.ok) {\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(responseJson) {\r\n\t\t\t\t\tresolve(responseJson); // jsonオブジェクトを返却する \r\n\t\t\t\t\tif(responseJson.flag) {\r\n\t\t\t\t\t\talert(\"区分を追加しました!!\");\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\talert(\"区分リストの追加に失敗しました!\");\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t\treject(false);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\talert(\"入力した区分リストは既に存在します!\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 区分リスト更新処理\r\n\tsetEditKubunList = (props) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar result = {};\r\n\t\t\tvar kbnBefore = props.before[0].kbn;\r\n\t\t\tvar kbnnameBefore = props.before[0].kbnname;\r\n\t\t\tvar commentBefore = props.before[0].comment;\r\n\t\t\tvar kbnAfter = props.after[0].kbn;\r\n\t\t\tvar kbnnameAfter = props.after[0].kbnname;\r\n\t\t\tvar commentAfter = props.after[0].comment;\r\n\t\t\t// 区分の半角と数値を変換する外部メソッドを呼び出す\r\n\t\t\t// stringToNumber:返却値:{flag:\"変換成功、失敗フラグ, res:\"\"変換後の値\"}\r\n\t\t\tresult = stringToNumber(kbnAfter);\r\n\t\t\tkbnAfter = result[\"res\"];\r\n\t\t\t// 編集後の値についてnullチェック\r\n\t\t\tif(kbnnameAfter == undefined || commentAfter == undefined || kbnnameAfter == \"\" || commentAfter == \"\") {\r\n\t\t\t\talert(\"全ての項目を入力してください!\");\r\n\t\t\t\tthrow \"全ての項目を入力してください!\";\r\n\t\t\t}\r\n\t\t\t// 区分の変換結果がtrueの場合のみ、後続の処理を続行する\r\n\t\t\tif(!result.flag) {\r\n\t\t\t\talert(\"区分は数値を入力してください。\");\t\t\t\t\t\r\n\t\t\t\treject(result);\r\n\t\t\t}\r\n\t\t\t// findindexで検索結果0件の場合は-1を返す。クローリング情報の更新は不可。\r\n\t\t\tvar target = this.KbnList.kbns.findIndex((v) => v.kbn === kbnBefore);\r\n\t\t\tif(target === -1) {\r\n\t\t\t\talert(\"区分リストの編集に失敗しました!該当の区分が見つかりません!\");\r\n\t\t\t\tresult.flag = false;\r\n\t\t\t\treject(result);\r\n\t\t\t} else {\r\n\t\t\t\tvar target = this.KbnList.kbns.findIndex((v) => v.kbn === kbnAfter);\r\n\t\t\t\tif(target === -1) {\r\n\t\t\t\t\talert(\"区分の値は更新できません。\");\r\n\t\t\t\t\tresult.flag = false;\r\n\t\t\t\t\treject(result);\r\n\t\t\t\t}\r\n\t\t\t\t// this.KbnList.kbns[target].kbn = kbnAfter;\t区分の変更は不可。\r\n\t\t\t\tthis.KbnList.kbns[target].kbnname = kbnnameAfter;\r\n\t\t\t\tthis.KbnList.kbns[target].comment = commentAfter;\r\n\t\t\t}\r\n\t\t\t// fetch処理\r\n\t\t\tfetch(\"/setEditKubunList\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\theders: {\r\n\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\"kubunFileName\":KubunListJsonFileName,\r\n\t\t\t\t\t\"krawlingListFileName\":krawlingListJsonFileName,\r\n\t\t\t\t\t\"kbnBefore\":kbnBefore,\r\n\t\t\t\t\t\"kbnnameBefore\":kbnnameBefore,\r\n\t\t\t\t\t\"commentBefore\":commentBefore,\r\n\t\t\t\t\t\"kbnAfter\":kbnAfter,\r\n\t\t\t\t\t\"kbnnameAfter\":kbnnameAfter,\r\n\t\t\t\t\t\"commentAfter\":commentAfter,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\t\treject(result);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((responseJson) => {\r\n\t\t\t\tresolve(responseJson);\r\n\t\t\t\tif(responseJson.flag) {\r\n\t\t\t\t\talert(\"区分リストを編集しました!\");\r\n\t\t\t\t\tresolve(result);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(\"区分リストの削除に失敗しました!\");\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\treject(result);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n  \r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 区分リストデータ削除処理\r\n\tsetDeleteKubunList = (props) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t// 削除対象の区分を代入\r\n\t\t\tvar targetKubun = props[\"delete\"][0].kbn;\r\n\t\t\t// fetch処理\r\n\t\t\tfetch(\"/setDeleteKubunList\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\theders: {\r\n\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\"fileName\":KubunListJsonFileName,\r\n\t\t\t\t\t\"targetKubun\":targetKubun,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\t\treject(false);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((responseJson) => {\r\n\t\t\t\tif(responseJson.flag) {\r\n\t\t\t\t\talert(\"区分リストを削除しました!\");\r\n\t\t\t\t\tresolve(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(\"区分リストの削除に失敗しました!\");\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\treject(false);\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n}","const CrawlingListJson = require('../data/crawling/crawlingList.json');\r\nconst CrawlingListJsonFileName = \"crawlingList.json\";\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリングリスト\r\n///////////////////////////////////////////////////////////////// \r\nexport class CrawlingList {\r\n\tconstructor() {\r\n\t\ttry {\r\n\t\t\tthis.CrawlingList = CrawlingListJson\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tconsole.error(\"make CrawlingList error occarred.\");\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// クローリングリストのゲッター\r\n\tgetCrawlingList() {\r\n\t\ttry { \r\n\t\t\tthis.CrawlingList = require(\"../data/crawling\" + \"/\" + CrawlingListJsonFileName);\r\n\t\t\treturn this.CrawlingList;\r\n\t\t} catch(error) {\r\n\t\t\tconsole.error(\"make ContentsList error occarred.\");\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n    \r\n\t///////////////////////////////////////////////////////////////// \r\n\t// クローリングリスト新規登録処理\r\n\taddNewCrawlingList = (props) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\t// オブジェクトにデータを追加\r\n\t\t\t\tvar newCrawlingList = {};\r\n\t\t\t\tnewCrawlingList[\"kbn\"] = props.kbn;\r\n\t\t\t\tnewCrawlingList[\"kbnname\"] = props.kbnname;\r\n\t\t\t\tnewCrawlingList[\"jigyosyaid\"] = props.jigyosyaid;\r\n\t\t\t\tnewCrawlingList[\"name\"] = props.name;\r\n\t\t\t\tnewCrawlingList[\"crawlingurl\"] = props.crawlingurl;\r\n\t\t\t\tnewCrawlingList[\"xpathTitle\"] = props.xpathTitle.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\tnewCrawlingList[\"xpathLink\"] = props.xpathLink.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\tnewCrawlingList[\"xpathImage\"] = props.xpathImage.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\t// 編集後の値についてnullチェック\r\n\t\t\t\tif(\r\n\t\t\t\t\tnewCrawlingList[\"kbn\"]  == \"\" ||\r\n\t\t\t\t\tnewCrawlingList[\"jigyosyaid\"] == \"\" ||\r\n\t\t\t\t\tnewCrawlingList[\"name\"] == \"\" ||\r\n\t\t\t\t\tnewCrawlingList[\"crawlingurl\"] == \"\" ||\r\n\t\t\t\t\tnewCrawlingList[\"xpathTitle\"] == \"\" ||\r\n\t\t\t\t\tnewCrawlingList[\"xpathLink\"] == \"\" ||\r\n\t\t\t\t\tnewCrawlingList[\"xpathImage\"] == \"\"\r\n\t\t\t\t) {\r\n\t\t\t\t\talert(\"全ての項目を入力してください!\");\r\n\t\t\t\t\tthrow \"全ての項目を入力してください!\";\r\n\t\t\t\t}\r\n\t\t\t\t// クローリングオブジェクトにデータを追加\r\n\t\t\t\tthis.CrawlingList.crawling.push(newCrawlingList);\r\n\t\t\t\t// fetch処理\r\n\t\t\t\tfetch(\"/addNewCrawlingList\", {\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\t\theders: {\r\n\t\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tfileName:CrawlingListJsonFileName,              \r\n\t\t\t\t\t\tkbn:newCrawlingList[\"kbn\"],\r\n\t\t\t\t\t\tkbnname:newCrawlingList[\"kbnname\"],\r\n\t\t\t\t\t\tjigyosyaid:newCrawlingList[\"jigyosyaid\"],\r\n\t\t\t\t\t\tname:newCrawlingList[\"name\"],\r\n\t\t\t\t\t\tcrawlingurl:newCrawlingList[\"crawlingurl\"],\r\n\t\t\t\t\t\txpathTitle:newCrawlingList[\"xpathTitle\"],\r\n\t\t\t\t\t\txpathLink:newCrawlingList[\"xpathLink\"],\r\n\t\t\t\t\t\txpathImage:newCrawlingList[\"xpathImage\"]\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(response) {\r\n\t\t\t\t\tif(response.ok) {\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(responseJson) {\r\n\t\t\t\t\tresolve(responseJson); // jsonオブジェクトを返却する \r\n\t\t\t\t\tif(responseJson.flag) {\r\n\t\t\t\t\t\talert(\"クローリング対象を追加しました!\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} catch(error) {\r\n\t\t\t\talert(\"クローリング対象の追加に失敗しました!\");\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\treject(false);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// クローリングリスト更新処理\r\n\tsetUpdateCrawlingList = (item, changedCrawlingUrl, changedCrawlingXpathTitle, changedValueCrawlingXpathLink, changedValueCrawlingXpathImage) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tvar target = this.CrawlingList.crawling.findIndex((v) => v.kbn === item.kbn && v.jigyosyaid === item.jigyosyaid);\r\n\t\t\t\t// findindexで検索結果0件の場合は-1を返す。クローリング情報の更新は不可。\r\n\t\t\t\tif(target === -1) {\r\n\t\t\t\t\talert(\"クローリングの設定を更新できませんでした!\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.CrawlingList.crawling[target].crawlingurl = changedCrawlingUrl;\r\n\t\t\t\t\tthis.CrawlingList.crawling[target].xpathTitle = changedCrawlingXpathTitle.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\t\tthis.CrawlingList.crawling[target].xpathLink = changedValueCrawlingXpathLink.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\t\tthis.CrawlingList.crawling[target].xpathImage = changedValueCrawlingXpathImage.replace(\"\\\"\",\"\\'\").replace(\"\\\"\",\"\\'\");\r\n\t\t\t\t\t// fetch処理\r\n\t\t\t\t\tfetch(\"/api\", {\r\n\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\t\t\theders: {\r\n\t\t\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t\tfileName:CrawlingListJsonFileName,\r\n\t\t\t\t\t\t\tkbn:item.kbn,\r\n\t\t\t\t\t\t\tjigyosyaid:item.jigyosyaid,\r\n\t\t\t\t\t\t\tcrawlingurl:this.CrawlingList.crawling[target].crawlingurl,\r\n\t\t\t\t\t\t\txpathTitle:this.CrawlingList.crawling[target].xpathTitle,\r\n\t\t\t\t\t\t\txpathLink:this.CrawlingList.crawling[target].xpathLink,\r\n\t\t\t\t\t\t\txpathImage:this.CrawlingList.crawling[target].xpathImage,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(function(response) {\r\n\t\t\t\t\t\tif(response.ok) {\r\n\t\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(function(responseJson) {\r\n\t\t\t\t\t\tif(responseJson.flag) {\r\n\t\t\t\t\t\t\talert(\"クローリングの設定を更新しました!\");\r\n\t\t\t\t\t\t\tresolve(responseJson);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} catch(error) {\r\n\t\t\t\talert(\"ローカルファイルの更新に失敗しました!該当の区分が見つかりませんでした!\");\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\treject({flag:false});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n  \r\n\t///////////////////////////////////////////////////////////////// \r\n\t// クロール対象データ削除処理\r\n\tsetDeleteCrawlingList = (props) => {\r\n\t\t// 削除対象の区分を代入\r\n\t\tvar targetKubun = props[\"delete\"][0].kbn;\r\n\t\tvar targetJigyosyaid = props[\"delete\"][0].jigyosyaid;\r\n\t\t// fetch処理\r\n\t\tfetch(\"/setDeleteCrawlingList\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tmode: \"no-cors\",\r\n\t\t\theders: {\r\n\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t'Accept':'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"fileName\":CrawlingListJsonFileName,\r\n\t\t\t\t\"targetKubun\":targetKubun,\r\n\t\t\t\t\"targetJigyosyaid\":targetJigyosyaid\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(function(response) {\r\n\t\t\tif(response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else {\r\n\t\t\t\talert(\"http status is: \" + response.status);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((responseJson) => {\r\n\t\t\tif(responseJson.flag) {\r\n\t\t\t\talert(\"クロール対象データを削除しました!\");\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\talert(\"クロール対象データの削除に失敗しました!\");\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n\t}\r\n  \r\n\t///////////////////////////////////////////////////////////////// \r\n\t// クローリングプログラム実行関数\r\n\texecCrawling() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t// fetch処理\r\n\t\t\tfetch(\"/py\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\theders: {\r\n\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tfileName:CrawlingListJsonFileName,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(function(responseJson) {\r\n\t\t\t\tresolve(responseJson.flag); // true\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.error(\"<crawlingList.js> execCrawling occared eerror.\");\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\treject(false);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n  ","///////////////////////////////////////////////////////////////// \n// メインブロッククラス\nimport React from \"react\";\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router';\nimport {ContentsBlockControl} from './showContentsBlock.jsx';\nimport {ContentsTitleBlock} from './showContentsTitle.jsx';\n// import {OnHedderBox} from './show/showOnHedderBox.jsx';\nimport {KbnList} from '../actions/kubunList.js';\nimport {CrawlingList} from '../actions/crawlingList.js';\nimport cssFileControl from '../commonFunc.js';\n\n///////////////////////////////////////////////////////////////// \n// 定数定義エリア\n// ヘッダー部(背景)\nexport const ImageSiteHeaderOriginal =\"imageSiteHeaderOriginal\";\n// ヘッダー部(履歴表示ボタン)\nexport const SiteHedderButtonOriginal = \"siteHedderButtonOriginal\";\nexport const SiteHedderButtonShow = \"siteHedderButtonShow\";\n// 履歴表示ボックスのスタイル\nexport const CacheList = \"cacheList\";\n// コンテンツタイトルボックス\nexport const ContentsTitleOriginal =\"contentsTitleOriginal\";\n// コンテンツタイトルボックスの下線\nexport const ContentTitleUnderBorderOriginal =\"contentTitleUnderBorderOriginal\";\nexport const ContentTitleUnderBorderShow =\"contentTitleUnderBorderShow\";\nexport const ContentTitleUnderBorderHide =\"contentTitleUnderBorderHide\";\n// コンテンツボックス\nexport const DetailOriginal = \"detail\";\nexport const DetailShow = \"detailShow\";\nexport const DetailHide =\"detailHide\";\nexport const DetailShowActiveSiteHedder = \"detailShowActiveSiteHedder\";\n// MoveBlockOnClick関数呼び出し時のパラメータに、自身の関数名を入れる。\nexport const CaseA = \"OnHedderBox\";\nexport const CaseB = \"ContentsTitleButtonWithBorder\";\n \n///////////////////////////////////////////////////////////////// \n// react-transition-groupで使用するスタイル\n// showOnHedderBox.jsx ヘッダー部で使用。\n// 2021/12/10 廃止\nexport const TransitionImageSiteHeaderShow = {\n  entering:{\n    height:\"200px\"\n  },\n  entered:{\n    height:\"200px\"\n  },\n  exiting: {\n    height:\"150px\"\n  },\n  exited: {\n    height:\"150px\"\n  }\n};\nexport const TransitionCacheList = {\n  entering:{\n    opacity:\"0\"\n  },\n  entered:{\n    opacity:\"1\"\n  },\n  exiting: {\n    opacity:\"0\"\n  },\n  exited: {\n    opacity:\"0\"\n  }\n}\n// showContentsTitle.jsx コンテンツタイトル部で使用。\nexport const TransitionContentsTitleShow = {\n  entering:{\n    transform:\"translateY(120%)\"\n  },\n  entered:{\n    transform:\"translateY(120%)\"\n  },\n  exiting: {\n    transform:\"translateY(0%)\"\n  },\n  exited: {\n    transform:\"translateY(0%)\"\n  }\n};\n\n///////////////////////////////////////////////////////////////// \n// 区分リストの区分が入る。前回クリックしたタイトルボタンを保持する為に使用。\n// デフォルトは区分1のタイトルボタンを保持させる。\nexport class PreClickMortion {\n  constructor() {\n    this.PreClick = null;\n  }\n  SetterPreClick(param) {\n    this.PreClick = param;\n  }\n  GetterPreClick() {\n    return this.PreClick;\n  }\n}\n\n///////////////////////////////////////////////////////////////// \n// コンテンツボックスが表示されている場合、履歴表示ボタンクリック時に\n// コンテンツボックスを断下げする為に使用。\nexport class SiteHedderActiveMortion {\n  constructor () {\n    this.SiteHedderActive = false;\n  }\n\n  SetterSiteHedderActive(param) { \n    this.SiteHedderActive = param;\n  }\n  GetterSiteHedderActive() {\n    return this.SiteHedderActive;\n  }\n}\n\n///////////////////////////////////////////////////////////////// \n// インスタンス生成エリア\n  export const SiteHedderActiveM = new SiteHedderActiveMortion(SiteHedderActiveMortion);\n  export const PreClickM = new PreClickMortion(PreClickMortion);\n  // export const Contents = new ContentsList(ContentsList);  index.jsxへ移行。\n  export const Crawlings = new CrawlingList(CrawlingList);\n  export const Kbns = new KbnList(KbnList);\n\n///////////////////////////////////////////////////////////////// \n// メインブロックをコントロール。\nexport class MainBlockControl extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const ContentsRows = this.props.Kbns.kbns.map((List, index) => {\n      return(\n        <ContentsBlockControl key={index} Kbn ={List.kbn}/>\n      );    \n    });\n    return(\n      <div className=\"mainBlockControl\">\n        <div>{ContentsRows}</div>\n      </div>\n    );\n  }\n}\n\n///////////////////////////////////////////////////////////////// \n// ルートコンポーネント。画面を開いたときに最初に描画される。\nexport class ShowContentsArea extends React.Component{\n  constructor(props) {\n    super(props);\n    this.KbnList = Kbns.getKbnList();\n    this.state = {\n      mount:false,\n    }\n  }\n\n  componentWillMount() {\n    // メイン画面のCSSファイル解除\n    cssFileControl(\"showCrawlSetting.css\", \"App.css\");\n  }\n\n  // HedderMortionAcive(){\n  //   this.state.mount ? this.setState({mount:false}) : this.setState({mount:true});\n  // }\n\n  render() {\n    return (\n      <div>\n        {/* <OnHedderBox HedderMortionAcive = {(e)=>this.HedderMortionAcive(this.state.mount, e)} mount = {this.state.mount}/> */}\n        <ContentsTitleBlock Kbns = {this.KbnList} mount = {this.state.mount}/>\n        <MainBlockControl Kbns = {this.KbnList} mount = {this.state.mount}/>\n      </div>\n    );\n  }\n}\nexport default connect(null, { push })(ShowContentsArea);","/////////////////////////////////////////////////////////////////\r\n// MaterialTable表示\r\n/////////////////////////////////////////////////////////////////\r\nimport React, { forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\n// MaterialTableに使用するアイコンをインポート\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Save from '@material-ui/icons/Save';\r\n\r\n// MaterialTableに使用するアイコンを定数化\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    Save: forwardRef((props, ref) => <Save {...props} ref={ref} />)\r\n  };\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// MaterialTableを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport default function CrawlSettingMaterialTable(props) {\r\n  /////////////////////////////////////////////////////////////////\r\n  // クローリングセット。MaterialTableのeditable属性\r\n  const editableCrawlSetting = \r\n    <MaterialTable\r\n      title=\"実行結果セット\"\r\n      columns={props.columns}\r\n      data={props.data}\r\n      options={{\r\n        showTitle: true,\r\n        search: true,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0,  fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      icons={tableIcons}\r\n      actions={[\r\n        {\r\n          icon:Edit,\r\n          tooltip:\"Edt your's settings.\",\r\n          cellStyle:{fontSize: \"0.8em\", width: \"10%\", minWidth: \"10%\"},\r\n          headerStyle:{fontWeight: \"bold\",},\r\n          onClick:(e, rowData) => {\r\n            props.modalWrapperFlag();\r\n            props.setItem(rowData);\r\n            props.setSelectedCrawling(rowData);\r\n          }\r\n        }\r\n      ]}\r\n    />\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  // MaterialTableの戻り値\r\n  return(\r\n    <div className=\"materialCrawlSetting\" style={{ maxWidth:\"80%\", padding:\"0.5em\", fontSize:\"10pt\"}}>\r\n      {editableCrawlSetting}\r\n    </div>\r\n  );\r\n}\r\n","///////////////////////////////////////////////////////////////// \r\n// モーダル画面を表示させるためのラッパークラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React, { useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n// クローリング詳細設定のモーダル画面で使用するボタンアイコン\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// モーダル表示させるためのラッパークラス\r\nexport default function ModalWrapper(props) {\r\n  return(\r\n    <Modal\r\n      open={props.open}\r\n      onClose={(e) => props.modalWrapperFlag(e, false)}\r\n      style={{top: \"5%\", width: \"50%\", left: \"20%\", height:\"70%\"}}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      onRequestClose={(e) => props.modalWrapperFlag(e, false)}\r\n    >\r\n      {props.content}\r\n    </Modal>\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 実行結果画面。クローリング設定詳細画面(モーダル表示する)\r\nexport function KrawlSettingInModal(props) {\r\n    const [changedValueCrawlingUrl, setValueCrawlingUrl] = useState(props.selectedCrawling.crawlingurl);\r\n    const [changedValueCrawlingXpathTitle, setValueCrawlingXpathTitle] = useState(props.selectedCrawling.xpathTitle);\r\n    const [changedValueCrawlingXpathLink, setValueCrawlingXpathLink] = useState(props.selectedCrawling.xpathLink);\r\n    const [changedValueCrawlingXpathImage, setValueCrawlingXpathImage] = useState(props.selectedCrawling.xpathImage);\r\n\r\n    // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n    // クローリング情報を更新。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n    const onClick = (e) => {\r\n      if (e == true) {\r\n        props.callUpdateCrawlingList(\r\n          props.selectedCrawling,\r\n          changedValueCrawlingUrl,\r\n          changedValueCrawlingXpathTitle,\r\n          changedValueCrawlingXpathLink,\r\n          changedValueCrawlingXpathImage\r\n        )\r\n      } else {\r\n        // CLOSEボタン押下処理\r\n        props.modalWrapperFlag(e);\r\n      }\r\n    };\r\n  \r\n    return(\r\n      <Fade in={props.open}>\r\n        <Paper className={\"modalActive\"}>\r\n          <Typography style={{padding: \"0.5em\"}}>\r\n            <div style={{margin: 8}}>\r\n              <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>クロール設定詳細</label>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"区分\"\r\n                defaultValue={props.selectedItem.kbn}                \r\n                style={{width: \"10%\", margin: 8, fontSize:\"midium\"}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n              <TextField\r\n                label=\"区分名称\"\r\n                defaultValue={props.selectedItem.kbnname}                \r\n                style={{width: \"20%\", margin: 8, fontSize:\"midium\"}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n              <TextField\r\n                  label=\"サイトID\"\r\n                  defaultValue={props.selectedItem.jigyosyaid}                \r\n                  style={{width: \"10%\", margin: 8, fontSize:\"midium\"}}\r\n                  rows={1}\r\n                  disabled=\"false\"\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"サイト名称\"\r\n                  defaultValue={props.selectedItem.name}                \r\n                  style={{width: \"20%\", margin: 8, fontSize:\"midium\"}}\r\n                  rows={1}\r\n                  disabled=\"false\"\r\n                ></TextField>\r\n              <TextField\r\n                  label=\"記事ID\"\r\n                  defaultValue={props.selectedItem.kiziid}                \r\n                  style={{width: \"21.5%\", margin: 8, fontSize:\"midium\"}}\r\n                  rows={1}\r\n                  disabled=\"false\"\r\n                ></TextField>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                    label=\"記事タイトル\"\r\n                    defaultValue={props.selectedItem.title}\r\n                    style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n                    fullWidth  \r\n                    rows={1}\r\n                    disabled=\"false\"\r\n              ></TextField>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"リンク\"\r\n                defaultValue={props.selectedItem.source}\r\n                style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n                fullWidth\r\n                rows={1}\r\n                disabled=\"false\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"イメージファイル\"\r\n                defaultValue={props.selectedItem.image}\r\n                style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n                fullWidth\r\n                rows={1}\r\n                disabled=\"false\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"サイトのURL\"\r\n                defaultValue={props.selectedCrawling.crawlingurl}\r\n                style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingUrl(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"タイトルのXpath\"\r\n                defaultValue={props.selectedCrawling.xpathTitle}\r\n                style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingXpathTitle(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"リンクのXpath\"\r\n                defaultValue={props.selectedCrawling.xpathLink}\r\n                style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingXpathLink(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"イメージファイルのXpath\"\r\n                defaultValue={props.selectedCrawling.xpathImage}\r\n                style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n                fullWidth\r\n                rows={1}\r\n                onChange={(e)=> setValueCrawlingXpathImage(e.target.value)}\r\n              />\r\n            </div>\r\n          </Typography>\r\n          <Grid container style={{fontSize:\"midium\"}} justify=\"flex-end\" direction=\"row\">\r\n            <Grid item>\r\n              <Button\r\n                style={{margin: \"1.5em\", fontSize:\"midium\"}}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={(e)=>onClick(true, e)}\r\n                startIcon={<AddCircleIcon/>}\r\n              >\r\n              更新\r\n              </Button>\r\n              <Button\r\n                style={{margin: \"1.5em\", fontSize:\"midium\"}}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={(e)=>onClick(false, e)}\r\n                startIcon={<CancelIcon/>}\r\n              >\r\n              閉じる\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Fade>\r\n    );\r\n  }\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分設定画面。クローリング設定詳細画面(モーダル表示する)\r\nexport function ShortKrawlSettingInModal(props) {\r\n  const [changedValueCrawlingUrl, setValueCrawlingUrl] = useState(props.selectedItem.crawlingurl);\r\n  const [changedValueCrawlingXpathTitle, setValueCrawlingXpathTitle] = useState(props.selectedItem.xpathTitle);\r\n  const [changedValueCrawlingXpathLink, setValueCrawlingXpathLink] = useState(props.selectedItem.xpathLink);\r\n  const [changedValueCrawlingXpathImage, setValueCrawlingXpathImage] = useState(props.selectedItem.xpathImage);\r\n\r\n  // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n  // クローリング情報を更新。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n  const onClick = (e) => {\r\n    if (e == true) {\r\n      props.callUpdateCrawlingList(\r\n        props.selectedItem,\r\n        changedValueCrawlingUrl,\r\n        changedValueCrawlingXpathTitle,\r\n        changedValueCrawlingXpathLink,\r\n        changedValueCrawlingXpathImage\r\n      )\r\n    } else {\r\n      // CLOSEボタン押下処理\r\n      props.setModalIndex(0);\r\n      props.modalWrapperFlag(e);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Fade in={props.open}>\r\n      <Paper className={\"modalActive\"}>\r\n        <Typography style={{padding: \"0.5em\"}}>\r\n          <div style={{margin: 8}}>\r\n            <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>クロール設定詳細</label>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"区分\"\r\n              defaultValue={props.selectedItem.kbn}                \r\n              style={{width: \"10%\", margin: 8, fontSize:\"midium\"}}\r\n              rows={1}\r\n              disabled=\"false\"\r\n            ></TextField>\r\n            <TextField\r\n              label=\"区分名称\"\r\n              defaultValue={props.selectedItem.kbnname}                \r\n              style={{width: \"20%\",　margin: 8, fontSize:\"midium\"}}\r\n              rows={1}\r\n              disabled=\"false\"\r\n            ></TextField>\r\n            <TextField\r\n                label=\"サイトID\"\r\n                defaultValue={props.selectedItem.jigyosyaid}                \r\n                style={{width: \"10%\", margin: 8, fontSize:\"midium\"}}\r\n                rows={1}\r\n                disabled=\"false\"                \r\n              ></TextField>\r\n              <TextField\r\n                label=\"サイト名称\"\r\n                defaultValue={props.selectedItem.name}                \r\n                style={{width: \"20%\", margin: 8, fontSize:\"midium\"}}\r\n                rows={1}\r\n                disabled=\"false\"\r\n              ></TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"サイトのURL\"\r\n              defaultValue={props.selectedItem.crawlingurl}\r\n              style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingUrl(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"タイトルのXpath\"\r\n              defaultValue={props.selectedItem.xpathTitle}\r\n              style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathTitle(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"リンクのXpath\"\r\n              defaultValue={props.selectedItem.xpathLink}\r\n              style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathLink(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"イメージファイルのXpath\"\r\n              defaultValue={props.selectedItem.xpathImage}\r\n              style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathImage(e.target.value)}\r\n            />\r\n          </div>\r\n        </Typography>\r\n        <Grid container style={{fontSize:\"midium\"}} justify=\"flex-end\" direction=\"row\">\r\n          <Grid item>\r\n            <Button\r\n              style={{margin: \"1.5em\", fontSize:\"midium\"}}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(true, e)}\r\n              startIcon={<AddCircleIcon/>}\r\n            >\r\n            更新\r\n            </Button>\r\n            <Button\r\n              style={{margin: \"1.5em\", fontSize:\"midium\"}}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(false, e)}\r\n              startIcon={<CancelIcon/>}\r\n            >\r\n            閉じる\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリング設定を新規登録する画面(モーダル表示する)\r\nexport function RegistKrawlSettingInModal(props) {\r\n  const [changedValueKubun, setValueKubun] = useState(\"\");\r\n  const [changedValueKubunName, setValueKubunName] = useState(\"区分名称\");\r\n  const [changedValueJigyosyaid, setValueJigyosyaid] = useState(\"\");\r\n  const [changedValueName, setValueName] = useState(\"\");\r\n  const [changedValueCrawlingUrl, setValueCrawlingUrl] = useState(\"\");\r\n  const [changedValueCrawlingXpathTitle, setValueCrawlingXpathTitle] = useState(\"\");\r\n  const [changedValueCrawlingXpathLink, setValueCrawlingXpathLink] = useState(\"\");\r\n  const [changedValueCrawlingXpathImage, setValueCrawlingXpathImage] = useState(\"\");\r\n\r\n  const kbns = props.kbns;\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分セレクトボックスで選択した区分の名称を、区分名称欄に自動入力する処理\r\n  const callSetKbnNameLabel = (targetValue) => {\r\n    var index = kbns[\"kbns\"].findIndex((v) => v.kbn === targetValue);\r\n\r\n    if(index != -1) {\r\n      var label = kbns[\"kbns\"][index].kbnname;\r\n      setValueKubunName(label);\r\n      setValueKubun(targetValue);\r\n    }\r\n  };\r\n\r\n  // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n  // クローリング情報を更新。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n  const onClick = (e) => {\r\n    if (e == true) {\r\n      var paramObj = {};\r\n      paramObj[\"kbn\"] = changedValueKubun;\r\n      paramObj[\"kbnname\"] = changedValueKubunName;\r\n      paramObj[\"jigyosyaid\"] = changedValueJigyosyaid;\r\n      paramObj[\"name\"] = changedValueName;\r\n      paramObj[\"crawlingurl\"] = changedValueCrawlingUrl;\r\n      paramObj[\"xpathTitle\"] = changedValueCrawlingXpathTitle;\r\n      paramObj[\"xpathLink\"] = changedValueCrawlingXpathLink;\r\n      paramObj[\"xpathImage\"] = changedValueCrawlingXpathImage;\r\n\r\n      // 親コンポーネントのメソッド呼び出し\r\n      props.callNewCrawlingList(paramObj);\r\n\r\n    } else {\r\n      // CLOSEボタン押下処理\r\n      props.setModalIndex(0);\r\n      props.modalWrapperFlag(e);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Fade in={props.open}>\r\n      <Paper className={\"modalActive\"}>\r\n        <Typography style={{padding: \"0.5em\"}}>\r\n          <div style={{margin: 8}}>\r\n            <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>クロール設定登録</label>\r\n          </div>\r\n          <div>\r\n            <FormControl id=\"select-paperDiv\">\r\n              <InputLabel id=\"select-paperDiv-label\">区分</InputLabel>\r\n              <Select\r\n                labelId=\"select-paperDiv-label\"\r\n                className=\"select-paperDiv\"\r\n                value={changedValueKubun}\r\n                style={{width: \"100%\", margin: 8, fontSize:\"midium\"}}\r\n                onChange={(e)=> callSetKbnNameLabel(e.target.value)}\r\n              >\r\n                {props.kbns[\"kbns\"].map((item, key) => {\r\n                  return(\r\n                    <MenuItem value={item.kbn} key={key}>{item.kbn}</MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              // label=\"区分名称\"\r\n              label={changedValueKubunName}\r\n              style={{width: \"20%\",　margin: 8, fontSize:\"midium\"}}\r\n              rows={1}\r\n              disabled=\"false\"\r\n            ></TextField>\r\n            <TextField\r\n                label=\"事業者ID\"\r\n                defaultValue={changedValueJigyosyaid}\r\n                style={{width: \"10%\", margin: 8, fontSize:\"midium\"}}\r\n                rows={1}\r\n                onChange={(e)=> setValueJigyosyaid(e.target.value)}\r\n            ></TextField>\r\n            <TextField\r\n              label=\"事業者名\"\r\n              defaultValue={changedValueName}\r\n              style={{width: \"20%\", margin: 8, fontSize:\"midium\"}}\r\n              rows={1}\r\n              onChange={(e)=> setValueName(e.target.value)}\r\n            ></TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"サイトのURL\"\r\n              defaultValue={changedValueCrawlingUrl}\r\n              style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingUrl(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"タイトルのXpath\"\r\n              defaultValue={changedValueCrawlingXpathTitle}\r\n              style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathTitle(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"リンクのXpath\"\r\n              defaultValue={changedValueCrawlingXpathLink}\r\n              style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathLink(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"イメージファイルのXpath\"\r\n              defaultValue={changedValueCrawlingXpathImage}\r\n              style={{ width: \"90%\", margin: 8, fontSize:\"midium\"}}\r\n              fullWidth\r\n              rows={1}\r\n              onChange={(e)=> setValueCrawlingXpathImage(e.target.value)}\r\n            />\r\n          </div>\r\n        </Typography>\r\n        <Grid container style={{fontSize:\"midium\"}} justify=\"flex-end\" direction=\"row\">\r\n          <Grid item>\r\n            <Button\r\n              style={{margin: \"1.5em\", fontSize:\"midium\"}}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(true)}\r\n              startIcon={<AddCircleIcon/>}\r\n            >\r\n            登録\r\n            </Button>\r\n            <Button\r\n              style={{margin: \"1.5em\", fontSize:\"midium\"}}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(false)}\r\n              startIcon={<CancelIcon/>}\r\n            >\r\n            閉じる\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分設定を新規登録する画面(モーダル表示する)\r\nexport function KubunSettingInModal(props) {\r\n  const [changedValueKubun, setValueKubun] = useState(\"\");\r\n  const [changedValueKubunName, setValueKubunName] = useState(\"\");\r\n  const [changedValueComment, setValueComment] = useState(\"\");\r\n\r\n  // Modalは非表示の状態でもレンダリング処理が入る為、openフラグがtrueの時にのみ表示する\r\n  // 区分情報を新たに登録。タイミング:クローリング情報画面にて、updateボタンを押下した時\r\n  const onClick = (e) => {\r\n    if (e == true) {\r\n      if(changedValueKubun != \"\" && changedValueKubunName != \"\" && changedValueComment != \"\") {\r\n        // 親コンポーネントの区分リスト新規登録処理を呼び出す\r\n        props.callNewKubunList(\r\n          changedValueKubun,\r\n          changedValueKubunName,\r\n          changedValueComment,\r\n        )\r\n      } else {\r\n        alert(\"全ての項目を入力してください!\");\r\n      }\r\n    } else {\r\n      // CLOSEボタン押下処理\r\n      props.modalWrapperFlag(e);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Fade in={props.open}>\r\n      <Paper className={\"modalActive\"}>\r\n        <Typography style={{padding: \"0.5em\"}}>\r\n          <div style={{margin: 8}}>\r\n            <label style={{fontSize:\"12\", fontWeight:\"bold\"}}>区分設定登録</label>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"区分\"\r\n              defaultValue={changedValueKubun}\r\n              style={{width: \"10%\", margin: 8, fontSize:\"midium\"}}\r\n              rows={1}\r\n              onChange={(e)=> setValueKubun(e.target.value)}\r\n            ></TextField>\r\n            <TextField\r\n              label=\"区分名称\"\r\n              defaultValue={changedValueKubunName}\r\n              style={{width: \"20%\",　margin: 8, fontSize:\"midium\"}}\r\n              rows={1}\r\n              onChange={(e)=> setValueKubunName(e.target.value)}\r\n            ></TextField>\r\n            <TextField\r\n                label=\"コメント\"\r\n                defaultValue={changedValueComment}\r\n                style={{width: \"50%\", margin: 8, fontSize:\"midium\"}}\r\n                rows={1}\r\n                onChange={(e)=> setValueComment(e.target.value)}\r\n            ></TextField>\r\n          </div>\r\n        </Typography>\r\n        <Grid container style={{fontSize:\"midium\"}} justify=\"flex-end\" direction=\"row\">\r\n          <Grid item>\r\n            <Button\r\n              style={{margin: \"1.5em\", fontSize:\"midium\"}}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(true, e)}\r\n              startIcon={<AddCircleIcon/>}\r\n            >\r\n            登録\r\n            </Button>\r\n            <Button\r\n              style={{margin: \"1.5em\", fontSize:\"midium\"}}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e)=>onClick(false, e)}\r\n              startIcon={<CancelIcon/>}\r\n            >\r\n            閉じる\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n}","///////////////////////////////////////////////////////////////// \r\n// マテリアルテーブルのカラムを生成する\r\n/////////////////////////////////////////////////////////////////\r\n// クローリング設定画面で使用\r\nconst columnsCrawlSetting =\r\n    [\r\n        {title:'区分', field:'kbn', cellStyle:{fontSize:\"0.8em\", width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\",  width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\"}},\r\n        {title:'区分名称', field:'kbnname', cellStyle:{fontSize:\"0.8em\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\"}},\r\n        {title:'サイトID', field:'jigyosyaid', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\"}},\r\n        {title:'サイト名称', field:'name', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\"}},\r\n        {title:'記事ID', field:'kiziid', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\", maxWidth:\"15%\"}},\r\n        {title:'画像', field:'imageFileRes', cellStyle:{fontSize:\"0.8em\", width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"8%\", minWidth:\"8%\", maxWidth:\"8%\"}},\r\n        {title:'記事タイトル', field:'title', cellStyle:{fontSize:\"0.8em\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\", padding:\"0.5em\"}, headerStyle:{fontWeight:\"bold\", width:\"20%\", minWidth:\"20%\", maxWidth:\"20%\"}},\r\n    ]\r\n\r\n// 区分設定画面。区分セット。(左側のマテリアルテーブル)\r\nconst columnsKubunSetting =\r\n    [\r\n        {title:'区分', field:'kbn', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\",  width:\"15%\", minWidth:\"15%\"}},\r\n        {title:'区分名称', field:'kbnname', cellStyle:{fontSize:\"0.8em\", width:\"20%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\"}},\r\n        {title:'コメント', field:'comment', cellStyle:{fontSize:\"0.8em\", width:\"50%\", minWidth:\"30%\"}, headerStyle:{fontWeight:\"bold\", width:\"30%\", minWidth:\"30%\"}},\r\n    ]\r\n\r\n// 区分設定画面。対象データセット。(右側のマテリアルテーブル)\r\nconst columnsDetailCrawlSetting =\r\n    [\r\n        {title:'区分', field:'kbn', cellStyle:{fontSize:\"0.8em\", width:\"15%\", minWidth:\"5%\"}, headerStyle:{fontWeight:\"bold\",  width:\"5%\", minWidth:\"5%\"}},\r\n        {title:'区分名称', field:'kbnname', cellStyle:{fontSize:\"0.8em\", width:\"25%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\"}},\r\n        {title:'サイトID', field:'jigyosyaid', cellStyle:{fontSize:\"0.8em\", width:\"25%\", minWidth:\"10%\"}, headerStyle:{fontWeight:\"bold\", width:\"10%\", minWidth:\"10%\"}},\r\n        {title:'サイト名称', field:'name', cellStyle:{fontSize:\"0.8em\", width:\"25%\", minWidth:\"15%\"}, headerStyle:{fontWeight:\"bold\", width:\"15%\", minWidth:\"15%\"}},\r\n    ]\r\n\r\nexport const columnsData = (param) => {\r\n    switch(param) {\r\n        case 1:\r\n            return columnsCrawlSetting;\r\n        case 2:\r\n            return columnsKubunSetting;\r\n        case 3:\r\n            return columnsDetailCrawlSetting;\r\n    }\r\n};\r\n\r\n\r\n","///////////////////////////////////////////////////////////////// \r\n// クローリングの設定画面を表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from 'react-redux';\r\n// コンテンツボックスに表示する記事データとクローリング情報のデータ\r\nimport { Kbns, Crawlings } from './showContentsArea.jsx';\r\nimport { Contents } from '../index.jsx';\r\nimport CrawlSettingMaterialTable from '../materialTable/crawlSettingMaterialTable.jsx';\r\nimport { KrawlSettingInModal, RegistKrawlSettingInModal } from './showModalWindow.jsx';\r\nimport ModalWrapper from './showModalWindow.jsx';\r\nimport cssFileControl from '../commonFunc.js';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { columnsData } from '../actions/materialTableColumns.js';\r\nimport { cssFileAble, cssFileDisable } from '../commonFunc.js';\r\nimport * as actions from \"../actions/action.js\"\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// クローリング設定ページを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport class ShowCrawlSetting extends React.Component {\r\n  constructor (props){\r\n    super(props);\r\n    this.state = {\r\n      contents:this.props.thisContentsArticle,\r\n      selectedFileName:this.props.selectedFileName,\r\n      crawlings:Crawlings.getCrawlingList(),\r\n      open:false,\r\n      modalIndex:0,\r\n      selectedItem:null,\r\n      selectedCrawling:null,\r\n      status:this.props.status,\r\n      recentFileUpdate:\"未取得\",\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // componentWillMount()\r\n  componentWillMount() {\r\n    // メイン画面のCSSファイル解除\r\n    cssFileControl(\"App.css\", \"showCrawlSetting.css\");\r\n    // 最終クロール日時\r\n    Contents.recentUpdateFileDate(1, \"mtime\") // パラメータ:2は区分リスト\r\n    .then((response) => {\r\n      if(response) {\r\n        this.setState({recentFileUpdate:this.props.mtime});\r\n      } else {\r\n        this.setState({recentFileUpdate:\"取得できませんでした\"});\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // componentDidMount()\r\n  componentDidMount() {\r\n    // ステータスの背景色指定\r\n    var element = document.getElementById(\"p-status-data\");\r\n    if(this.props.status == \"停止\") {\r\n      element.style.backgroundColor = \"#005FFF\";\r\n    } else if(this.props.status == \"実行中\") {\r\n      element.style.backgroundColor = \"#00FF3B\";\r\n    } else if(this.props.status == \"実行完了\") {\r\n      element.style.backgroundColor = \"#FF4F02\";\r\n    } else if(this.props.status == \"エラー\") {\r\n      element.style.backgroundColor = \"#FF0000\";\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 設定一覧で選択されたコンテンツデータを返す。\r\n  setItem = (item) => {\r\n    var target = this.props.thisContentsArticle.findIndex((v) => v.kiziid === item.kiziid);\r\n    this.setState({selectedItem:this.props.thisContentsArticle[target]});\r\n\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 設定一覧で選択されたコンテンツのクローリング情報を返す。\r\n  setSelectedCrawling = (item) => {\r\n    var target = this.state.crawlings.crawling.findIndex((v) => v.kbn === item.kbn && v.jigyosyaid === item.jigyosyaid);\r\n    this.setState({selectedCrawling:this.state.crawlings.crawling[target]});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // CrawlingList.jsのクローリング情報の更新処理を呼び出す。this.state.selectedItemを更新している。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callUpdateCrawlingList = (\r\n    item,\r\n    changedCrawlingUrl,\r\n    changedCrawlingXpathTitle,\r\n    changedValueCrawlingXpathLink,\r\n    changedValueCrawlingXpathImage) => { \r\n      Crawlings.setUpdateCrawlingList (\r\n        item,\r\n        changedCrawlingUrl,\r\n        changedCrawlingXpathTitle,\r\n        changedValueCrawlingXpathLink,\r\n        changedValueCrawlingXpathImage\r\n      )\r\n      .then((response) => {\r\n        if (response.flag) {\r\n          var copyCrawlingList = Crawlings.getCrawlingList();\r\n          this.setState({crawlings:copyCrawlingList});\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // CrawlingList.jsのクローリング情報の新規登録処理を呼び出す。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callNewCrawlingList = (item) => { \r\n      Crawlings.addNewCrawlingList(item)\r\n      .then((response) => {\r\n        if (response.flag) {\r\n          // 既存の区分リストのthis.stateにセット\r\n          var copyCrawlingList = Crawlings.getCrawlingList();\r\n          this.setState({crawlings:copyCrawlingList});\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示・非表示の設定をフラグ管理する\r\n  modalWrapperFlag = (e) => {\r\n    this.state.open ? this.setState({open:false}) : this.setState({open:true});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示する画面の種別を判定\r\n  // (init)0:編集画面 1:新規登録画面\r\n  setModalIndex = (props) => {\r\n    // パラメータの値をthis.stateにセット\r\n    this.setState({modalIndex:props});\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 全て開始ボタン押下時の処理\r\n  execCrawling = () => {\r\n    var element = document.getElementById(\"p-status-data\");\r\n    var status= this.props.status;\r\n\r\n    if(status == \"停止\" || status == \"エラー\" || status == \"実行完了\") {\r\n      this.props.setCrawlingStatus(\"実行中\");\r\n      cssFileAble(\"loading.css\");\r\n      element.style.backgroundColor = \"#00FF3B\";\r\n      // クローリング実行処理呼び出し、実行結果取得\r\n      Crawlings.execCrawling()\r\n      .then((response) => {\r\n        // 実行結果レスポンスが返却された場合、ステータスを「実行完了」に。ローディングCSSを無効に。\r\n          this.props.setCrawlingStatus(\"実行完了\");\r\n          cssFileDisable(\"loading.css\");\r\n          element.style.backgroundColor = \"#FF4F02\";          \r\n          // 最終クローリング日時を更新\r\n          Contents.recentUpdateFileDate(1, \"mtime\") // パラメータ:2は区分リスト\r\n          .then((response) => {\r\n            if(response) {\r\n              this.setState({recentFileUpdate:this.props.mtime});\r\n              // コンテンツファイル名のリストを取得\r\n              Contents.recentUpdateFileDate(1, \"list\").then(() => {});\r\n            } else {\r\n              this.setState({recentFileUpdate:\"取得できませんでした\"});\r\n            }\r\n            cssFileDisable(\"loading.css\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        this.props.setCrawlingStatus(\"エラー\");\r\n        cssFileDisable(\"loading.css\");\r\n        element.style.backgroundColor = \"#FF0000\";\r\n      });\r\n    } else {\r\n      alert(\"クローリング実行中は無効です。\");\r\n    }\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // レンダー\r\n  render() {\r\n    ///////////////////////////////////////////////////////////////// \r\n    // モーダル表示する画面の種別に対応したjsxを返却\r\n    // (init)0:編集画面 1:新規登録画面\r\n    const setModalJsx = () => {\r\n      if(this.state.modalIndex === 0) {\r\n        return (\r\n          <KrawlSettingInModal \r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            selectedItem={this.state.selectedItem}\r\n            selectedCrawling={this.state.selectedCrawling}\r\n            callUpdateCrawlingList={this.callUpdateCrawlingList}\r\n          />\r\n        );\r\n      } else if(this.state.modalIndex === 1) {\r\n        return (\r\n          <RegistKrawlSettingInModal\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            kbns={Kbns.getKbnList()}\r\n            setModalIndex={this.setModalIndex}\r\n            callNewCrawlingList={this.callNewCrawlingList}\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    return(\r\n      <div>\r\n        <Grid container spacing={1}>\r\n          <Grid Item xs={3} style={{padding: \"0.5em\"}}>\r\n            <Button\r\n              id=\"button-krawlsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              variant=\"contained\"\r\n              onClick={()=>{\r\n                this.setModalIndex(1);\r\n                this.modalWrapperFlag();\r\n              }}\r\n              startIcon={<AddCircleIcon/>}\r\n            >サイト登録</Button>\r\n            <Button\r\n              id=\"button-krawlsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              variant=\"contained\"\r\n              onClick={()=>this.execCrawling()}\r\n              startIcon={<AddCircleIcon/>}\r\n            >すべて開始</Button>\r\n          </Grid>\r\n          <Grid Item id=\"crawl-status\" xs={2} style={{padding: \"0.5em\", margin:\"0.5em\"}}>\r\n            <div id=\"label-reffer-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>参照データ</p></div>\r\n            <div id=\"label-reffer-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>&nbsp;{this.props.selectedFileName}</p></div>\r\n          </Grid>\r\n          <Grid Item id=\"crawl-status\" xs={2} style={{padding: \"0.5em\", margin:\"0.5em\"}}>\r\n            <div id=\"label-krawl-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>最終クロール日時</p></div>\r\n            <div id=\"label-krawl-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>&nbsp;{this.props.mtime}</p></div>\r\n            <div id=\"label-status-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>クロール状態</p></div>\r\n            <div id=\"label-status-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p id=\"p-status-data\">{this.props.status}</p></div>\r\n          </Grid>\r\n        </Grid>\r\n        {/* パラメータの数字1はクローリング設定画面を指す(他の画面と区別する為) */}\r\n        <CrawlSettingMaterialTable\r\n          columns={columnsData(1)}\r\n          data={this.props.thisContentsArticle}\r\n          actions={1}\r\n          editable={1}\r\n          modalWrapperFlag={this.modalWrapperFlag}\r\n          setItem={this.setItem}\r\n          setSelectedCrawling={this.setSelectedCrawling}\r\n        />\r\n        <ModalWrapper\r\n          modalWrapperFlag={this.modalWrapperFlag}\r\n          open={this.state.open}\r\n          content={setModalJsx()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// ReactコンポーネントとReduxストアをコネクト\r\nconst mapStateToProps = (state) => ({\r\n  thisContentsArticle: state.componentReducer.thisContents.article,\r\n  selectedFileName: state.componentReducer.selectedFileName,\r\n  status: state.componentReducer.status,\r\n  mtime: state.componentReducer.mtime\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCrawlingStatus: str => dispatch(actions.SET_CRAWLING_STATUS(str))\r\n});\r\n\r\nconst ContainerShowCrawlSetting = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ShowCrawlSetting);\r\n\r\nexport default ContainerShowCrawlSetting;","/////////////////////////////////////////////////////////////////\r\n// MaterialTable表示\r\n/////////////////////////////////////////////////////////////////\r\nimport React, { forwardRef, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Crawlings } from '../show/showContentsArea.jsx';\r\n\r\n// MaterialTableに使用するアイコンをインポート\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Save from '@material-ui/icons/Save';\r\n\r\n// MaterialTableに使用するアイコンを定数化\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    Save: forwardRef((props, ref) => <Save {...props} ref={ref} />)\r\n  };\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// MaterialTableを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport default function DetailCrawlSettingMaterialTable(props) {\r\n  // クロール対象データのデータをセット\r\n  const [data, setData] = useState(props.data);\r\n  /////////////////////////////////////////////////////////////////\r\n  // 区分設定画面。現在登録されているクロールデータ。\r\n  const editableDetailCrawlSetting =\r\n    <MaterialTable\r\n        title=\"対象データセット\"\r\n        columns={props.columns}\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\teditable={{\r\n        ///////////////////////////////////////////////////////////////// \r\n        // クロール対象データの削除処理\r\n        onRowDelete:\r\n        (oldData) =>\r\n          new Promise((resolve,reject) => {\r\n            var dataSet = {\"delete\":[]};\r\n            // setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              // バックエンドに渡す為の削除対象データ\r\n              dataSet.delete.push(oldData);\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              resolve(dataSet)\r\n            // }, 1000);\r\n          })\r\n          .then((response) => {\r\n\t\t\t\t\t\tCrawlings.setDeleteCrawlingList(response);\r\n            props.setStateCrawling();\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          }),\r\n        }}\r\n      options={{\r\n        showTitle: true,\r\n        search: true,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0, fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      localization={{\r\n        header:{actions: ''},\r\n        body:{\r\n          editRow:{\r\n            deleteText:\"データは削除されます。よろしいですか？\",\r\n          },\r\n        },\r\n      }}\r\n      icons={tableIcons}\r\n      options={{\r\n        showTitle: true,\r\n        search: false,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0,  fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      actions={[\r\n        {\r\n\t\t\t\t\t///////////////////////////////////////////////////////////////// \r\n\t\t\t\t\t// クロール対象データの編集処理\r\n\t\t\t\t\ticon:Edit,\r\n\t\t\t\t\ttooltip:\"Edt your's settings.\",\r\n\t\t\t\t\tcellStyle:{fontSize: \"0.8em\", width: \"10%\", minWidth: \"10%\"},\r\n\t\t\t\t\theaderStyle:{fontWeight: \"bold\",  width: \"10%\", minWidth: \"10%\"},\r\n\t\t\t\t\tonClick:(e, rowData) => {\r\n\t\t\t\t\t\tprops.setModalIndex(2);\r\n\t\t\t\t\t\tprops.modalWrapperFlag();\r\n\t\t\t\t\t\tprops.setItem(rowData);\r\n\t\t\t\t\t}\r\n        }\r\n      ]}\r\n    />\r\n  /////////////////////////////////////////////////////////////////\r\n  // MaterialTableの戻り値\r\n  return(\r\n\t\t<div className=\"materialDetailCrawlSetting\" style={{ maxWidth:\"36%\", minWidth:\"36%\", padding:\"0.5em\", fontSize:\"10pt\"}}>\r\n\t\t\t{editableDetailCrawlSetting}\r\n\t\t</div>\r\n\t);\r\n}\r\n","/////////////////////////////////////////////////////////////////\r\n// MaterialTable表示\r\n/////////////////////////////////////////////////////////////////\r\nimport React, { forwardRef, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Kbns } from '../show/showContentsArea.jsx';\r\n\r\n// MaterialTableに使用するアイコンをインポート\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Save from '@material-ui/icons/Save';\r\nimport DetailPanel from '@material-ui/icons/Details';\r\n\r\n// MaterialTableに使用するアイコンを定数化\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    Save: forwardRef((props, ref) => <Save {...props} ref={ref} />)\r\n  };\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// MaterialTableを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport default function KubunSettingMaterialTable(props) {\r\n  // 区分リストのデータをセット\r\n  const [data, setData] = useState(props.data);\r\n  /////////////////////////////////////////////////////////////////\r\n  // 区分セット。MaterialTableのeditable属性\r\n  const editableKubunSetting =\r\n    <MaterialTable\r\n      title=\"区分セット\"\r\n      columns={props.columns}\r\n       data={data}\r\n       editable={{\r\n        ///////////////////////////////////////////////////////////////// \r\n        // 区分リストの編集処理\r\n        onRowUpdate:(newData, oldData) =>\r\n        new Promise((resolve, reject) => {\r\n          var dataSet = {\"before\":[], \"after\":[]};\r\n          // setTimeout(() => {\r\n            // const dataUpdate = [...data];\r\n            // const index = oldData.tableData.id;\r\n            // dataSet.before.push(data[index]);\r\n            // dataUpdate[index] = newData;\r\n            // setData([...dataUpdate]);\r\n            dataSet.before.push(oldData);\r\n            dataSet.after.push(newData);\r\n            resolve(dataSet);\r\n          // }, 1000);\r\n        })\r\n        .then((response) => {\r\n          Kbns.setEditKubunList(response);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        }),\r\n        ///////////////////////////////////////////////////////////////// \r\n        // 区分リストの削除処理\r\n        onRowDelete:\r\n        (oldData) =>\r\n          new Promise((resolve,reject) => {\r\n            var dataSet = {\"delete\":[]};\r\n            // setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              // バックエンドに渡す為の削除対象データ\r\n              dataSet.delete.push(oldData);\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              resolve(dataSet)\r\n            // }, 1000);\r\n          })\r\n          .then((response) => {\r\n            Kbns.setDeleteKubunList(response);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          }),\r\n      }}\r\n      options={{\r\n        showTitle: true,\r\n        search: true,\r\n        tableLayout: \"auto\",\r\n        overflowX: \"scroll\",\r\n        paging: false,\r\n        maxBodyHeight: 450,\r\n        headerStyle: { position: 'sticky', top: 0, fontSize:\"9pt\" },\r\n        searchFieldStyle:{padding:\"0.5em\", fontSize:\"8pt\"},\r\n      }}\r\n      localization={{\r\n        header:{actions: ''},\r\n        body:{editRow:{deleteText:\"データは削除されます。よろしいですか？\"},},        \r\n      }}\r\n      icons={tableIcons}\r\n      actions={[\r\n        // 詳細ボタン。現在登録されているクロールデータを表示する\r\n        {\r\n          icon:DetailPanel,\r\n          tooltip:\"Edt your's settings.\",\r\n          cellStyle:{fontSize: \"0.8em\", width: \"10%\", minWidth: \"10%\"},\r\n          headerStyle:{fontWeight: \"bold\",  width: \"10%\", minWidth: \"10%\"},\r\n          onClick:(e, rowData) => {\r\n            props.setSelectedCrawling(rowData);\r\n          }\r\n        }        \r\n      ]}\r\n    />\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  // MaterialTableの戻り値\r\n  return(\r\n      <div className=\"materialKubunSetting\" style={{ maxWidth:\"45%\", minWidth:\"45%\", marginLeft: \"16.6rem\", padding:\"0.5em\", fontSize:\"10pt\"}}>\r\n        {editableKubunSetting}\r\n      </div>\r\n  );\r\n}\r\n","///////////////////////////////////////////////////////////////// \r\n// クローリングの設定画面を表示するクラス\r\n///////////////////////////////////////////////////////////////// \r\nimport React from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\n// import update from 'immutability-helper';\r\n// コンテンツボックスに表示する記事データとクローリング情報のデータ\r\nimport { Kbns, Crawlings } from './showContentsArea.jsx';\r\nimport { Contents } from '../index.jsx';\r\nimport DetailCrawlSettingMaterialTable from '../materialTable/detailCrawlSettingMaterialTable.jsx';\r\nimport KubunSettingMaterialTable from '../materialTable/kubunSettingMaterialTable.jsx';\r\nimport { KubunSettingInModal, ShortKrawlSettingInModal, RegistKrawlSettingInModal } from './showModalWindow.jsx';\r\nimport ModalWrapper from './showModalWindow.jsx';\r\nimport cssFileControl from '../commonFunc.js';\r\nimport { cssFileDisable } from '../commonFunc.js';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { columnsData } from '../actions/materialTableColumns';\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// 区分設定ページを生成する、ルートコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nexport default class ShowKubunSetting extends React.Component {\r\n  constructor (props){\r\n    super(props);\r\n    this.state = {\r\n      kbns:Kbns.getKbnList(),\r\n      crawlings:Crawlings.getCrawlingList(),\r\n      selectedCrawling:null,\r\n      selectedItem:null,\r\n      open:false,\r\n      modalIndex:0,\r\n      recentFileUpdate:\"未取得\",\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // componentWillMount()\r\n  componentWillMount() {\r\n    // メイン画面のCSSファイル解除\r\n    cssFileControl(\"App.css\", \"showCrawlSetting.css\");\r\n    cssFileDisable(\"loading.css\");\r\n    this.recentKubunUpdateDate();\r\n    this.setState({selectedCrawling:[]})\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 設定一覧で選択されたコンテンツデータを返す。\r\n  setItem = (item) => {\r\n    this.setState({selectedItem:item});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分セットテーブルで選択された区分のクロール対象データを返す。\r\n  setSelectedCrawling = (item) => {\r\n    var filter =  this.state.crawlings.crawling.filter((v) => v.kbn == item.kbn);\r\n    var dummyList = [];\r\n    if(filter.length != 0) {\r\n      filter.map((i, index) => {\r\n        let list = {};\r\n        list.kbn = i.kbn\r\n        list.kbnname = i.kbnname\r\n        list.jigyosyaid = i.jigyosyaid\r\n        list.name = i.name\r\n        list.crawlingurl = i.crawlingurl\r\n        list.xpathTitle = i.xpathTitle\r\n        list.xpathLink = i.xpathLink\r\n        list.xpathImage = i.xpathImage\r\n        dummyList.push(list);\r\n      });\r\n    }\r\n    this.setState({selectedCrawling:dummyList})\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // CrawlingList.jsのクローリング情報の更新処理を呼び出す。this.state.selectedItemを更新している。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callUpdateCrawlingList = (\r\n    item,\r\n    changedCrawlingUrl,\r\n    changedCrawlingXpathTitle,\r\n    changedValueCrawlingXpathLink,\r\n    changedValueCrawlingXpathImage) => { \r\n      Crawlings.setUpdateCrawlingList (\r\n        item,\r\n        changedCrawlingUrl,\r\n        changedCrawlingXpathTitle,\r\n        changedValueCrawlingXpathLink,\r\n        changedValueCrawlingXpathImage\r\n      )\r\n      .then((response) => {\r\n        if (response.flag) {\r\n          // 既存のthis.stateにセット\r\n          var copyCrawlingList = Crawlings.getCrawlingList();\r\n          this.setState({crawlings:copyCrawlingList});\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // クローリング情報の新規登録処理を呼び出す。\r\n  // jsonオブジェクトのデータも更新する。\r\n  callNewCrawlingList = (item) => { \r\n    Crawlings.addNewCrawlingList(item)\r\n    .then((response) => {\r\n      if (response.flag) {\r\n        // 既存のthis.stateにセット\r\n        var copyCrawlingList = Crawlings.getCrawlingList();\r\n        this.setState({crawlings:copyCrawlingList});\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // this.state.crawlingsを更新する\r\n  setStateCrawling = () => {\r\n    var copyCrawlingList = Crawlings.getCrawlingList();\r\n    this.setState({crawlings:copyCrawlingList});\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 区分情報を新規登録する処理。this.state及びjsonデータも更新する。\r\n  callNewKubunList = (changedValueKubun, changedValueKubunName, changedValueComment) => { \r\n    // 非同期処理開始\r\n    Kbns.setNewKubunList(changedValueKubun, changedValueKubunName, changedValueComment) // レスポンスはjsonオブジェクト\r\n    .then((response)=> {\r\n      // 区分リストのjsonデータの更新が正常終了した場合、this.stateの区分リストも更新する。\r\n      if(response.flag) {\r\n        var copyKubunList = Kbns.getKbnList();\r\n        this.setState({kbns:copyKubunList});\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 編集ボタン押下時の処理はkubunSettingMaterialTable.jsx,detailCrawlSettingMaterialTable.jsx\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 削除ボタン押下時の処理はkubunSettingMaterialTable.jsx,detailCrawlSettingMaterialTable.jsx\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示・非表示の設定をフラグ管理する\r\n  modalWrapperFlag = () => {\r\n    this.state.open ? this.setState({open:false}) : this.setState({open:true});\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // モーダル表示する画面の種別を判定\r\n  // (init)0:編集画面 1:新規登録画面\r\n  setModalIndex = (props) => {\r\n    // パラメータの値をthis.stateにセット\r\n    this.setState({modalIndex:props});\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // 最終更新日時を返す\r\n  recentKubunUpdateDate = () => {\r\n    Contents.recentUpdateFileDate(2, \"mtime\") // パラメータ:2は区分リスト\r\n    .then((response) => {\r\n      if(response) {\r\n        this.setState({recentFileUpdate:response[\"mtime\"]});\r\n      } else {\r\n        this.setState({recentFileUpdate:\"取得できませんでした\"});\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // レンダー\r\n  render() {\r\n    ///////////////////////////////////////////////////////////////// \r\n    // モーダル表示する画面の種別に対応したjsxを返却\r\n    // (init)0:区分セットの区分登録ボタン 1:クロール対象データのデータ登録ボタン 3:クロール対象データの編集ボタン\r\n    const setModalJsx = () => {\r\n      if(this.state.modalIndex === 0) {\r\n        return (\r\n          <KubunSettingInModal \r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            callNewKubunList={this.callNewKubunList}\r\n          />          \r\n        );\r\n      } else if(this.state.modalIndex === 1) {\r\n        return (\r\n          <RegistKrawlSettingInModal\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            kbns={Kbns.getKbnList()}\r\n            setModalIndex={this.setModalIndex}\r\n            callNewCrawlingList={this.callNewCrawlingList}\r\n          />\r\n        );\r\n      } else if(this.state.modalIndex === 2) {\r\n        return (\r\n          <ShortKrawlSettingInModal \r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            selectedItem={this.state.selectedItem}\r\n            setModalIndex={this.setModalIndex}\r\n            callUpdateCrawlingList={this.callUpdateCrawlingList}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        <Grid container spacing={2} justifyContent=\"flex-start\" style={{padding: \"0.5em\", right: \"30%\"}}>\r\n          <Grid Item xs={3} style={{padding: \"0.5em\"}}>\r\n            <Button\r\n              id=\"button-kubunsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              onClick={()=>this.modalWrapperFlag()}\r\n              startIcon={<AddCircleIcon/>}\r\n            >区分登録</Button>\r\n            <Button\r\n              id=\"button-kubunsetting\"\r\n              style={{margin:\"0.5em\", backgroundColor:\"#1976d2\", color:\"#FFF\"}}\r\n              onClick={()=>{\r\n                this.setModalIndex(1);\r\n                this.modalWrapperFlag()\r\n              }}\r\n              startIcon={<AddCircleIcon/>}\r\n            >サイト登録</Button>\r\n          </Grid>\r\n          <Grid Item className=\"kubun-status\" xs={2} justifyContent=\"flex-end\" style={{padding: \"0.5em\", margin:\"0.5em\"}} className=\"top-Box\">\r\n            <div className=\"label-title\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>最終更新日時</p></div>\r\n            <div className=\"label-data\" style={{fontSize:\"10pt\", color:\"#FFF\"}}><p>&nbsp;{this.state.recentFileUpdate}</p></div>\r\n          </Grid>\r\n        </Grid>\r\n        <div className=\"materialTableWrapper\">\r\n          {/* パラメータの数字2は区分設定画面の区分セットを指す(他の画面と区別する為) */}\r\n          <KubunSettingMaterialTable\r\n            columns ={columnsData(2)}\r\n            data={this.state.kbns.kbns}\r\n            actions={2}\r\n            editable={2}\r\n            open={this.state.open}\r\n            setSelectedCrawling={this.setSelectedCrawling}\r\n          />\r\n          {/* パラメータの数字3は区分設定画面のクロール対象データセットを指す(他の画面と区別する為) */}\r\n          <DetailCrawlSettingMaterialTable\r\n            columns={columnsData(3)}\r\n            data={this.state.selectedCrawling}\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            setModalIndex={this.setModalIndex}\r\n            open={this.state.open}\r\n            setItem={this.setItem}\r\n            setStateCrawling={this.setStateCrawling}\r\n          />\r\n          <ModalWrapper\r\n            modalWrapperFlag={this.modalWrapperFlag}\r\n            open={this.state.open}\r\n            content={setModalJsx()}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","// メニューバー、ツールバーで使用するライブラリ\r\nimport React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Contents } from '../index.jsx';\r\n\r\n// ルーティングに使用するライブラリ\r\nimport { Link } from 'react-router-dom';\r\nimport * as action from \"../actions/action.js\";\r\nimport store from \"../store/store.js\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n// ツールバーのタイトルのフォントサイズ調整\r\nconst useStyles = makeStyles(theme => ({\r\n\tlistItemText:{\r\n\t\tpaddingLeft:\"1em!important\",\r\n\t\tfontSize:\"10pt!important\",\r\n\t},\r\n\tlistItemTextContentsfile:{\r\n\t\tpaddingLeft:\"2em!important\",\r\n\t\tfontSize:\"10pt!important\",\r\n\t},\r\n\tlinkElementStyleonLogin:{\r\n\t\ttextDecoration: \"none\",\r\n\t},\r\n\tlinkElementStyleonLogout:{\r\n\t\ttextDecoration: \"none\",\r\n\t\tpointerEvents:\"none\",\r\n\t}\r\n}));\r\n\r\nexport default function ResponsiveDrawer(props) {\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// コンテンツメニューの開閉を制御する\r\n\tconst [selectedContentsIndex, setSelectedContentsIndex] = React.useState(0);\r\n\tconst [opencontents, setOpenContents] = React.useState(false);\r\n\tconst styles = useStyles();\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetOpenContents(!opencontents);\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// アイコンボタン押下時のメニュー開閉を制御する\r\n\tconst optionMenuIcon = [\r\n\t\t\"logout\",\r\n\t];\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst open = Boolean(anchorEl);\r\n\tconst [selectedIconIndex, setSelectedIconIndex] = React.useState(0);\r\n\t// アイコンボタン押下処理\r\n\tconst onClickIconButton = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t}\r\n\t// アイコンボタン押下時に現れるメニューより選択したアイテムの押下処理\r\n\tconst onClickSelectedIcon = (event, index) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetSelectedIconIndex(index);\r\n\t\tsetAnchorEl(null);\r\n\t\tif(selectedIconIndex == 0) {\r\n\t\t\t// ログアウト処理\r\n\t\t\tstore.dispatch(action.logout());\r\n\t\t\twindow.location.href = \"/login\";\r\n\t\t}\r\n\t};\r\n\t// メニューを閉じるイベント処理\r\n\tconst handleClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 選択されたコンテンツファイル名にselectedを有効化する\r\n\tconst handleListItemClick = (text) => {\r\n\t\tsetSelectedContentsIndex(text);\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 選択されたコンテンツファイル名を返却\r\n\tconst callApp = (selectedFileName) => {\r\n\t\tContents.getContentsList(selectedFileName);\r\n\t}\r\n\r\n\t///////////////////////////////////////////////////////////////// \r\n\t// 左側のメニューバー\r\n\tconst drawer = (\r\n\t<div>\r\n\t\t<Toolbar/>\r\n\t\t<Divider/>\r\n\t\t<List>\r\n\t\t\t<Link to=\"/ShowCrawlSetting\" style={{textDecoration: \"none\"}}>\r\n\t\t\t\t<ListItem button selected={selectedContentsIndex === 30} onClick={(e) => handleListItemClick(30, e)}>\r\n\t\t\t\t\t<ListItemText primary=\"実行結果セット\" className=\"list-item-text\" classes={{primary:styles.listItemText}}/>\r\n\t\t\t\t</ListItem>\r\n\t \t\t</Link>\r\n\t\t\t<Link to=\"/ShowKubunSetting\" style={{textDecoration: \"none\"}}>\r\n\t\t\t\t<ListItem button selected={selectedContentsIndex === 20}onClick={(e) => handleListItemClick(20, e)}>\r\n\t\t\t\t\t<ListItemText primary=\"区分セット\" className=\"list-item-text\" classes={{primary:styles.listItemText}}/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t</Link>\r\n\t\t\t<ListItem button>\r\n\t\t\t\t<ListItemText primary=\"コンテンツ\" onClick={handleClick} className=\"list-item-text\" classes={{primary:styles.listItemText}}/>\r\n\t\t\t\t{opencontents \r\n\t\t\t\t? <ExpandLess onClick={handleClick} style={{color:\"#FFF\",marginRight: \"1em\"}}/>\r\n\t\t\t\t: <ExpandMore onClick={handleClick} style={{color:\"#FFF\", marginRight: \"1em\"}}/>\r\n\t\t\t\t}\r\n\t\t\t</ListItem>\r\n\t\t\t{/* コンテンツ選択部分 */}\r\n\t\t\t<Collapse in={opencontents} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t{store.getState().componentReducer.fileNameList != undefined &&\r\n\t\t\t\t\tstore.getState().componentReducer.fileNameList.map((fileName, index) => (\r\n\t\t\t\t\t\t<Link to=\"/ShowContentsArea\" key={fileName} style={{textDecoration: \"none\"}}>\r\n\t\t\t\t\t\t\t<ListItem button selected={selectedContentsIndex === fileName} onClick={(e) => {handleListItemClick(fileName, e); callApp(fileName, e)}}>\r\n\t\t\t\t\t\t\t\t<ListItemText primary={fileName} className=\"list-item-text-contentsfile\" classes={{primary:styles.listItemTextContentsfile}}/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t))}\r\n\t\t\t</Collapse>\r\n\t\t</List>\r\n\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Box sx={{ display: 'flex' }}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t{/* 上部のツールバー */}\r\n\t\t\t<AppBar\tposition=\"fixed\" sx={{width: { sm: `calc(100% - ${drawerWidth}px)` },ml: { sm: `${drawerWidth}px` },}}>\r\n\t\t\t<Toolbar style={{justifyContent:\"space-between\"}}>\r\n\t\t\t\t{/* タイトル */}\t\r\n\t\t\t\t<Typography className=\"toolbarTypography\"variant=\"h6\" noWrap component=\"div\" style={{fontSize:\"16pt!important\"}}>Site Checker...</Typography>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\taria-label=\"opencontents drawer\"\r\n\t\t\t\t\tonClick={onClickIconButton}\r\n\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t// sx={{marginRight: '36px', ...(opencontents && { display: 'none' })}}\r\n\t\t\t\t\tsx={{marginRight: '36px', }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t{/* メニューアイコン(ログアウト処理) */}\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Menu\r\n\t\t\t\t\tid=\"lock-menu\"\r\n\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tMenuListProps={{\r\n\t\t\t\t\t\t'aria-labelledby': 'lock-button',\r\n\t\t\t\t\t\trole: 'listbox',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{optionMenuIcon.map((option, index) => (\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\t\t// disabled={index === 0}\r\n\t\t\t\t\t\t\t// selected={index === selectedIconIndex}\r\n\t\t\t\t\t\t\t// onClick={(e) => onClickSelectedIcon(e, index)}\r\n\t\t\t\t\t\t\tonClick={(e) => onClickSelectedIcon(e)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Menu>\r\n\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t{/* 左側のメニューバー表示 */}\r\n\t\t\t<Box component=\"nav\" sx={{width: { sm: drawerWidth }, flexShrink: { sm: 0 } }} aria-label=\"mailbox folders\">\r\n\t\t\t\t{/* 左側のメニューバー表示(中身) */}\r\n\t\t\t\t<Drawer\tvariant=\"permanent\"\tsx={{display: {xs: 'none', sm: 'block' },\t'& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },}} opencontents>\r\n\t\t\t\t\t{drawer}\r\n\t\t\t\t</Drawer>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n}","///////////////////////////////////////////////////////////////// \r\n// エラー発生時に描写するコンポーネント\r\n///////////////////////////////////////////////////////////////// \r\nimport * as React from 'react';\r\n\r\nconst fontFamily = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu',\" +\r\n \t\"'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false,\r\n\t\t\terror: null,\r\n\t\t\terrorInfo: null,\r\n\t\t};\r\n\t}\r\n\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\treturn { hasError: true };\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tthis.setState({error, errorInfo});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\t// エラー時の表示\r\n\t\t\treturn(\r\n\t\t\t\t<div style={{marginLeft:\"17rem\", marginRight:\"17rem\"}}>\r\n\t\t\t\t\t<h1 style={{fontFamily:fontFamily}}>JavaScriptの致命的エラー</h1>\r\n\t\t\t\t\t<pre style={{fontFamily:fontFamily}}>{this.state.error?.message}</pre>\r\n\t\t\t\t\t<pre style={{fontFamily:fontFamily}}>{this.state.errorInfo?.componentStack}</pre>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn(\r\n\t\t\tthis.props.children\r\n\t\t);\r\n\t}\r\n}","import React from \"react\";\r\nimport store from \"./store/store.js\";\r\n\r\nexport default class Auth extends React.Component {\r\n    componentWillMount() {\r\n        this.checkAuth();\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        this.checkAuth();        \r\n    }\r\n\r\n    // セッションnullの場合、ログイン画面へ遷移\r\n    checkAuth() {\r\n        var list = store.getState();\r\n        if(list.loginReducer.status == 0 || list.loginReducer.status == -1) {\r\n            window.location.href = \"/login\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>{this.props.children}</div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport LoginUI from './loginUi.jsx';\r\nimport ShowContentsArea from './show/showContentsArea.jsx';\r\nimport ContainerShowCrawlSetting  from './show/showCrawlSetting.jsx';\r\nimport ShowKubunSetting  from './show/showKubunSetting.jsx';\r\nimport ResponsiveDrawer from './toolbar/toolbar.jsx';\r\nimport ErrorBoundary from './error/errorBoundary.jsx';\r\nimport { cssFileDisable } from './commonFunc.js';\r\nimport Auth from './auth.jsx';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport store from \"./store/store.js\";\r\nimport { Contents } from './index.jsx';\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// メインコンポーネント\r\nexport default class App extends React.Component {\r\n  ///////////////////////////////////////////////////////////////// \r\n  // componentWillMount()\r\n  componentWillMount() {\r\n    // コンテンツリストオブジェクトを取得\r\n    Contents.getContentsList(store.getState().componentReducer.selectedFileName);\r\n    // ローディングCSSを無効化\r\n    cssFileDisable(\"loading.css\");\r\n    // コンテンツファイル名のリストを取得\r\n    Contents.recentUpdateFileDate(1, \"list\");\r\n    // コンテンツリスト(最新のもの)最終更新日時を取得。=最終クローリング日時\r\n    Contents.recentUpdateFileDate(1, \"mtime\");\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////// \r\n  // レンダー\r\n  render() {\r\n    return(\r\n      <ErrorBoundary>\r\n        <div className=\"loading\"><span className=\"circle\"></span></div>\r\n        <Switch>\r\n          <Route exact path='/login' component={LoginUI}/>\r\n          <Auth>\r\n            <ResponsiveDrawer/>\r\n            <Route path='/ShowCrawlSetting' component={ContainerShowCrawlSetting}/>\r\n            <Route path='/ShowKubunSetting' component={ShowKubunSetting}/>\r\n            <Route path='/ShowContentsArea' component={ShowContentsArea}/>\r\n          </Auth>\r\n        </Switch>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}","\r\n/* eslint-disable import/first */\r\nimport * as action from \"../actions/action.js\";\r\nimport store from \"../store/store.js\";\r\nconst ContentsListJson = require('../data/contents/contents.json');\r\nconst ContentsListJsonPath = \"../data/contents\";\r\n\r\n///////////////////////////////////////////////////////////////// \r\n// コンテンツリスト\r\n///////////////////////////////////////////////////////////////// \r\nexport default class ContentsList {\r\n\tconstructor() {\r\n\t\ttry {\r\n\t\t\tthis.ContentsList = ContentsListJson\r\n\t\t} catch(error) {\r\n\t\t\tconsole.error(\"make ContentsList error occarred.\");\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n \r\n\t///////////////////////////////////////////////////////////////// \r\n\t// コンテンツリストのゲッター\r\n\tgetContentsList(fileName) {\r\n\t\ttry {\r\n\t\t\tthis.ContentsList = require(\"../data/contents\" + \"/\" + fileName);\r\n\t\t\tstore.dispatch(action.SET_SELECTED_FILENAME(fileName, this.ContentsList));\r\n\t\t} catch(error) {\r\n\t\t\tconsole.error(\"make ContentsList error occarred.\");\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n  \r\n\t///////////////////////////////////////////////////////////////// \r\n\t// ファイルの更新日時を返す\r\n\trecentUpdateFileDate(fileKubun, request) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t// fetch処理\r\n\t\t\tfetch(\"/recentUpdateFileDate\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tmode: \"no-cors\",\r\n\t\t\t\theders: {\r\n\t\t\t\t\t'Content-Type':'application/json;charset=utf-8',\r\n\t\t\t\t\t'Accept':'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\"fileKubun\":fileKubun,\r\n\t\t\t\t\t\"request\":request\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(function(responseJson) {\r\n\t\t\t\tif(request == \"list\") {\r\n\t\t\t\t\tstore.dispatch(action.SET_FILENAME_LIST(responseJson));\r\n\t\t\t\t} else if(request == \"mtime\") {\r\n\t\t\t\t\tstore.dispatch(action.SET_MTIME(responseJson.mtime));\r\n\t\t\t\t}\r\n\t\t\t\tresolve(responseJson);\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\treject({flag:false});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.jsx';\n// Redux使用部分\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './store/store.js';\n\n///////////////////////////////////////////////////////////////// \n// インスタンス生成エリア\nimport ContentsList from './actions/contentsList.js';\nexport const Contents = new ContentsList(ContentsList);\n\n///////////////////////////////////////////////////////////////// \n// ルートコンポーネント\nexport default class Root extends React.Component {\n  render() {\n    return(\n      <BrowserRouter>\n        <Provider store={store}>\n          <App/>\n        </Provider>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDOM.render(<Root/>, document.getElementById('root'));"],"sourceRoot":""}